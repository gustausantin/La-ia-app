-- =====================================================
-- CREAR PLANTILLAS CRM FALTANTES
-- Ejecutar en Supabase Dashboard ‚Üí SQL Editor
-- =====================================================

-- 1. Obtener restaurant_id autom√°ticamente (primera fila de restaurants)
DO $$
DECLARE
    target_restaurant_id UUID;
    rec RECORD;
BEGIN
    -- Obtener el primer restaurant_id disponible
    SELECT id INTO target_restaurant_id FROM restaurants LIMIT 1;
    
    IF target_restaurant_id IS NULL THEN
        RAISE EXCEPTION 'No se encontr√≥ ning√∫n restaurante en la base de datos';
    END IF;
    
    RAISE NOTICE 'Usando restaurant_id: %', target_restaurant_id;
    
    -- Verificar plantillas existentes
    RAISE NOTICE 'Plantillas existentes:';
    FOR rec IN (
        SELECT name, segment, is_active FROM message_templates 
        WHERE restaurant_id = target_restaurant_id
        ORDER BY segment
    ) LOOP
        RAISE NOTICE '- %: % (activa: %)', rec.segment, rec.name, rec.is_active;
    END LOOP;

    -- 2. CREAR PLANTILLA: Cliente Activo - Agradecimiento
    INSERT INTO message_templates (
        restaurant_id,
        name,
        segment,
        category,
        subject,
        content_markdown,
        variables,
        channel,
        is_active,
        created_at,
        updated_at
    ) VALUES (
        target_restaurant_id,
        'Cliente Activo - Agradecimiento',
        'active',
        'crm',
        'Gracias por ser parte de {{restaurant_name}}',
        'Hola {{customer_name}},

Queremos agradecerte por ser un cliente activo de {{restaurant_name}}. Tus visitas regulares significan mucho para nosotros.

Hemos notado que disfrutas de nuestra cocina y ambiente, y eso nos llena de alegr√≠a. Seguimos trabajando cada d√≠a para ofrecerte la mejor experiencia gastron√≥mica.

Si hay algo espec√≠fico que te gustar√≠a que mejor√°ramos o alg√∫n plato especial que te gustar√≠a probar, ¬°h√°znoslo saber!

Gracias por confiar en nosotros.

Con aprecio,
El equipo de {{restaurant_name}}',
        ARRAY['restaurant_name', 'customer_name'],
        'email',
        true,
        NOW(),
        NOW()
    );

    -- 3. CREAR PLANTILLA: Cliente en Riesgo - Atenci√≥n Especial  
    INSERT INTO message_templates (
        restaurant_id,
        name,
        segment,
        category,
        subject,
        content_markdown,
        variables,
        channel,
        is_active,
        created_at,
        updated_at
    ) VALUES (
        target_restaurant_id,
        'Cliente en Riesgo - Atenci√≥n Especial',
        'at_risk',
        'crm',
        '¬øC√≥mo podemos mejorar tu experiencia en {{restaurant_name}}?',
        'Hola {{customer_name}},

Hemos notado que ha pasado un tiempo desde tu √∫ltima visita a {{restaurant_name}}, y queremos asegurarnos de que todo est√© bien.

Tu opini√≥n es muy importante para nosotros. Si hubo algo en tu √∫ltima experiencia que no cumpli√≥ con tus expectativas, nos encantar√≠a saberlo para poder mejorarlo.

Estamos comprometidos a ofrecerte el mejor servicio posible, y tu feedback nos ayuda a lograrlo.

¬øTe gustar√≠a que te contactemos para hablar sobre c√≥mo podemos hacer que tu pr√≥xima visita sea perfecta?

Valoramos mucho tu confianza.

Atentamente,
El equipo de {{restaurant_name}}',
        ARRAY['restaurant_name', 'customer_name'],
        'email',
        true,
        NOW(),
        NOW()
    );

    -- 4. Verificar que se crearon correctamente
    RAISE NOTICE 'Plantillas creadas:';
    FOR rec IN (
        SELECT name, segment, subject, is_active, created_at
        FROM message_templates 
        WHERE restaurant_id = target_restaurant_id
        AND segment IN ('active', 'at_risk')
        ORDER BY segment
    ) LOOP
        RAISE NOTICE '‚úÖ %: % (activa: %)', rec.segment, rec.name, rec.is_active;
    END LOOP;

    RAISE NOTICE 'üéâ PLANTILLAS CREADAS: Cliente Activo y Cliente Riesgo - Listas para usar';
END $$;

-- =====================================================
-- VERIFICACI√ìN FINAL: Mostrar todas las plantillas
-- =====================================================
SELECT 
    segment,
    name,
    subject,
    is_active,
    channel,
    created_at::date as fecha_creacion
FROM message_templates 
WHERE restaurant_id = (SELECT id FROM restaurants LIMIT 1)
ORDER BY 
    CASE segment 
        WHEN 'nuevo' THEN 1
        WHEN 'activo' THEN 2  
        WHEN 'vip' THEN 3
        WHEN 'inactivo' THEN 4
        WHEN 'noshow' THEN 5
        WHEN 'riesgo' THEN 6
        ELSE 7
    END;
