// Script para probar el registro exactamente como lo hace el frontend
import { createClient } from '@supabase/supabase-js';

// Usar las mismas credenciales que el frontend
const supabaseUrl = 'https://ktsqwvhqamedpmzkzjaz.supabase.co';
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imt0c3F3dmhxYW1lZHBtemt6amF6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQzNzY3NzEsImV4cCI6MjA2OTk1Mjc3MX0.Y-zMa2F5a7UVT-efldv0sZjLAgmCfeEmhxfP7kgGzNY';

// Cliente normal (como el frontend)
const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function probarRegistroFrontend() {
  console.log('üß™ PROBANDO REGISTRO COMO FRONTEND');
  console.log('=====================================');
  
  const testEmail = `frontend-test-${Date.now()}@example.com`;
  const testPassword = 'Kx9#mP2$vL8@qR5!nW3&';
  
  try {
    console.log('\nüìß Email de prueba:', testEmail);
    console.log('üîó URL de confirmaci√≥n: https://la-ia-app.vercel.app/confirm');
    
    // Simular exactamente lo que hace Login.jsx
    console.log('\n1Ô∏è‚É£ Ejecutando supabase.auth.signUp...');
    const { data: authData, error: authError } = await supabase.auth.signUp({
      email: testEmail,
      password: testPassword,
      options: {
        data: {
          restaurant_name: 'Restaurante de Prueba',
          phone: '+34666777888',
          city: 'Madrid',
          address: 'Calle Test 123',
          postal_code: '28001',
          cuisine_type: 'Mediterr√°nea',
        },
        emailRedirectTo: 'https://la-ia-app.vercel.app/confirm',
      },
    });

    if (authError) {
      console.log('‚ùå Error en signUp:', authError.message);
      console.log('C√≥digo:', authError.code);
      
      if (authError.code === 'over_email_send_rate_limit') {
        console.log('üö® RATE LIMIT DETECTADO');
        console.log('Esto significa que Supabase ha alcanzado el l√≠mite de emails por hora');
        console.log('Soluciones:');
        console.log('1. Esperar 1 hora');
        console.log('2. Configurar SMTP personalizado en Supabase Dashboard');
        console.log('3. Usar un proveedor de email externo');
      }
      
      return;
    }

    if (authData.user) {
      console.log('‚úÖ Usuario creado exitosamente');
      console.log('ID:', authData.user.id);
      console.log('Email:', authData.user.email);
      console.log('Email confirmado:', authData.user.email_confirmed_at ? 'S√≠' : 'No');
      
      if (authData.user.email_confirmed_at) {
        console.log('‚ö†Ô∏è  Email ya confirmado - esto es raro para un registro nuevo');
      } else {
        console.log('üìß Email de confirmaci√≥n deber√≠a haber sido enviado');
      }
      
      // Probar reenv√≠o de confirmaci√≥n
      console.log('\n2Ô∏è‚É£ Probando reenv√≠o de confirmaci√≥n...');
      const { error: resendError } = await supabase.auth.resend({
        type: 'signup',
        email: testEmail,
        options: {
          emailRedirectTo: 'https://la-ia-app.vercel.app/confirm',
        }
      });

      if (resendError) {
        console.log('‚ùå Error en reenv√≠o:', resendError.message);
        console.log('C√≥digo:', resendError.code);
      } else {
        console.log('‚úÖ Reenv√≠o exitoso');
      }
      
    } else {
      console.log('‚ö†Ô∏è  No se cre√≥ usuario pero tampoco hay error');
    }

  } catch (error) {
    console.log('‚ùå Error general:', error.message);
  }

  console.log('\n=====================================');
  console.log('üèÅ PRUEBA COMPLETADA');
  console.log('\nüí° RECOMENDACIONES:');
  console.log('1. Revisa tu carpeta de SPAM');
  console.log('2. Verifica que el email no est√© en lista negra');
  console.log('3. Comprueba la configuraci√≥n SMTP en Supabase Dashboard');
  console.log('4. Si persiste, configura un proveedor de email personalizado');
}

// Ejecutar prueba
probarRegistroFrontend().catch(console.error);
