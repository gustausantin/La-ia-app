-- =========================================
-- SCRIPT DE LIMPIEZA DE DATOS DUPLICADOS
-- =========================================
-- Este script limpia COMPLETAMENTE todos los datos del restaurante demo
-- para evitar duplicaciones al ejecutar m√∫ltiples veces

BEGIN;

-- ==========================================
-- LIMPIAR TODAS LAS TABLAS EN ORDEN CORRECTO
-- ==========================================

-- Eliminar en orden de dependencias (foreign keys)
DELETE FROM billing_tickets WHERE restaurant_id IN (SELECT id FROM restaurants WHERE name = 'Restaurante Demo');
DELETE FROM noshow_actions WHERE restaurant_id IN (SELECT id FROM restaurants WHERE name = 'Restaurante Demo');
DELETE FROM messages WHERE restaurant_id IN (SELECT id FROM restaurants WHERE name = 'Restaurante Demo');
DELETE FROM conversations WHERE restaurant_id IN (SELECT id FROM restaurants WHERE name = 'Restaurante Demo');
DELETE FROM reservations WHERE restaurant_id IN (SELECT id FROM restaurants WHERE name = 'Restaurante Demo');
DELETE FROM availability_slots WHERE restaurant_id IN (SELECT id FROM restaurants WHERE name = 'Restaurante Demo');
DELETE FROM message_templates WHERE restaurant_id IN (SELECT id FROM restaurants WHERE name = 'Restaurante Demo');
DELETE FROM crm_templates WHERE restaurant_id IN (SELECT id FROM restaurants WHERE name = 'Restaurante Demo');
DELETE FROM customers WHERE restaurant_id IN (SELECT id FROM restaurants WHERE name = 'Restaurante Demo');
DELETE FROM tables WHERE restaurant_id IN (SELECT id FROM restaurants WHERE name = 'Restaurante Demo');

-- Verificar limpieza
DO $$
DECLARE
    total_customers INTEGER;
    total_reservations INTEGER;
    total_tickets INTEGER;
    total_conversations INTEGER;
    total_messages INTEGER;
    total_tables INTEGER;
BEGIN
    -- Contar registros despu√©s de limpieza
    SELECT COUNT(*) INTO total_customers FROM customers WHERE restaurant_id IN (SELECT id FROM restaurants WHERE name = 'Restaurante Demo');
    SELECT COUNT(*) INTO total_reservations FROM reservations WHERE restaurant_id IN (SELECT id FROM restaurants WHERE name = 'Restaurante Demo');
    SELECT COUNT(*) INTO total_tickets FROM billing_tickets WHERE restaurant_id IN (SELECT id FROM restaurants WHERE name = 'Restaurante Demo');
    SELECT COUNT(*) INTO total_conversations FROM conversations WHERE restaurant_id IN (SELECT id FROM restaurants WHERE name = 'Restaurante Demo');
    SELECT COUNT(*) INTO total_messages FROM messages WHERE restaurant_id IN (SELECT id FROM restaurants WHERE name = 'Restaurante Demo');
    SELECT COUNT(*) INTO total_tables FROM tables WHERE restaurant_id IN (SELECT id FROM restaurants WHERE name = 'Restaurante Demo');
    
    RAISE NOTICE '';
    RAISE NOTICE 'üßπ ===== LIMPIEZA COMPLETADA ===== üßπ';
    RAISE NOTICE '';
    RAISE NOTICE 'üìä REGISTROS DESPU√âS DE LIMPIEZA:';
    RAISE NOTICE 'üë• Clientes: %', total_customers;
    RAISE NOTICE 'üçΩÔ∏è Mesas: %', total_tables;
    RAISE NOTICE 'üìÖ Reservas: %', total_reservations;
    RAISE NOTICE 'üßæ Tickets: %', total_tickets;
    RAISE NOTICE 'üí¨ Conversaciones: %', total_conversations;
    RAISE NOTICE 'üì® Mensajes: %', total_messages;
    RAISE NOTICE '';
    RAISE NOTICE '‚úÖ BASE DE DATOS LIMPIA - LISTA PARA NUEVA CARGA';
    RAISE NOTICE 'üöÄ AHORA EJECUTA create-COMPLETE-restaurant-life.sql UNA SOLA VEZ';
END $$;

COMMIT;
