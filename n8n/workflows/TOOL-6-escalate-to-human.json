{
  "name": "TOOL 6 - Escalate to Human",
  "nodes": [
    {
      "parameters": {},
      "id": "tool-escalate-trigger",
      "name": "▶️ Start (Tool Call)",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [200, 300]
    },
    {
      "parameters": {
        "jsCode": "const input = $input.first().json;\n\nconsole.log('🆘 ESCALADO A HUMANO:', input);\n\nconst reason = input.reason || 'cliente_solicita';\nconst customerPhone = input.customer_phone || 'No disponible';\nconst customerName = input.customer_name || 'Cliente';\nconst customerMessage = input.customer_message || 'Sin detalles';\nconst urgency = input.urgency || 'high';\n\n// Mapeo de razones a español\nconst reasonMap = {\n  'cliente_solicita': '🙋 El cliente solicita hablar con una persona',\n  'situacion_compleja': '🤔 Situación compleja fuera del alcance del agente',\n  'queja_grave': '😡 Queja grave del cliente',\n  'informacion_no_disponible': 'ℹ️ Información no disponible en el sistema',\n  'error_sistema': '⚠️ Error del sistema'\n};\n\nconst reasonText = reasonMap[reason] || reason;\nconst urgencyEmoji = urgency === 'high' ? '🚨🚨🚨' : '⚠️';\n\nreturn {\n  reason,\n  reasonText,\n  customerPhone,\n  customerName,\n  customerMessage,\n  urgency,\n  urgencyEmoji,\n  timestamp: new Date().toISOString()\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [400, 300],
      "id": "prepare-escalation",
      "name": "📋 Preparar Escalado"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "restaurants",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "keyValue": "={{ $('▶️ Start (Tool Call)').item.json.restaurant_id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [600, 300],
      "id": "get-restaurant",
      "name": "🏪 Get Restaurant",
      "credentials": {
        "supabaseApi": {
          "id": "9pdl4V7ImejCLZWo",
          "name": "Supabase La-IA"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const escalation = $('📋 Preparar Escalado').first().json;\nconst restaurant = $input.first().json;\n\nconst channels = restaurant.channels || {};\nconst whatsapp = channels.whatsapp || {};\n\n// ✅ NÚMERO DE TWILIO (quien ENVÍA - FROM)\nconst twilioNumber = whatsapp.phone_number || restaurant.phone;\n\n// ✅ NÚMERO DE EMERGENCIA (quien RECIBE - TO)\nconst emergencyPhone = whatsapp.emergency_phone;\n\n// Validaciones\nif (!twilioNumber) {\n  throw new Error('❌ No se encontró número de Twilio para el restaurante (channels.whatsapp.phone_number)');\n}\n\nif (!emergencyPhone) {\n  throw new Error('❌ No se encontró teléfono de emergencia para el restaurante (channels.whatsapp.emergency_phone)');\n}\n\n// Construir mensaje de alerta\nconst message = `${escalation.urgencyEmoji} ALERTA - CLIENTE NECESITA ATENCIÓN\\n\\n${escalation.reasonText}\\n\\n👤 Cliente: ${escalation.customerName}\\n📞 Teléfono: ${escalation.customerPhone}\\n⏰ Hora: ${new Date().toLocaleString('es-ES')}\\n\\n💬 Mensaje del cliente:\\n\"${escalation.customerMessage}\"\\n\\n⚡ Acción requerida: Contactar al cliente URGENTEMENTE\\n\\n---\\nRestaurante: ${restaurant.name}`;\n\nconsole.log('📤 Configuración envío:');\nconsole.log('   FROM (Twilio):', twilioNumber);\nconsole.log('   TO (Emergencia):', emergencyPhone);\nconsole.log('   Mensaje:', message.substring(0, 100) + '...');\n\nreturn {\n  ...escalation,\n  restaurant_name: restaurant.name,\n  twilio_number: twilioNumber,\n  emergency_phone: emergencyPhone,\n  alert_message: message\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [800, 300],
      "id": "build-alert",
      "name": "🚨 Construir Alerta"
    },
    {
      "parameters": {
        "from": "={{ $json.twilio_number }}",
        "to": "={{ $json.emergency_phone }}",
        "toWhatsapp": true,
        "message": "={{ $json.alert_message }}",
        "options": {}
      },
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [1000, 300],
      "id": "send-whatsapp-alert",
      "name": "📱 Enviar WhatsApp Urgente",
      "credentials": {
        "twilioApi": {
          "id": "KZF7OfG2zH2XYZAQ",
          "name": "Twilio account"
        }
      }
    },
    {
      "parameters": {
        "tableId": "escalations",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "restaurant_id",
              "fieldValue": "={{ $('▶️ Start (Tool Call)').item.json.restaurant_id }}"
            },
            {
              "fieldId": "customer_phone",
              "fieldValue": "={{ $('📋 Preparar Escalado').item.json.customerPhone }}"
            },
            {
              "fieldId": "customer_name",
              "fieldValue": "={{ $('📋 Preparar Escalado').item.json.customerName }}"
            },
            {
              "fieldId": "reason",
              "fieldValue": "={{ $('📋 Preparar Escalado').item.json.reason }}"
            },
            {
              "fieldId": "urgency",
              "fieldValue": "={{ $('📋 Preparar Escalado').item.json.urgency }}"
            },
            {
              "fieldId": "customer_message",
              "fieldValue": "={{ $('📋 Preparar Escalado').item.json.customerMessage }}"
            },
            {
              "fieldId": "status",
              "fieldValue": "pending"
            },
            {
              "fieldId": "escalated_at",
              "fieldValue": "={{ $('📋 Preparar Escalado').item.json.timestamp }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [1200, 300],
      "id": "log-escalation",
      "name": "💾 Registrar Escalado",
      "credentials": {
        "supabaseApi": {
          "id": "9pdl4V7ImejCLZWo",
          "name": "Supabase La-IA"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const escalation = $('📋 Preparar Escalado').first().json;\n\nconsole.log('✅ Escalado completado:', escalation.customerName);\n\n// Respuesta para el agente\nreturn {\n  success: true,\n  message: 'El encargado ha sido notificado y te contactará en breve.',\n  escalated: true,\n  escalation_id: $input.first().json.id\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1400, 300],
      "id": "return-success",
      "name": "✅ Devolver Resultado"
    }
  ],
  "connections": {
    "▶️ Start (Tool Call)": {
      "main": [[{"node": "📋 Preparar Escalado", "type": "main", "index": 0}]]
    },
    "📋 Preparar Escalado": {
      "main": [[{"node": "🏪 Get Restaurant", "type": "main", "index": 0}]]
    },
    "🏪 Get Restaurant": {
      "main": [[{"node": "🚨 Construir Alerta", "type": "main", "index": 0}]]
    },
    "🚨 Construir Alerta": {
      "main": [[{"node": "📱 Enviar WhatsApp Urgente", "type": "main", "index": 0}]]
    },
    "📱 Enviar WhatsApp Urgente": {
      "main": [[{"node": "💾 Registrar Escalado", "type": "main", "index": 0}]]
    },
    "💾 Registrar Escalado": {
      "main": [[{"node": "✅ Devolver Resultado", "type": "main", "index": 0}]]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "tags": []
}

