{
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "confirmation-handler",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "80ebd008-7f01-4520-944f-1c66c320ee21",
      "name": "📥 Webhook: Nueva Reserva",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -768,
        -128
      ],
      "webhookId": "confirmation-handler-webhook"
    },
    {
      "parameters": {
        "jsCode": "// =====================================================\n// 🔍 VALIDAR INPUT Y CALCULAR TIEMPO HASTA RESERVA\n// =====================================================\n\nconst input = $input.first().json.body || $input.first().json;  // ✅ Acceder a .body\n\nconsole.log('📥 Input recibido:', input);\n\n// Validar campos obligatorios\nif (!input.reservation_id) throw new Error('reservation_id es obligatorio');\nif (!input.restaurant_id) throw new Error('restaurant_id es obligatorio');\nif (!input.reservation_date) throw new Error('reservation_date es obligatorio');\nif (!input.reservation_time) throw new Error('reservation_time es obligatorio');\nif (!input.customer_phone) throw new Error('customer_phone es obligatorio');\n\n// Calcular tiempo hasta la reserva\nconst now = new Date();\nconst reservationDateTime = new Date(`${input.reservation_date}T${input.reservation_time}`);\nconst hoursUntil = (reservationDateTime - now) / (1000 * 60 * 60);\nconst minutesUntil = (reservationDateTime - now) / (1000 * 60);\n\nconsole.log('⏰ Tiempo hasta reserva:', {\n  hours: hoursUntil.toFixed(2),\n  minutes: minutesUntil.toFixed(0),\n  reservation_datetime: reservationDateTime.toISOString()\n});\n\n// Determinar tipo de mensaje\nlet messageType = 'immediate';\nlet sendNow = false;\nlet reason = '';\n\nif (hoursUntil > 24) {\n  messageType = '24h';\n  sendNow = false;\n  reason = 'Más de 24h: Dejar que cron 24h lo maneje';\n} else if (hoursUntil >= 4) {\n  messageType = '4h';\n  sendNow = true;\n  reason = 'Entre 4-24h: Enviar confirmación AHORA';\n} else if (hoursUntil >= 2) {\n  messageType = '2h';\n  sendNow = true;\n  reason = 'Entre 2-4h: Enviar recordatorio URGENTE';\n} else if (hoursUntil > 0) {\n  messageType = 'immediate';\n  sendNow = true;\n  reason = 'Menos de 2h: Enviar recordatorio INMEDIATO';\n} else {\n  throw new Error('❌ La reserva ya pasó (fecha/hora en el pasado)');\n}\n\nconsole.log('✅ Decisión:', { messageType, sendNow, reason });\n\nreturn {\n  ...input,\n  hours_until: hoursUntil,\n  minutes_until: minutesUntil,\n  message_type: messageType,\n  send_now: sendNow,\n  decision_reason: reason\n};"
      },
      "id": "79da0c02-6874-4af5-b1a4-3d891ccf4770",
      "name": "⏰ Calcular Tiempo y Decidir",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -576,
        -128
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://ktsqwvhqamedpmzkzjaz.supabase.co/rest/v1/rpc/check_confirmation_sent",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "supabaseApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"p_reservation_id\": \"{{ $json.reservation_id }}\",\n  \"p_message_type\": \"{{ $json.message_type }}\"\n}",
        "options": {}
      },
      "id": "a519814e-fd7a-44a9-bbda-a181c9f0ac41",
      "name": "🔍 Verificar Duplicado (RPC)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -368,
        -128
      ],
      "credentials": {
        "supabaseApi": {
          "id": "9pdl4V7ImejCLZWo",
          "name": "Supabase La-IA"
        }
      },
      "notes": "✅ RPC: Rápida y segura para verificar duplicados"
    },
    {
      "parameters": {
        "jsCode": "// =====================================================\n// 🔄 PROCESAR RESULTADO DE VERIFICACIÓN\n// =====================================================\n\nconst data = $('⏰ Calcular Tiempo y Decidir').first().json;\nconst checkResult = $input.first().json;\n\nconsole.log('📊 Resultado verificación:', checkResult);\n\n// La RPC retorna boolean directamente\nconst alreadySent = checkResult === true;\n\nconsole.log(alreadySent ? '⚠️ Ya se envió este tipo de mensaje' : '✅ No hay duplicado');\n\nreturn {\n  ...data,\n  already_sent: alreadySent,\n  should_send: data.send_now && !alreadySent\n};"
      },
      "id": "d5f9216e-d3fd-46c3-86d1-dca0123de739",
      "name": "🔄 Procesar Verificación",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -176,
        -128
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "should-send",
              "leftValue": "={{ $json.should_send }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "559c3b50-d33e-4d00-915f-b191ef25f807",
      "name": "❓ ¿Enviar Ahora?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        16,
        -128
      ],
      "notes": "Bifurca: Enviar vs Registrar sin enviar"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "restaurants",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $json.restaurant_id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        224,
        -240
      ],
      "id": "a78345d2-c875-4d16-9f29-e64723a67a7a",
      "name": "🏪 Obtener Info Restaurante",
      "credentials": {
        "supabaseApi": {
          "id": "9pdl4V7ImejCLZWo",
          "name": "Supabase La-IA"
        }
      },
      "notes": "✅ Obtiene el restaurante por restaurant_id para extraer el número WhatsApp"
    },
    {
      "parameters": {
        "jsCode": "// =====================================================\n// 📞 EXTRAER NÚMERO WHATSAPP DEL RESTAURANTE\n// =====================================================\n\nconst previousData = $('❓ ¿Enviar Ahora?').first().json;\nconst restaurant = $input.first().json;\n\nconsole.log('🏪 Restaurante obtenido:', restaurant.name);\n\n// Extraer el número dedicado para canales IA\nconst channels = restaurant.channels || {};\nconst whatsappChannel = channels.whatsapp || {};\n\n// El número dedicado para canales IA (el que usas en el super agent)\nconst phoneNumber = whatsappChannel.phone_number || '+14155238886';\n\nconsole.log('📞 Número WhatsApp del restaurante:', phoneNumber);\n\n// Validar que sea el formato correcto para Twilio\nlet twilioFrom = phoneNumber;\nif (!twilioFrom.startsWith('whatsapp:')) {\n  twilioFrom = `whatsapp:${phoneNumber}`;\n}\n\nconsole.log('✅ Número formateado para Twilio:', twilioFrom);\n\nreturn {\n  ...previousData,\n  restaurant_whatsapp_number: twilioFrom\n};"
      },
      "id": "b8c9d7e6-4f23-5a12-9b3c-8d42f1e06789",
      "name": "📞 Extraer Número WhatsApp",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        432,
        -272
      ],
      "notes": "✅ Extrae channels.whatsapp.phone_number del restaurante"
    },
    {
      "parameters": {
        "jsCode": "// =====================================================\n// 📞 NORMALIZAR TELÉFONO DEL CLIENTE\n// =====================================================\n\nconst data = $input.first().json;\nlet phone = data.customer_phone || '';\n\n// Normalizar a formato internacional\nif (phone && !phone.startsWith('+')) {\n  if (phone.startsWith('34')) {\n    phone = '+' + phone;\n  } else if (phone.startsWith('0034')) {\n    phone = '+' + phone.substring(2);\n  } else {\n    phone = '+34' + phone;\n  }\n}\n\nconsole.log('📞 Teléfono del cliente normalizado:', { original: data.customer_phone, normalized: phone });\n\nreturn {\n  ...data,\n  phone_normalized: phone\n};"
      },
      "id": "cfa3d9eb-72a4-4873-aa76-4e24946bfa64",
      "name": "📞 Normalizar Teléfono Cliente",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        640,
        -272
      ]
    },
    {
      "parameters": {
        "jsCode": "// =====================================================\n// 📝 CONSTRUIR MENSAJE DE WHATSAPP\n// =====================================================\n\nconst data = $input.first().json;\n\nlet message = '';\nconst customerName = data.customer_name || 'Cliente';\nconst date = new Date(data.reservation_date).toLocaleDateString('es-ES', { \n  weekday: 'long', day: 'numeric', month: 'long' \n});\nconst time = data.reservation_time.substring(0, 5);\nconst partySize = data.party_size || '';\n\nswitch(data.message_type) {\n  case 'immediate':\n    message = `¡Hola ${customerName}! 👋\\n\\nTu reserva para *${partySize} persona${partySize > 1 ? 's' : ''}* está confirmada para *HOY ${time}*.\\n\\n⚠️ *La reserva es muy pronto*, por favor confírmanos tu asistencia respondiendo SÍ o NO.\\n\\n¡Nos vemos pronto! 🍽️`;\n    break;\n    \n  case '2h':\n    message = `¡Hola ${customerName}! 👋\\n\\nTe recordamos tu reserva para *${partySize} persona${partySize > 1 ? 's' : ''}* *HOY a las ${time}* (en ~2 horas).\\n\\nPor favor, confírmanos tu asistencia respondiendo SÍ o NO.\\n\\n¡Te esperamos! 🍽️`;\n    break;\n    \n  case '4h':\n    message = `¡Hola ${customerName}! 👋\\n\\nTe recordamos tu reserva para *${partySize} persona${partySize > 1 ? 's' : ''}* *${date}* a las *${time}*.\\n\\nPor favor, confírmanos tu asistencia respondiendo SÍ o NO.\\n\\nSi necesitas modificarla, ¡avísanos! 📞`;\n    break;\n}\n\nconsole.log('📝 Mensaje construido:', message);\n\nreturn {\n  ...data,\n  message_content: message\n};"
      },
      "id": "49d0dae3-9fad-41ab-8e3e-052701fd10bc",
      "name": "📝 Construir Mensaje",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        848,
        -272
      ]
    },
    {
      "parameters": {
        "from": "={{ $json.restaurant_whatsapp_number }}",
        "to": "={{ $json.phone_normalized }}",
        "toWhatsapp": true,
        "message": "={{ $json.message_content }}",
        "options": {}
      },
      "id": "43927652-cca4-422f-b4e0-b06573076e91",
      "name": "📱 Enviar WhatsApp (Twilio)",
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [
        1056,
        -272
      ],
      "credentials": {
        "twilioApi": {
          "id": "KZF7OfG2zH2XYZAQ",
          "name": "Twilio account"
        }
      },
      "notes": "✅ Usa el número del restaurante dinámicamente"
    },
    {
      "parameters": {
        "tableId": "confirmation_messages",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "reservation_id",
              "fieldValue": "={{ $('📝 Construir Mensaje').item.json.reservation_id }}"
            },
            {
              "fieldId": "restaurant_id",
              "fieldValue": "={{ $('📝 Construir Mensaje').item.json.restaurant_id }}"
            },
            {
              "fieldId": "message_type",
              "fieldValue": "={{ $('📝 Construir Mensaje').item.json.message_type }}"
            },
            {
              "fieldId": "status",
              "fieldValue": "sent"
            },
            {
              "fieldId": "customer_phone",
              "fieldValue": "={{ $('📝 Construir Mensaje').item.json.phone_normalized }}"
            },
            {
              "fieldId": "customer_name",
              "fieldValue": "={{ $('📝 Construir Mensaje').item.json.customer_name }}"
            },
            {
              "fieldId": "reservation_date",
              "fieldValue": "={{ $('📝 Construir Mensaje').item.json.reservation_date }}"
            },
            {
              "fieldId": "reservation_time",
              "fieldValue": "={{ $('📝 Construir Mensaje').item.json.reservation_time }}"
            },
            {
              "fieldId": "message_content",
              "fieldValue": "={{ $('📝 Construir Mensaje').item.json.message_content }}"
            }
          ]
        }
      },
      "id": "f707a1b5-28ab-4220-a447-550bd3687143",
      "name": "💾 Registrar Envío (Supabase)",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1264,
        -272
      ],
      "credentials": {
        "supabaseApi": {
          "id": "9pdl4V7ImejCLZWo",
          "name": "Supabase La-IA"
        }
      },
      "notes": "✅ Nodo nativo de Supabase - Más visual y claro"
    },
    {
      "parameters": {
        "jsCode": "const data = $('📝 Construir Mensaje').first().json;\n\nconsole.log('✅ Mensaje enviado y registrado');\n\nreturn {\n  success: true,\n  message_type: data.message_type,\n  reservation_id: data.reservation_id,\n  sent_at: new Date().toISOString(),\n  message: '✅ Confirmación enviada correctamente'\n};"
      },
      "id": "93b35392-631f-4ba2-96d7-90bcce78a1d8",
      "name": "✅ Respuesta: Enviado",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1472,
        -272
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}",
        "options": {}
      },
      "id": "a7e74c6e-1505-4b07-b245-06791e690eca",
      "name": "📤 Respuesta HTTP: OK",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1680,
        -272
      ]
    },
    {
      "parameters": {
        "jsCode": "const data = $input.first().json;\n\nconsole.log('ℹ️ No se envía ahora:', data.decision_reason);\n\nreturn {\n  success: true,\n  action: 'deferred',\n  message_type: data.message_type,\n  reservation_id: data.reservation_id,\n  hours_until: data.hours_until,\n  reason: data.decision_reason,\n  message: data.already_sent \n    ? '⚠️ Ya se envió este tipo de mensaje'\n    : '✅ Se enviará por cron cuando corresponda'\n};"
      },
      "id": "450af81b-dc89-473c-8eaa-8f2003890206",
      "name": "ℹ️ Respuesta: Diferido",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        320,
        -32
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}",
        "options": {}
      },
      "id": "3833189c-8b4b-4b0c-af77-adb91b7133ad",
      "name": "📤 Respuesta HTTP: Diferido",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        528,
        -32
      ]
    }
  ],
  "connections": {
    "📥 Webhook: Nueva Reserva": {
      "main": [
        [
          {
            "node": "⏰ Calcular Tiempo y Decidir",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "⏰ Calcular Tiempo y Decidir": {
      "main": [
        [
          {
            "node": "🔍 Verificar Duplicado (RPC)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🔍 Verificar Duplicado (RPC)": {
      "main": [
        [
          {
            "node": "🔄 Procesar Verificación",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🔄 Procesar Verificación": {
      "main": [
        [
          {
            "node": "❓ ¿Enviar Ahora?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "❓ ¿Enviar Ahora?": {
      "main": [
        [
          {
            "node": "🏪 Obtener Info Restaurante",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ℹ️ Respuesta: Diferido",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🏪 Obtener Info Restaurante": {
      "main": [
        [
          {
            "node": "📞 Extraer Número WhatsApp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "📞 Extraer Número WhatsApp": {
      "main": [
        [
          {
            "node": "📞 Normalizar Teléfono Cliente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "📞 Normalizar Teléfono Cliente": {
      "main": [
        [
          {
            "node": "📝 Construir Mensaje",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "📝 Construir Mensaje": {
      "main": [
        [
          {
            "node": "📱 Enviar WhatsApp (Twilio)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "📱 Enviar WhatsApp (Twilio)": {
      "main": [
        [
          {
            "node": "💾 Registrar Envío (Supabase)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "💾 Registrar Envío (Supabase)": {
      "main": [
        [
          {
            "node": "✅ Respuesta: Enviado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "✅ Respuesta: Enviado": {
      "main": [
        [
          {
            "node": "📤 Respuesta HTTP: OK",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ℹ️ Respuesta: Diferido": {
      "main": [
        [
          {
            "node": "📤 Respuesta HTTP: Diferido",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {
    "📥 Webhook: Nueva Reserva": [
      {
        "headers": {
          "host": "gustausantin.app.n8n.cloud",
          "user-agent": "axios/1.12.0",
          "content-length": "244",
          "accept": "application/json,text/html,application/xhtml+xml,application/xml,text/*;q=0.9, image/*;q=0.8, */*;q=0.7",
          "accept-encoding": "gzip, br",
          "cdn-loop": "cloudflare; loops=1; subreqs=1",
          "cf-connecting-ip": "20.218.238.124",
          "cf-ew-via": "15",
          "cf-ipcountry": "DE",
          "cf-ray": "9927fde603495d6d-FRA",
          "cf-visitor": "{\"scheme\":\"https\"}",
          "cf-worker": "n8n.cloud",
          "content-type": "application/json",
          "x-forwarded-for": "20.218.238.124, 172.69.151.120",
          "x-forwarded-host": "gustausantin.app.n8n.cloud",
          "x-forwarded-port": "443",
          "x-forwarded-proto": "https",
          "x-forwarded-server": "traefik-prod-users-gwc-34-f494454b5-rhxmd",
          "x-is-trusted": "yes",
          "x-real-ip": "20.218.238.124"
        },
        "params": {},
        "query": {},
        "body": {
          "reservation_id": "25a8e70e-1857-404e-b27d-4a2c27fa47ec",
          "restaurant_id": "d6b63130-1ebf-4284-98fc-a3b31a85d9d1",
          "customer_name": "Gustau",
          "customer_phone": " +34671126148",
          "reservation_date": "2025-10-22",
          "reservation_time": "13:00",
          "party_size": 4
        },
        "webhookUrl": "https://gustausantin.app.n8n.cloud/webhook/confirmation-handler",
        "executionMode": "production"
      }
    ]
  },
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "968c65341fc947850f62b4a42d249947219a244717952c0dbaf2b62952e73bd9"
  }
}

