{
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "whatsapp-webhook",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [
        -2576,
        -144
      ],
      "id": "836349f9-a5d3-431b-bdd1-831e01fd4dbb",
      "name": "üì± Webhook WhatsApp",
      "webhookId": "whatsapp-inbound"
    },
    {
      "parameters": {
        "jsCode": "const webhookData = $input.first().json;\nconst data = webhookData.body || webhookData;\n\nconsole.log('üì• Webhook recibido:', JSON.stringify(data, null, 2));\n\n// Funci√≥n para limpiar SOLO 'whatsapp:' pero DEJAR el '+'\nconst cleanPhone = (phone) => {\n  if (!phone) return '';\n  return phone.toString().replace('whatsapp:', '').trim();\n};\n\nconst fromRaw = data.From || '';\nconst toRaw = data.To || '';\nconst body = data.Body || '';\nconst profileName = data.ProfileName || 'Cliente';\n\n// Limpiar pero MANTENER el '+'\nconst customerPhone = cleanPhone(fromRaw);\nconst restaurantPhone = cleanPhone(toRaw);\n\n// üé§ DETECTAR SI ES AUDIO O TEXTO\nconst numMedia = parseInt(data.NumMedia || '0');\nconst messageType = numMedia > 0 ? 'audio' : 'text';\nconst mediaUrl = data.MediaUrl0 || null;\nconst mediaContentType = data.MediaContentType0 || null;\n\n// BUFFER KEY: solo tel√©fono\nconst bufferKey = customerPhone;\n\nconsole.log('‚úÖ Datos procesados:', { \n  customerPhone, \n  restaurantPhone, \n  messageType,\n  body, \n  mediaUrl,\n  bufferKey \n});\n\nreturn {\n  customer_phone: customerPhone,\n  customer_name: profileName,\n  message_text: body,\n  restaurant_phone: restaurantPhone,\n  buffer_key: bufferKey,\n  message_type: messageType,\n  media_url: mediaUrl,\n  media_content_type: mediaContentType,\n  timestamp: new Date().toISOString()\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2400,
        -144
      ],
      "id": "f519c68b-a9d4-49ad-b63b-bbb92e64ba0c",
      "name": "üìù Normalizar"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "restaurants",
        "returnAll": true
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1616,
        -128
      ],
      "id": "ad8c1976-dac4-464b-b6f3-81b36d4cc0c6",
      "name": "üîç Get Restaurants",
      "credentials": {
        "supabaseApi": {
          "id": "9pdl4V7ImejCLZWo",
          "name": "Supabase La-IA"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const normalized = $('üìù Normalizar').first().json;\nconst restaurants = $input.all();\n\nconsole.log('üîç Buscando restaurante para:', normalized.restaurant_phone);\n\nconst matched = restaurants.find(r => {\n  const restaurant = r.json;\n  const channels = restaurant.channels || {};\n  const whatsapp = channels.whatsapp || {};\n  const whatsappNumber = whatsapp.phone_number || '';\n  \n  console.log(`  ${restaurant.name}: ${whatsappNumber} === ${normalized.restaurant_phone}`);\n  \n  return whatsappNumber === normalized.restaurant_phone;\n});\n\nif (!matched) {\n  console.error('‚ùå No se encontr√≥ restaurante');\n  throw new Error(`Restaurant not found for ${normalized.restaurant_phone}`);\n}\n\nconsole.log('‚úÖ Match:', matched.json.name);\n\nreturn {\n  ...normalized,\n  restaurant_id: matched.json.id,\n  restaurant_name: matched.json.name\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1456,
        -128
      ],
      "id": "fe349dc8-3e8f-4db8-b596-ce83f6371c48",
      "name": "‚úÖ Find Restaurant"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://ktsqwvhqamedpmzkzjaz.supabase.co/rest/v1/rpc/upsert_whatsapp_buffer",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imt0c3F3dmhxYW1lZHBtemt6amF6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQzNzY3NzEsImV4cCI6MjA2OTk1Mjc3MX0.Y-zMa2F5a7UVT-efldv0sZjLAgmCfeEmhxfP7kgGzNY"
            },
            {
              "name": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imt0c3F3dmhxYW1lZHBtemt6amF6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQzNzY3NzEsImV4cCI6MjA2OTk1Mjc3MX0.Y-zMa2F5a7UVT-efldv0sZjLAgmCfeEmhxfP7kgGzNY"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "p_buffer_key",
              "value": "={{ $json.buffer_key }}"
            },
            {
              "name": "p_restaurant_id",
              "value": "={{ $json.restaurant_id }}"
            },
            {
              "name": "p_customer_phone",
              "value": "={{ $json.customer_phone }}"
            },
            {
              "name": "p_customer_name",
              "value": "={{ $json.customer_name }}"
            },
            {
              "name": "p_message_text",
              "value": "={{ $json.message_text }}"
            },
            {
              "name": "p_timestamp",
              "value": "={{ $json.timestamp }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1248,
        -128
      ],
      "id": "2fd86238-e3cc-4421-9e6a-d9a32bd97446",
      "name": "üîÑ UPSERT Buffer"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ JSON.stringify({status: 'ok', message: 'buffered', buffer_key: $json.buffer_key}) }}",
        "options": {
          "responseCode": 200
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -1040,
        -240
      ],
      "id": "65c291b1-da69-4671-9bf5-2d37d2598ec7",
      "name": "‚úÖ OK (Guardado)"
    },
    {
      "parameters": {
        "jsCode": "const findRestaurant = $input.first().json;\n\nconsole.log('üîÑ Mensaje guardado en buffer:', findRestaurant.buffer_key);\nconsole.log('‚è≥ Iniciando loop de verificaci√≥n (15s)');\n\n// Guardar el timestamp de ESTE mensaje para comparar despu√©s\nreturn {\n  ...findRestaurant,\n  loop_start_time: new Date().toISOString()\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1040,
        -16
      ],
      "id": "4e54d202-0ec8-46fc-8a46-e2b880c9ece8",
      "name": "üìå Marcar Inicio Loop"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -848,
        -16
      ],
      "id": "7af62428-e90f-4418-a6ee-c22019707cc5",
      "name": "üîÅ Loop"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "whatsapp_message_buffer",
        "filters": {
          "conditions": [
            {
              "keyName": "buffer_key",
              "keyValue": "={{ $json.buffer_key }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -512,
        0
      ],
      "id": "a0776d88-fbce-4556-b9a8-0f061fe3e7e6",
      "name": "üìä Get Buffer Actualizado",
      "credentials": {
        "supabaseApi": {
          "id": "9pdl4V7ImejCLZWo",
          "name": "Supabase La-IA"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "check-buffer-exists",
              "leftValue": "={{ $json.buffer_key }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -352,
        0
      ],
      "id": "e1d2d7c2-1ad7-4679-8b00-9b3edf3f8bf0",
      "name": "‚ùì ¬øBuffer existe?"
    },
    {
      "parameters": {
        "jsCode": "const buffer = $input.first().json;\nconst loopData = $('üìå Marcar Inicio Loop').first().json;\n\nconst loopStartTime = new Date(loopData.loop_start_time).getTime();\nconst bufferLastMessage = new Date(buffer.last_message_at).getTime();\n\nconsole.log('üîç Verificando si buffer fue actualizado:');\nconsole.log('  - Loop iniciado en:', loopData.loop_start_time);\nconsole.log('  - √öltimo mensaje del buffer:', buffer.last_message_at);\n\n// Si el √∫ltimo mensaje del buffer es POSTERIOR a cuando iniciamos este loop,\n// significa que lleg√≥ un mensaje nuevo y otro loop lo est√° procesando\nconst bufferWasUpdated = bufferLastMessage > loopStartTime;\n\nif (bufferWasUpdated) {\n  console.log('‚ö†Ô∏è Buffer actualizado. Saliendo del loop (otro proceso m√°s reciente lo manejar√°).');\n  return { \n    ...buffer,\n    continue_loop: false,\n    should_process: false,\n    reason: 'updated_during_loop'\n  };\n}\n\nconsole.log('‚úÖ Buffer NO actualizado. Saliendo del loop para procesar.');\n\nreturn {\n  continue_loop: false,\n  should_process: true,\n  channel: 'whatsapp',\n  restaurant_id: buffer.restaurant_id,\n  customer_phone: buffer.customer_phone,\n  customer_name: buffer.customer_name,\n  user_message: buffer.messages,\n  message_count: buffer.message_count,\n  buffer_key: buffer.buffer_key,\n  timestamp: new Date().toISOString()\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -672,
        -304
      ],
      "id": "ed775dce-a5d8-47de-b167-e27ff5f5a802",
      "name": "üîç Verificar Actualizaci√≥n"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "check-should-process",
              "leftValue": "={{ $json.should_process }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -512,
        -320
      ],
      "id": "d775b049-eaff-4e0b-81fb-2781627f0e9f",
      "name": "‚ùì ¬øProcesar buffer?"
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "whatsapp_message_buffer",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "buffer_key",
              "condition": "eq",
              "keyValue": "={{ $json.buffer_key }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -288,
        -432
      ],
      "id": "46eb450a-e9d1-4451-b47e-5d94d772359c",
      "name": "üóëÔ∏è Eliminar Buffer",
      "credentials": {
        "supabaseApi": {
          "id": "9pdl4V7ImejCLZWo",
          "name": "Supabase La-IA"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "f0ablC4Xpp2y3duy",
          "mode": "list",
          "cachedResultUrl": "/workflow/f0ablC4Xpp2y3duy",
          "cachedResultName": " Agent IA ‚Äî 2  Gateway Unificado"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -80,
        -432
      ],
      "id": "9437d549-02d4-488a-9cdd-73f68d23952f",
      "name": "üöÄ Ejecutar Gateway"
    },
    {
      "parameters": {
        "jsCode": "console.log('‚è≠Ô∏è Buffer actualizado por mensaje m√°s reciente. Este loop termina sin procesar.');\nreturn { status: 'skipped', reason: 'buffer_updated_by_newer_message' };"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -288,
        -208
      ],
      "id": "6fcc5d14-78b4-4c37-ba8a-0a647613081e",
      "name": "‚è≠Ô∏è Log: Skip"
    },
    {
      "parameters": {
        "jsCode": "console.log('‚ö†Ô∏è Buffer no existe (ya fue procesado por otro loop)');\nreturn { status: 'skipped', reason: 'buffer_already_processed' };"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -96,
        96
      ],
      "id": "71f8699b-5a84-4c6f-b17e-a67ebf5f1fdc",
      "name": "‚è≠Ô∏è Log: Ya Procesado"
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -672,
        0
      ],
      "id": "d22d2cb3-f352-4bd3-b215-88f0f36ce699",
      "name": "‚è∞ Wait 10s",
      "webhookId": "wait-buffer-loop"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "check-audio",
              "leftValue": "={{ $json.message_type }}",
              "rightValue": "audio",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -2240,
        -144
      ],
      "id": "a9719e5c-5166-4ed4-bd59-764f5256e0f5",
      "name": "‚ùì ¬øEs Audio?"
    },
    {
      "parameters": {
        "url": "={{ $json.media_url }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "audio/*"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "file",
              "outputPropertyName": "data"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2080,
        -304
      ],
      "id": "800f6087-fb7c-4df7-9be1-2c37fe612734",
      "name": "üì• Descargar Audio",
      "credentials": {
        "httpBasicAuth": {
          "id": "4t8uLY3IX9iNcaE9",
          "name": "Twilio Pruebas"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// =====================================\n// NODO: üìÑ Formatear Transcripci√≥n\n// OBJETIVO: Convertir audio a TEXTO ID√âNTICO al flujo normal\n// CORRECCI√ìN: NO devolver media_url ni media_content_type\n// =====================================\n\nconst transcription = $json.text;\nconst normalizedData = $('üìù Normalizar').first().json;\n\nconsole.log('‚úÖ Audio transcrito:', transcription);\nconsole.log('üìã Limpiando campos de audio...');\n\n// ‚úÖ DEVOLVER SOLO LOS 5 CAMPOS ESENCIALES (igual que texto)\nreturn {\n  customer_phone: normalizedData.customer_phone,\n  customer_name: normalizedData.customer_name,\n  message_text: transcription,  // ‚Üê Texto transcrito\n  restaurant_phone: normalizedData.restaurant_phone,\n  buffer_key: normalizedData.buffer_key,\n  timestamp: normalizedData.timestamp\n};\n\n// ‚úÖ RESULTADO: Output ID√âNTICO al de un mensaje de texto normal\n// ‚ùå NO incluir: message_type, media_url, media_content_type"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1744,
        -304
      ],
      "id": "f4b212a7-de00-4fb7-b203-c2c513bd3232",
      "name": "üìÑ Formatear Transcripci√≥n"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "binaryPropertyName": "data",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -1904,
        -304
      ],
      "id": "e7b2273d-f7a4-4d99-a7a1-bfeaede9e123",
      "name": "üîä Transcribir (Whisper)",
      "credentials": {
        "openAiApi": {
          "id": "zwtmjTlXACMvkqZx",
          "name": "OpenAi La-IA"
        }
      }
    }
  ],
  "connections": {
    "üì± Webhook WhatsApp": {
      "main": [
        [
          {
            "node": "üìù Normalizar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìù Normalizar": {
      "main": [
        [
          {
            "node": "‚ùì ¬øEs Audio?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üîç Get Restaurants": {
      "main": [
        [
          {
            "node": "‚úÖ Find Restaurant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚úÖ Find Restaurant": {
      "main": [
        [
          {
            "node": "üîÑ UPSERT Buffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üîÑ UPSERT Buffer": {
      "main": [
        [
          {
            "node": "‚úÖ OK (Guardado)",
            "type": "main",
            "index": 0
          },
          {
            "node": "üìå Marcar Inicio Loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìå Marcar Inicio Loop": {
      "main": [
        [
          {
            "node": "üîÅ Loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üîÅ Loop": {
      "main": [
        [
          {
            "node": "üîç Verificar Actualizaci√≥n",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "‚è∞ Wait 10s",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìä Get Buffer Actualizado": {
      "main": [
        [
          {
            "node": "‚ùì ¬øBuffer existe?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚ùì ¬øBuffer existe?": {
      "main": [
        [
          {
            "node": "üîÅ Loop",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "‚è≠Ô∏è Log: Ya Procesado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üîç Verificar Actualizaci√≥n": {
      "main": [
        [
          {
            "node": "‚ùì ¬øProcesar buffer?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚ùì ¬øProcesar buffer?": {
      "main": [
        [
          {
            "node": "üóëÔ∏è Eliminar Buffer",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "‚è≠Ô∏è Log: Skip",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üóëÔ∏è Eliminar Buffer": {
      "main": [
        [
          {
            "node": "üöÄ Ejecutar Gateway",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚è∞ Wait 10s": {
      "main": [
        [
          {
            "node": "üìä Get Buffer Actualizado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚ùì ¬øEs Audio?": {
      "main": [
        [
          {
            "node": "üì• Descargar Audio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "üîç Get Restaurants",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üì• Descargar Audio": {
      "main": [
        [
          {
            "node": "üîä Transcribir (Whisper)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìÑ Formatear Transcripci√≥n": {
      "main": [
        [
          {
            "node": "üîç Get Restaurants",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üîä Transcribir (Whisper)": {
      "main": [
        [
          {
            "node": "üìÑ Formatear Transcripci√≥n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {
    "üì± Webhook WhatsApp": [
      {
        "headers": {
          "host": "gustausantin.app.n8n.cloud",
          "user-agent": "TwilioProxy/1.1",
          "content-length": "769",
          "accept": "*/*",
          "accept-encoding": "gzip, br",
          "cdn-loop": "cloudflare; loops=1; subreqs=1",
          "cf-connecting-ip": "13.218.50.218",
          "cf-ew-via": "15",
          "cf-ipcountry": "US",
          "cf-ray": "9917b1532743d46a-IAD",
          "cf-visitor": "{\"scheme\":\"https\"}",
          "cf-worker": "n8n.cloud",
          "content-type": "application/x-www-form-urlencoded",
          "i-twilio-idempotency-token": "98905382-2254-4a6b-b102-bc717fa06d9b",
          "x-forwarded-for": "13.218.50.218, 162.158.78.163",
          "x-forwarded-host": "gustausantin.app.n8n.cloud",
          "x-forwarded-port": "443",
          "x-forwarded-proto": "https",
          "x-forwarded-server": "traefik-prod-users-gwc-34-f494454b5-rhxmd",
          "x-home-region": "us1",
          "x-is-trusted": "yes",
          "x-real-ip": "13.218.50.218",
          "x-twilio-signature": "Y2W5VQO1cJuhXKuVCiATBLujpKw="
        },
        "params": {},
        "query": {},
        "body": {
          "MediaContentType0": "audio/ogg",
          "SmsMessageSid": "MMf2305ffb6a24c3ebe3c8428b591ac667",
          "NumMedia": "1",
          "ProfileName": "Gustau",
          "MessageType": "audio",
          "SmsSid": "MMf2305ffb6a24c3ebe3c8428b591ac667",
          "WaId": "34671126148",
          "SmsStatus": "received",
          "Body": "",
          "To": "whatsapp:+14155238886",
          "NumSegments": "1",
          "ReferralNumMedia": "0",
          "MessageSid": "MMf2305ffb6a24c3ebe3c8428b591ac667",
          "AccountSid": "AC***********************************",
          "ChannelMetadata": "{\"type\":\"whatsapp\",\"data\":{\"context\":{\"ProfileName\":\"Gustau\",\"WaId\":\"34671126148\"}}}",
          "From": "whatsapp:+34671126148",
          "MediaUrl0": "https://api.twilio.com/2010-04-01/Accounts/AC***********************************/Messages/MM***********************************/Media/ME***********************************",
          "ApiVersion": "2010-04-01"
        },
        "webhookUrl": "https://gustausantin.app.n8n.cloud/webhook/whatsapp-webhook",
        "executionMode": "production"
      }
    ]
  },
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "968c65341fc947850f62b4a42d249947219a244717952c0dbaf2b62952e73bd9"
  }
}

