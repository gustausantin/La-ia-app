{
  "name": "05 ‚Äî RAG Knowledge Processor (Supabase Storage)",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "process-knowledge",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [-1200, 240],
      "id": "webhook-trigger",
      "name": "üì• Webhook Trigger",
      "webhookId": "process-knowledge"
    },
    {
      "parameters": {
        "jsCode": "// =====================================\n// NODO: üîç Validar Input\n// Verificar que tenemos todos los datos necesarios\n// =====================================\n\nconst data = $input.first().json;\n\nconsole.log('üì• Input recibido:', data);\n\n// Validaciones\nif (!data.restaurant_id) {\n  throw new Error('‚ùå restaurant_id es obligatorio');\n}\n\nif (!data.file_path) {\n  throw new Error('‚ùå file_path es obligatorio');\n}\n\nif (!data.category) {\n  throw new Error('‚ùå category es obligatorio');\n}\n\nif (!['menu', 'services', 'other'].includes(data.category)) {\n  throw new Error('‚ùå category debe ser: menu, services, o other');\n}\n\nif (!data.file_type) {\n  throw new Error('‚ùå file_type es obligatorio');\n}\n\nconsole.log('‚úÖ Validaci√≥n correcta');\nconsole.log('üìÇ Restaurant ID:', data.restaurant_id);\nconsole.log('üìÅ Category:', data.category);\nconsole.log('üìÑ File:', data.file_name);\nconsole.log('üóÇÔ∏è Type:', data.file_type);\n\nreturn {\n  restaurant_id: data.restaurant_id,\n  file_path: data.file_path,\n  file_name: data.file_name || 'documento.pdf',\n  file_type: data.file_type,\n  category: data.category,\n  file_id: data.file_id || null,\n  uploaded_at: data.uploaded_at || new Date().toISOString()\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [-1040, 240],
      "id": "validate-input",
      "name": "üîç Validar Input"
    },
    {
      "parameters": {
        "url": "=https://ktsqwvhqamedpmzkzjaz.supabase.co/storage/v1/object/public/restaurant-knowledge/{{ $json.file_path }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [-880, 240],
      "id": "download-from-storage",
      "name": "üì• Descargar de Supabase Storage"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('üîç Validar Input').item.json.file_type }}",
                    "rightValue": "application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PDF"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('üîç Validar Input').item.json.file_type }}",
                    "rightValue": "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "DOCX"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('üîç Validar Input').item.json.file_type }}",
                    "rightValue": "application/msword",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "DOC"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('üîç Validar Input').item.json.file_type }}",
                    "rightValue": "text/plain",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "TXT"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [-720, 240],
      "id": "switch-file-type",
      "name": "üîÄ Switch por Tipo de Archivo"
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [-560, 80],
      "id": "extract-pdf",
      "name": "üìÑ Extract PDF"
    },
    {
      "parameters": {
        "operation": "docx",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [-560, 240],
      "id": "extract-docx",
      "name": "üìù Extract DOCX"
    },
    {
      "parameters": {
        "operation": "doc",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [-560, 400],
      "id": "extract-doc",
      "name": "üìù Extract DOC"
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [-560, 560],
      "id": "extract-txt",
      "name": "üìÉ Extract TXT"
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "restaurant_knowledge_vectors",
          "mode": "list",
          "cachedResultName": "restaurant_knowledge_vectors"
        },
        "options": {
          "queryName": "match_restaurant_knowledge"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [-80, 240],
      "id": "vector-store",
      "name": "üíæ Supabase Vector Store",
      "credentials": {
        "supabaseApi": {
          "id": "9pdl4V7ImejCLZWo",
          "name": "Supabase La-IA"
        }
      }
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [-240, 400],
      "id": "embeddings",
      "name": "üß† Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "zwtmjTlXACMvkqZx",
          "name": "OpenAi La-IA"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "restaurant_id",
                "value": "={{ $('üîç Validar Input').item.json.restaurant_id }}"
              },
              {
                "name": "category",
                "value": "={{ $('üîç Validar Input').item.json.category }}"
              },
              {
                "name": "file_name",
                "value": "={{ $('üîç Validar Input').item.json.file_name }}"
              },
              {
                "name": "file_type",
                "value": "={{ $('üîç Validar Input').item.json.file_type }}"
              },
              {
                "name": "file_id",
                "value": "={{ $('üîç Validar Input').item.json.file_id }}"
              },
              {
                "name": "uploaded_at",
                "value": "={{ $('üîç Validar Input').item.json.uploaded_at }}"
              },
              {
                "name": "processed_at",
                "value": "={{ new Date().toISOString() }}"
              }
            ]
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [-80, 400],
      "id": "data-loader",
      "name": "üì¶ Data Loader"
    },
    {
      "parameters": {
        "chunkSize": 2000,
        "chunkOverlap": 200,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [-80, 560],
      "id": "text-splitter",
      "name": "‚úÇÔ∏è Text Splitter"
    },
    {
      "parameters": {
        "jsCode": "// =====================================\n// NODO: ‚úÖ Marcar como Procesado\n// Actualizar estado en la tabla de tracking\n// =====================================\n\nconst inputData = $('üîç Validar Input').first().json;\n\nconsole.log('‚úÖ Archivo procesado correctamente');\nconsole.log('üìÑ File:', inputData.file_name);\nconsole.log('üÜî File ID:', inputData.file_id);\n\n// Actualizar estado en Supabase (si existe file_id)\nif (inputData.file_id) {\n  const { data, error } = await this.helpers.httpRequestWithAuthentication.call(\n    this,\n    'supabaseApi',\n    {\n      method: 'PATCH',\n      url: `https://ktsqwvhqamedpmzkzjaz.supabase.co/rest/v1/restaurant_knowledge_files?id=eq.${inputData.file_id}`,\n      headers: {\n        'Content-Type': 'application/json',\n        'Prefer': 'return=minimal'\n      },\n      body: {\n        status: 'completed',\n        processed_at: new Date().toISOString()\n      }\n    }\n  );\n  \n  if (error) {\n    console.error('‚ö†Ô∏è Error al actualizar estado:', error);\n  } else {\n    console.log('‚úÖ Estado actualizado en BD');\n  }\n}\n\nreturn {\n  success: true,\n  restaurant_id: inputData.restaurant_id,\n  file_name: inputData.file_name,\n  file_id: inputData.file_id,\n  category: inputData.category,\n  processed_at: new Date().toISOString()\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [80, 240],
      "id": "mark-processed",
      "name": "‚úÖ Marcar como Procesado",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ JSON.stringify({ success: true, message: 'Documento procesado correctamente', file_name: $json.file_name, restaurant_id: $json.restaurant_id }) }}",
        "options": {
          "responseCode": 200
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [240, 240],
      "id": "respond-success",
      "name": "‚úÖ Respuesta OK"
    },
    {
      "parameters": {
        "jsCode": "// =====================================\n// NODO: ‚ùå Error Handler\n// Capturar errores y actualizar BD\n// =====================================\n\nconst error = $input.first().json.error || 'Error desconocido';\nconst inputData = $('üîç Validar Input').first().json;\n\nconsole.error('‚ùå Error al procesar archivo:', error);\nconsole.error('üìÑ File:', inputData.file_name);\n\n// Actualizar estado en Supabase (si existe file_id)\nif (inputData.file_id) {\n  try {\n    await this.helpers.httpRequestWithAuthentication.call(\n      this,\n      'supabaseApi',\n      {\n        method: 'PATCH',\n        url: `https://ktsqwvhqamedpmzkzjaz.supabase.co/rest/v1/restaurant_knowledge_files?id=eq.${inputData.file_id}`,\n        headers: {\n          'Content-Type': 'application/json',\n          'Prefer': 'return=minimal'\n        },\n        body: {\n          status: 'failed',\n          error_message: error.toString().substring(0, 500)\n        }\n      }\n    );\n  } catch (e) {\n    console.error('‚ö†Ô∏è No se pudo actualizar estado de error en BD');\n  }\n}\n\nreturn {\n  success: false,\n  error: error.toString(),\n  restaurant_id: inputData.restaurant_id,\n  file_name: inputData.file_name,\n  file_id: inputData.file_id\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [240, 80],
      "id": "error-handler",
      "name": "‚ùå Error Handler",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ JSON.stringify({ success: false, error: $json.error, file_name: $json.file_name }) }}",
        "options": {
          "responseCode": 500
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [400, 80],
      "id": "respond-error",
      "name": "‚ùå Respuesta Error"
    }
  ],
  "connections": {
    "üì• Webhook Trigger": {
      "main": [
        [
          {
            "node": "üîç Validar Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üîç Validar Input": {
      "main": [
        [
          {
            "node": "üì• Descargar de Supabase Storage",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üì• Descargar de Supabase Storage": {
      "main": [
        [
          {
            "node": "üîÄ Switch por Tipo de Archivo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üîÄ Switch por Tipo de Archivo": {
      "main": [
        [
          {
            "node": "üìÑ Extract PDF",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "üìù Extract DOCX",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "üìù Extract DOC",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "üìÉ Extract TXT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìÑ Extract PDF": {
      "main": [
        [
          {
            "node": "üíæ Supabase Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìù Extract DOCX": {
      "main": [
        [
          {
            "node": "üíæ Supabase Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìù Extract DOC": {
      "main": [
        [
          {
            "node": "üíæ Supabase Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìÉ Extract TXT": {
      "main": [
        [
          {
            "node": "üíæ Supabase Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üíæ Supabase Vector Store": {
      "main": [
        [
          {
            "node": "‚úÖ Marcar como Procesado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üß† Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "üíæ Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "üì¶ Data Loader": {
      "ai_document": [
        [
          {
            "node": "üíæ Supabase Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "‚úÇÔ∏è Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "üì¶ Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "‚úÖ Marcar como Procesado": {
      "main": [
        [
          {
            "node": "‚úÖ Respuesta OK",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚ùå Error Handler": {
      "main": [
        [
          {
            "node": "‚ùå Respuesta Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "968c65341fc947850f62b4a42d249947219a244717952c0dbaf2b62952e73bd9"
  },
  "tags": []
}

