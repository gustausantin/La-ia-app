{
  "name": "üîß TOOL: create_reservation ‚Äî CON CONFIRMACIONES",
  "nodes": [
    {
      "parameters": {
        "jsCode": "const input = $input.item.json;\n\nconsole.log('üîç Input recibido:', JSON.stringify(input, null, 2));\n\n// ‚úÖ Validar datos m√≠nimos\nconst required = ['reservation_date', 'reservation_time', 'party_size', 'restaurant_id'];\nconst missing = required.filter(field => !input[field]);\n\nif (missing.length > 0) {\n  throw new Error(`‚ùå Faltan campos obligatorios: ${missing.join(', ')}`);\n}\n\nreturn {\n  // ‚úÖ DATOS OBLIGATORIOS\n  restaurant_id: input.restaurant_id,\n  customer_id: input.customer_id,\n  customer_phone: input.customer_phone,\n  customer_name: input.customer_name,\n  \n  // ‚úÖ DATOS DE LA RESERVA\n  reservation_date: input.reservation_date,\n  reservation_time: input.reservation_time,\n  party_size: parseInt(input.party_size),\n  \n  // ‚úÖ DATOS OPCIONALES\n  preferred_zone: input.preferred_zone || null,\n  special_requests: input.special_requests || null,\n  source: input.source || 'agent_whatsapp'\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1120,
        48
      ],
      "id": "311129a8-4981-48ff-a1df-17b9813e6789",
      "name": "üîç Validar Input"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://ktsqwvhqamedpmzkzjaz.supabase.co/rest/v1/rpc/find_table_combinations",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "supabaseApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "return=representation"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"p_restaurant_id\": \"{{ $json.restaurant_id }}\",\n  \"p_date\": \"{{ $json.reservation_date }}\",\n  \"p_time\": \"{{ $json.reservation_time }}:00\",\n  \"p_party_size\": {{ $json.party_size }},\n  \"p_zone\": {{ $json.preferred_zone ? '\"' + $json.preferred_zone + '\"' : 'null' }}\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -912,
        48
      ],
      "id": "96866c0c-00a0-4ce9-aab5-ae8771d915ee",
      "name": "üéØ Verificar Disponibilidad",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "9pdl4V7ImejCLZWo",
          "name": "Supabase La-IA"
        }
      },
      "continueOnFail": true,
      "notes": "‚ú® CORREGIDO: Llama a RPC v√≠a HTTP Request POST"
    },
    {
      "parameters": {
        "jsCode": "// =====================================================\n// üîÑ PROCESAR DISPONIBILIDAD\n// =====================================================\n\nconst validacion = $('üîç Validar Input').first().json;\nconst resultado = $input.first().json;\n\nconsole.log('üìä Respuesta RPC:', JSON.stringify(resultado, null, 2));\n\n// Con HTTP Request, la respuesta viene directamente\nconst disponibilidad = resultado;\n\nif (!disponibilidad || typeof disponibilidad !== 'object') {\n  console.log('‚ùå No se recibi√≥ respuesta de disponibilidad');\n  return {\n    disponible: false,\n    mensaje: 'Error al verificar disponibilidad',\n    ...validacion\n  };\n}\n\nif (!disponibilidad.available) {\n  console.log('‚ùå No hay disponibilidad');\n  return {\n    disponible: false,\n    mensaje: disponibilidad.message || 'No hay disponibilidad',\n    ...validacion\n  };\n}\n\nconsole.log('‚úÖ Disponibilidad encontrada. Tipo:', disponibilidad.type);\n\n// ===== EXTRAER SLOT IDS =====\nlet slot_ids = [];\n\nif (disponibilidad.type === 'single') {\n  slot_ids = [disponibilidad.slot_id];\n} else if (disponibilidad.type === 'combination') {\n  slot_ids = disponibilidad.slot_ids || [];\n}\n\nif (slot_ids.length === 0) {\n  console.log('‚ùå No se encontraron slot_ids v√°lidos');\n  return {\n    disponible: false,\n    mensaje: 'Error: No se pudieron identificar las mesas',\n    ...validacion\n  };\n}\n\nconsole.log('üéØ Slot IDs a reservar:', slot_ids);\n\nreturn {\n  disponible: true,\n  slot_ids: slot_ids,\n  tipo: disponibilidad.type,\n  tables: disponibilidad.tables || disponibilidad.table_names || [],\n  zone: disponibilidad.zone,\n  ...validacion\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -704,
        48
      ],
      "id": "cdcb3032-5176-4cc1-94ce-920065d32e24",
      "name": "üîÑ Procesar Disponibilidad"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "check-available",
              "leftValue": "={{ $json.disponible }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -512,
        48
      ],
      "id": "bd7b1dd2-5ecb-4aa5-9e06-34371b89210d",
      "name": "‚ùì ¬øDisponible?"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://ktsqwvhqamedpmzkzjaz.supabase.co/rest/v1/rpc/create_combined_reservation",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "supabaseApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "return=representation"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"p_restaurant_id\": \"{{ $json.restaurant_id }}\",\n  \"p_customer_id\": \"{{ $json.customer_id }}\",\n  \"p_customer_phone\": \"{{ $json.customer_phone }}\",\n  \"p_customer_name\": \"{{ $json.customer_name }}\",\n  \"p_reservation_date\": \"{{ $json.reservation_date }}\",\n  \"p_reservation_time\": \"{{ $json.reservation_time }}:00\",\n  \"p_party_size\": {{ $json.party_size }},\n  \"p_slot_ids\": {{ JSON.stringify($json.slot_ids) }},\n  \"p_special_requests\": {{ $json.special_requests ? '\"' + $json.special_requests + '\"' : 'null' }},\n  \"p_source\": \"{{ $json.source }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -256,
        -32
      ],
      "id": "8d0eea2e-bc8f-4cf7-943c-99029c996893",
      "name": "üíæ Crear Reserva (RPC)",
      "credentials": {
        "supabaseApi": {
          "id": "9pdl4V7ImejCLZWo",
          "name": "Supabase La-IA"
        }
      },
      "notes": "‚ú® CORREGIDO: Llama a RPC v√≠a HTTP Request POST"
    },
    {
      "parameters": {
        "jsCode": "// =====================================================\n// ‚úÖ PROCESAR RESPUESTA DE CREACI√ìN\n// =====================================================\n\nconst resultado = $input.first().json;\n\nconsole.log('üìä Respuesta RPC create_combined_reservation:', JSON.stringify(resultado, null, 2));\n\n// Con HTTP Request, la respuesta viene directamente\nconst reserva = resultado;\n\nif (!reserva || typeof reserva !== 'object') {\n  console.log('‚ùå No se recibi√≥ respuesta de creaci√≥n');\n  return {\n    success: false,\n    message: 'Error al crear la reserva: No se recibi√≥ respuesta'\n  };\n}\n\nif (!reserva.success) {\n  console.log('‚ùå Error al crear reserva:', reserva.error || reserva.message);\n  return {\n    success: false,\n    message: reserva.message || 'Error al crear la reserva'\n  };\n}\n\nconsole.log('‚úÖ Reserva creada exitosamente:', reserva.reservation_id);\n\nreturn {\n  success: true,\n  reservation_id: reserva.reservation_id,\n  message: reserva.message,\n  details: {\n    reservation_id: reserva.reservation_id,\n    customer_name: reserva.customer_name,\n    date: reserva.reservation_date,\n    time: reserva.reservation_time,\n    party_size: reserva.party_size,\n    tables: reserva.tables,\n    zone: reserva.zone,\n    num_tables: reserva.num_tables,\n    is_combined: reserva.is_combined,\n    slots_reserved: reserva.slots_reserved\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -64,
        -32
      ],
      "id": "4d549762-a0d8-4e08-bda6-d6227bea3529",
      "name": "üîÑ Procesar Creaci√≥n"
    },
    {
      "parameters": {
        "jsCode": "const data = $input.first().json;\n\nconsole.log('‚ùå No hay disponibilidad:', data.mensaje);\n\nreturn {\n  success: false,\n  message: data.mensaje || 'No hay disponibilidad para crear la reserva',\n  details: {\n    date: data.reservation_date,\n    time: data.reservation_time,\n    party_size: data.party_size,\n    zone: data.preferred_zone\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -240,
        144
      ],
      "id": "8aef085f-c4db-4a4c-a9e9-f55e1ad138d4",
      "name": "‚ùå Respuesta: Error"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://gustausantin.app.n8n.cloud/webhook/confirmation-handler",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"reservation_id\": \"{{ $('üîÑ Procesar Creaci√≥n').item.json.reservation_id }}\",\n  \"restaurant_id\": \"{{ $('üîç Validar Input').item.json.restaurant_id }}\",\n  \"customer_name\": \"{{ $('üîç Validar Input').item.json.customer_name }}\",\n  \"customer_phone\": \"{{ $('üîç Validar Input').item.json.customer_phone }}\",\n  \"reservation_date\": \"{{ $('üîç Validar Input').item.json.reservation_date }}\",\n  \"reservation_time\": \"{{ $('üîç Validar Input').item.json.reservation_time }}\",\n  \"party_size\": {{ $('üîç Validar Input').item.json.party_size }}\n}",
        "options": {
          "timeout": 5000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        192,
        -64
      ],
      "id": "017a6eb4-2d67-45ed-a2ee-60b92d6cb9b8",
      "name": "üìû Activar Confirmaci√≥n",
      "continueOnFail": true,
      "notes": "‚ú® Llama al webhook de confirmaci√≥n inteligente (no bloquea si falla)"
    },
    {
      "parameters": {
        "jsCode": "const creacion = $('üîÑ Procesar Creaci√≥n').first().json;\nconst confirmacion = $input.first().json;\n\nconsole.log('üìû Respuesta de confirmation-handler:', confirmacion);\n\n// Retornar siempre el resultado de la creaci√≥n (√©xito)\n// La confirmaci√≥n es un proceso paralelo que no debe afectar el resultado\nreturn creacion;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        400,
        -64
      ],
      "id": "52d13a2d-ba6e-401c-84b2-e988780b9bca",
      "name": "‚úÖ Respuesta Final"
    },
    {
      "parameters": {
        "inputSource": "jsonExample",
        "jsonExample": "{\n  \"restaurant_id\": \"d6b63130-1ebf-4284-98fc-a3b31a85d9d1\",\n  \"customer_id\": null,\n  \"customer_phone\": \"+34612345678\",\n  \"customer_name\": \"Juan P√©rez\",\n  \"reservation_date\": \"2025-10-23\",\n  \"reservation_time\": \"20:00\",\n  \"party_size\": 4,\n  \"preferred_zone\": null,\n  \"special_requests\": null,\n  \"source\": \"agent_whatsapp\"\n}"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -1312,
        48
      ],
      "id": "fb89fc30-3b52-4498-a5d2-7924ef220f04",
      "name": "Start"
    }
  ],
  "connections": {
    "üîç Validar Input": {
      "main": [
        [
          {
            "node": "üéØ Verificar Disponibilidad",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üéØ Verificar Disponibilidad": {
      "main": [
        [
          {
            "node": "üîÑ Procesar Disponibilidad",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üîÑ Procesar Disponibilidad": {
      "main": [
        [
          {
            "node": "‚ùì ¬øDisponible?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚ùì ¬øDisponible?": {
      "main": [
        [
          {
            "node": "üíæ Crear Reserva (RPC)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "‚ùå Respuesta: Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üíæ Crear Reserva (RPC)": {
      "main": [
        [
          {
            "node": "üîÑ Procesar Creaci√≥n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üîÑ Procesar Creaci√≥n": {
      "main": [
        [
          {
            "node": "üìû Activar Confirmaci√≥n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìû Activar Confirmaci√≥n": {
      "main": [
        [
          {
            "node": "‚úÖ Respuesta Final",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start": {
      "main": [
        [
          {
            "node": "üîç Validar Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "instanceId": "968c65341fc947850f62b4a42d249947219a244717952c0dbaf2b62952e73bd9"
  },
  "tags": [
    {
      "createdAt": "2025-10-22T12:00:00.000Z",
      "updatedAt": "2025-10-22T18:00:00.000Z",
      "id": "confirmaciones",
      "name": "‚úÖ CON Sistema de Confirmaciones"
    }
  ]
}
