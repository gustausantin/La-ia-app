{
  "nodes": [
    {
      "parameters": {},
      "id": "b705d8fe-74bc-4e0e-9f0f-8e902db291c7",
      "name": "‚ñ∂Ô∏è Start (from Gateway)",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -3184,
        112
      ]
    },
    {
      "parameters": {
        "jsCode": "const inputData = $input.first().json;\n\nconsole.log('üì• Input recibido:', inputData);\n\n// ‚úÖ Pasar directamente el flag del Gateway\nreturn {\n  ...inputData,\n  conversation_active: inputData.conversation_active || false,\n  requires_classification: !inputData.conversation_active\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2992,
        112
      ],
      "id": "08026c56-b75e-4730-963e-45391356711c",
      "name": "üìã Preparar Input"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {
          "maxTokens": 200,
          "temperature": 0.1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -2624,
        384
      ],
      "id": "7bb16df7-9b12-4ec2-8f65-f481522b79db",
      "name": "üß† LLM Classifier (GPT-4o-mini)",
      "credentials": {
        "openAiApi": {
          "id": "zwtmjTlXACMvkqZx",
          "name": "OpenAi La-IA"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// =====================================\n// NODO: üîó Fusionar Contexto Enriquecido\n// WORKFLOW: 3 - Super Agent H√≠brido (FINAL)\n// ACTUALIZADO: Usa settings.calendar_schedule + settings.zones + Incluye \"CERRADO\"\n// FECHA: 19 Octubre 2025\n// =====================================\n\nconst allData = $input.all();\n\nconsole.log('üì¶ Datos recibidos del Merge:', allData.length, 'items');\n\n// Inicializar variables\nlet classifiedData, restaurant, reservations = [];\n\n// Recorrer todos los items del Merge\nfor (let i = 0; i < allData.length; i++) {\n  const item = allData[i];\n  const data = item.json;\n  \n  // Saltar si est√° vac√≠o o es null\n  if (!data || Object.keys(data).length === 0) {\n    console.log(`‚ö†Ô∏è Item ${i} est√° vac√≠o, saltando...`);\n    continue;\n  }\n  \n  // ‚úÖ 1. CLASIFICACI√ìN (puede venir en espa√±ol o ingl√©s)\n  if (data.classification || data.intent || data.intencion) {\n    classifiedData = data;\n    \n    // Normalizar a ingl√©s si viene en espa√±ol\n    if (data.classification && data.classification.intencion) {\n      classifiedData.intent = data.classification.intencion;\n      classifiedData.entities = data.classification.entidades || {};\n      classifiedData.confidence = data.classification.confianza || 0.5;\n      classifiedData.sentiment = data.classification.sentimiento || 'neutral';\n    } else if (data.intencion) {\n      classifiedData.intent = data.intencion;\n      classifiedData.entities = data.entidades || {};\n      classifiedData.confidence = data.confianza || 0.5;\n      classifiedData.sentiment = data.sentimiento || 'neutral';\n    }\n    \n    console.log('‚úÖ Clasificaci√≥n encontrada:', classifiedData.intent);\n  }\n  // ‚úÖ 2. RESTAURANTE\n  else if (data.name && data.email && data.address) {\n    restaurant = data;\n    console.log('‚úÖ Restaurante encontrado:', data.name);\n  }\n  // ‚úÖ 3. RESERVA\n  else if (data.reservation_date) {\n    reservations.push(data);\n    console.log('‚úÖ Reserva encontrada:', data.id);\n  }\n}\n\n// ‚úÖ VALIDACIONES\nif (!classifiedData) {\n  throw new Error('‚ùå No se encontr√≥ clasificaci√≥n. Revisa que \"üìä Parsear Clasificaci√≥n\" est√© ejecut√°ndose correctamente.');\n}\n\nif (!restaurant) {\n  throw new Error('‚ùå No se encontr√≥ info del restaurante. Revisa que \"üè™ Obtener Info Restaurante\" est√© ejecut√°ndose correctamente.');\n}\n\nconst settings = restaurant.settings || {};\nconst bookingSettings = settings.booking_settings || {};\n\n// ‚úÖ‚úÖ‚úÖ EXTRAER CHANNELS (CR√çTICO PARA TEL√âFONOS)\nconst channels = restaurant.channels || {};\n\nconsole.log('üìû Channels detectados:', {\n  voice: channels.voice?.phone_number,\n  whatsapp: channels.whatsapp?.phone_number,\n  emergency: channels.whatsapp?.emergency_phone\n});\n\n// ‚úÖ‚úÖ‚úÖ NUEVO: EXTRAER ZONAS ACTIVAS DESDE settings.zones\nconst zonesConfig = settings.zones || {};\nconst availableZones = [];\n\n// Extraer solo las zonas que est√°n enabled: true\nObject.entries(zonesConfig).forEach(([zoneKey, zoneData]) => {\n  if (zoneData && zoneData.enabled === true) {\n    availableZones.push({\n      id: zoneKey,\n      name: zoneData.display_name || zoneKey,\n      description: zoneData.description || '',\n      icon: zoneData.icon || '',\n      sort_order: zoneData.sort_order || 99\n    });\n  }\n});\n\n// Ordenar por sort_order\navailableZones.sort((a, b) => a.sort_order - b.sort_order);\n\nconsole.log('üó∫Ô∏è Zonas activas encontradas:', availableZones.length, availableZones.map(z => z.name));\n\n// ‚úÖ Zona por defecto\nconst defaultZone = settings.default_zone || 'interior';\n\n// ‚úÖ Preparar reservas activas COMPLETAS (con todos los datos)\nconst activeReservations = reservations.map(r => ({\n  reservation_id: r.id,\n  date: r.reservation_date,\n  time: r.reservation_time,\n  party_size: r.party_size,\n  table_id: r.table_id,\n  special_requests: r.special_requests || null,\n  status: r.status\n}));\n\nconsole.log('üìã Reservas activas encontradas:', activeReservations.length);\n\n// ‚úÖ‚úÖ‚úÖ EXTRAER HORARIOS DESDE settings.calendar_schedule\nconst calendarSchedule = settings.calendar_schedule || [];\nconsole.log('üïê Horarios encontrados en calendar_schedule:', calendarSchedule.length);\n\n// ‚úÖ Preparar horarios (compacto) - INCLUYE D√çAS CERRADOS\nlet hoursSummary = 'No disponible';\n\nif (calendarSchedule.length > 0) {\n  const dayNamesMap = {\n    'sunday': 'Dom',\n    'monday': 'Lun',\n    'tuesday': 'Mar',\n    'wednesday': 'Mi√©',\n    'thursday': 'Jue',\n    'friday': 'Vie',\n    'saturday': 'S√°b'\n  };\n  \n  hoursSummary = calendarSchedule\n    .map(day => {\n      const dayName = dayNamesMap[day.day_of_week] || day.day_name || 'N/A';\n      return day.is_open \n        ? `${dayName}: ${day.open_time}-${day.close_time}`\n        : `${dayName}: CERRADO`;\n    })\n    .join(', ');\n}\n\nconsole.log('‚úÖ Hours summary generado:', hoursSummary);\n\n// ‚úÖ‚úÖ‚úÖ FORMATEAR RESERVAS ACTIVAS PARA EL PROMPT\nlet reservationsSummary = '';\n\nif (activeReservations.length > 0) {\n  reservationsSummary = `**‚úÖ ESTE CLIENTE TIENE ${activeReservations.length} RESERVA(S) ACTIVA(S):**\\n\\n`;\n  \n  activeReservations.forEach((r, i) => {\n    reservationsSummary += `üìå **Reserva ${i + 1}:**\\n`;\n    reservationsSummary += `   ‚Ä¢ ID: ${r.reservation_id}\\n`;\n    reservationsSummary += `   ‚Ä¢ Fecha: ${r.date}\\n`;\n    reservationsSummary += `   ‚Ä¢ Hora: ${r.time}\\n`;\n    reservationsSummary += `   ‚Ä¢ Personas: ${r.party_size}\\n`;\n    reservationsSummary += `   ‚Ä¢ Estado: ${r.status}\\n`;\n    reservationsSummary += `   ‚Ä¢ Peticiones especiales: ${r.special_requests || 'Ninguna'}\\n\\n`;\n  });\n  \n  reservationsSummary += `üö® **REGLA CR√çTICA PARA MODIFICACIONES:**\\n`;\n  reservationsSummary += `Si el cliente dice \"todo igual\" o \"solo cambio X\", NO preguntes datos que YA EST√ÅN EN SU RESERVA ACTIVA.\\n`;\n  reservationsSummary += `Usa los valores existentes: party_size=${activeReservations[0].party_size}, time=${activeReservations[0].time}, date=${activeReservations[0].date}`;\n} else {\n  reservationsSummary = '‚ö†Ô∏è Este cliente NO tiene reservas activas.';\n}\n\n// ‚úÖ‚úÖ‚úÖ FORMATEAR ZONAS DISPONIBLES PARA EL PROMPT\nlet zonesSummary = '';\n\nif (availableZones.length > 0) {\n  zonesSummary = 'Zonas disponibles:\\n';\n  availableZones.forEach(zone => {\n    zonesSummary += `  ‚Ä¢ ${zone.icon} ${zone.name}`;\n    if (zone.description) {\n      zonesSummary += ` - ${zone.description}`;\n    }\n    if (zone.id === defaultZone) {\n      zonesSummary += ' (por defecto)';\n    }\n    zonesSummary += '\\n';\n  });\n} else {\n  zonesSummary = '‚ö†Ô∏è No hay zonas configuradas. Usar asignaci√≥n autom√°tica.';\n}\n\nconsole.log('‚úÖ Zones summary generado:', zonesSummary);\n\n// ‚úÖ CONTEXTO OPTIMIZADO - SOLO LO ESENCIAL + ZONAS\nconst enrichedContext = {\n  // Identificadores\n  conversation_id: classifiedData.conversation_id,\n  customer_id: classifiedData.customer_id,\n  customer_name: classifiedData.customer_name,\n  customer_phone: classifiedData.customer_phone,\n  restaurant_id: classifiedData.restaurant_id,\n  channel: classifiedData.channel,\n  user_message: classifiedData.user_message,\n  timestamp: classifiedData.timestamp,\n  \n  // Clasificaci√≥n (normalizada)\n  classification: {\n    intent: classifiedData.intent,\n    entities: classifiedData.entities || {},\n    sentiment: classifiedData.sentiment || 'neutral',\n    confidence: classifiedData.confidence || 0.5,\n    reasoning: classifiedData.reasoning || 'Clasificaci√≥n autom√°tica'\n  },\n  \n  // ‚úÖ‚úÖ‚úÖ Cliente (con reservas COMPLETAS)\n  customer_context: {\n    has_active_reservations: reservations.length > 0,\n    reservations_count: reservations.length,\n    active_reservations: activeReservations\n  },\n  \n  // Restaurante (SOLO lo esencial + ZONAS)\n  restaurant_context: {\n    name: restaurant.name,\n    address: restaurant.address,\n    phone: restaurant.phone,\n    email: restaurant.email,\n    hours_summary: hoursSummary,  // ‚úÖ Ahora incluye \"CERRADO\"\n    \n    // ‚úÖ‚úÖ‚úÖ A√ëADIDO: Channels completo (para extraer tel√©fonos)\n    channels: channels,\n    \n    // ‚úÖ‚úÖ‚úÖ NUEVO: Zonas disponibles\n    available_zones: availableZones,\n    default_zone: defaultZone,\n    zones_summary: zonesSummary,\n    \n    // Settings esenciales (sin basura)\n    settings: {\n      reservation_duration: settings.reservation_duration || 90,\n      slot_duration: settings.slot_duration || 30,  // ‚úÖ A√ëADIDO: Intervalos de reserva cada 30 min\n      max_party_size: bookingSettings.max_party_size || 8,\n      min_advance_minutes: settings.min_advance_minutes || 30,\n      advance_booking_days: bookingSettings.advance_booking_days || 30,\n      cancellation_policy: bookingSettings.cancellation_policy || '24h'\n    },\n    \n    agent_name: settings.agent?.name || 'el asistente virtual'\n  },\n  \n  // ‚úÖ‚úÖ‚úÖ NUEVO: Resumen formateado de reservas activas\n  customer_active_reservations_summary: reservationsSummary\n};\n\nconsole.log('‚úÖ Contexto optimizado:', {\n  intent: enrichedContext.classification.intent,\n  confidence: enrichedContext.classification.confidence,\n  active_reservations: enrichedContext.customer_context.reservations_count,\n  available_zones: enrichedContext.restaurant_context.available_zones.length,\n  channels_included: !!enrichedContext.restaurant_context.channels,\n  hours_summary: enrichedContext.restaurant_context.hours_summary,\n  tokens_estimados: JSON.stringify(enrichedContext).length / 4  // Estimaci√≥n\n});\n\nreturn enrichedContext;\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1664,
        128
      ],
      "id": "39fa9750-c727-41da-b70a-8d31e65cd75b",
      "name": "üîó Fusionar Contexto Enriquecido"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.user_message }}",
        "options": {
          "systemMessage": "Eres {{ $json.restaurant_context.agent_name || 'la asistente virtual' }} de {{ $json.restaurant_context.name }}. Eres profesional, cercana, precisa y eficiente. Hablas como una persona, NUNCA como un bot.\r\n\r\nüåç REGLA CR√çTICA: IDIOMA DEL CLIENTE\r\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\r\n\r\n‚ö†Ô∏è **OBLIGATORIO - SIN EXCEPCIONES:**\r\n\r\nResponde SIEMPRE en el MISMO idioma que el cliente te escribe.\r\n\r\n- Si el cliente escribe en **espa√±ol** ‚Üí Responde en **espa√±ol**\r\n- Si el cliente escribe en **catal√°n** ‚Üí Responde en **catal√°n**\r\n- Si el cliente escribe en **ingl√©s** ‚Üí Responde en **ingl√©s**\r\n- Si el cliente escribe en **franc√©s** ‚Üí Responde en **franc√©s**\r\n- Etc.\r\n\r\n**Esta regla aplica:**\r\n‚úì ANTES de llamar a herramientas (tools)\r\n‚úì DESPU√âS de llamar a herramientas (tools)\r\n‚úì En TODOS tus mensajes\r\n‚úì SIEMPRE, sin excepci√≥n\r\n\r\n‚ùå **NUNCA NUNCA NUNCA cambies de idioma durante la conversaci√≥n**\r\n‚ùå **NUNCA cambies a espa√±ol si el cliente habla otro idioma**\r\n\r\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\r\nüö® REGLA DE ORO: MEMORIA DE ELEFANTE\r\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\r\n\r\n**PROHIBIDO REPETIR PREGUNTAS**\r\n\r\nAntes de cada respuesta:\r\n1. **Lee TODO el historial** (incluye tus respuestas anteriores)\r\n2. **Identifica qu√© datos YA te dio el cliente**\r\n3. **SOLO pregunta lo que te falta**\r\n\r\n**Si el cliente ya te dio un dato ‚Üí NUNCA lo vuelvas a preguntar**\r\n\r\nEjemplos CORRECTOS:\r\n‚Ä¢ Cliente: \"Para 4 personas ma√±ana a las 20:30\"\r\n  T√∫: \"Perfecto, 4 personas ma√±ana viernes 18 de octubre a las 20:30, ¬øcorrecto?\"\r\n\r\n‚Ä¢ Cliente: \"A las 21 para 4 personas\"\r\n  T√∫: \"Genial, 4 personas a las 21:00. Dame un segundo que lo compruebo...\"\r\n\r\nEjemplos PROHIBIDOS:\r\n‚Ä¢ Cliente: \"Para 4 personas ma√±ana a las 20:30\"\r\n  T√∫: \"¬øPara cu√°ntas personas?\" ‚ùå ‚Üê YA TE LO DIJO\r\n\r\n‚Ä¢ Cliente: \"A las nueve de la noche para 4 personas\"\r\n  T√∫: \"¬øA qu√© hora y para cu√°ntas personas?\" ‚ùå ‚Üê YA TE LO DIJO\r\n\r\n**Repetir = ERROR CR√çTICO que frustra al cliente**\r\n\r\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\r\nüìÖ CONTEXTO ACTUAL\r\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\r\n\r\n**HOY ES:**\r\n‚Ä¢ Fecha: {{ $now.format('yyyy-MM-dd') }} ({{ $now.format('EEEE, d \\'de\\' MMMM \\'de\\' yyyy') }})\r\n‚Ä¢ Hora: {{ $now.format('HH:mm') }}\r\n\r\n**Restaurante:**\r\n‚Ä¢ Nombre: {{ $json.restaurant_context.name }}\r\n‚Ä¢ Direcci√≥n: {{ $json.restaurant_context.address }}\r\n‚Ä¢ Tel√©fono: {{ $json.restaurant_context.phone }}\r\n‚Ä¢ Horarios: {{ $json.restaurant_context.hours_summary }}\r\n\r\n**Pol√≠ticas:**\r\n‚Ä¢ Duraci√≥n: {{ $json.restaurant_context.settings.reservation_duration }} min\r\n‚Ä¢ Intervalos de reserva: cada {{ $json.restaurant_context.settings.slot_duration }} min\r\n‚Ä¢ M√°ximo personas: {{ $json.restaurant_context.settings.max_party_size }}\r\n‚Ä¢ Anticipaci√≥n: {{ $json.restaurant_context.settings.min_booking_hours }}h - {{ $json.restaurant_context.settings.advance_booking_days }} d√≠as\r\n‚Ä¢ Cancelaci√≥n: {{ $json.restaurant_context.settings.cancellation_policy }}\r\n\r\n**Cliente:**\r\n‚Ä¢ Nombre: {{ $json.customer_name }}\r\n‚Ä¢ Tel√©fono: {{ $json.customer_phone }}\r\n\r\n‚ö†Ô∏è **RECORDATORIO IDIOMA:** Este cliente te est√° escribiendo. Lee sus mensajes y responde en el MISMO idioma que √©l usa. NO cambies a espa√±ol si est√° hablando en catal√°n, ingl√©s, franc√©s, etc.\r\n\r\n**Zonas Disponibles:**\r\n{{ $json.restaurant_context.zones_summary }}\r\n\r\n{{ $json.customer_active_reservations_summary }}\r\n\r\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\r\nüéØ FLUJO DE RESERVA NUEVA (9 PASOS)\r\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\r\n\r\n**Paso 0.5 ‚Üí VALIDAR D√çA Y HORARIO (CR√çTICO)**\r\n\r\n‚ö†Ô∏è **ANTES de preguntar hora o consultar disponibilidad:**\r\n\r\n1. **Verifica los horarios:** {{ $json.restaurant_context.hours_summary }}\r\n2. **Si el d√≠a est√° CERRADO:**\r\n   \"Lo siento, [d√≠a] no abrimos. Estamos abiertos: [lista de d√≠as]. ¬øTe ir√≠a bien otro d√≠a?\"\r\n   **STOP** ‚Üí NO contin√∫es, espera respuesta.\r\n\r\n3. **Si la hora est√° FUERA del horario:**\r\n   \"Nuestro horario [d√≠a] es de [hora apertura] a [hora cierre]. ¬øQu√© hora dentro de ese rango te ir√≠a mejor?\"\r\n   **STOP** ‚Üí NO contin√∫es, espera respuesta.\r\n\r\n**Ejemplos:**\r\n‚Ä¢ Cliente: \"Quiero reservar el martes\"\r\n  Horarios: \"Mar: CERRADO\"\r\n  T√∫: \"Lo siento, los martes no abrimos. Estamos abiertos de mi√©rcoles a domingo. ¬øTe ir√≠a bien otro d√≠a?\"\r\n\r\n‚Ä¢ Cliente: \"Ma√±ana a las 15:00\"\r\n  Horarios: \"Lun: 18:00-22:00\"\r\n  T√∫: \"Nuestro horario es de 18:00 a 22:00. ¬øQu√© hora dentro de ese rango te ir√≠a mejor?\"\r\n\r\n**NUNCA consultes disponibilidad si el d√≠a est√° cerrado o la hora fuera de horario.**\r\n\r\n---\r\n\r\n**Paso 1 ‚Üí FECHA**\r\nSi no la tienes: \"¬øQu√© d√≠a te gustar√≠a venir?\"\r\nSi la tienes: Calcula fecha exacta (ej: \"ma√±ana\" = calcular YYYY-MM-DD) y confirma en lenguaje natural.\r\n\r\n**Paso 2 ‚Üí HORA**\r\nSi no la tienes: \"¬øA qu√© hora prefieres?\"\r\nSi la tienes: Convierte a formato 24h (ej: \"9 de la noche\" = 21:00) ‚Üí **NO confirmes todav√≠a, pasa al Paso 3**\r\n\r\n‚ö†Ô∏è **IMPORTANTE:** Las reservas son cada {{ $json.restaurant_context.settings.slot_duration }} minutos.\r\nPuedes aceptar horas como: 14:00, 14:30, 15:00, 15:30, 20:00, 20:30, 21:00, 21:30, etc.\r\n\r\n‚ö†Ô∏è **PROHIBIDO confirmar la hora sin verificar disponibilidad primero**\r\n\r\n**Paso 3 ‚Üí PERSONAS**\r\nSi no las tienes: \"¬øCu√°ntos ser√©is?\"\r\nSi las tienes: Confirma el n√∫mero.\r\n\r\n**Paso 4 ‚Üí ZONA (OBLIGATORIO)**\r\n\r\n**SIEMPRE pregunta por la zona si el cliente NO la mencion√≥:**\r\n\r\n**Zonas disponibles:** {{ $json.restaurant_context.zones_summary }}\r\n\r\nPregunta: \"¬øTienes preferencia de zona? Tenemos: [lista solo las zonas disponibles del restaurante]\"\r\n\r\n**Casos especiales:**\r\n- Si ‚â• 8 personas Y \"privado\" est√° disponible ‚Üí Ofrecer sala privada\r\n- Si menciona \"tranquilo/√≠ntimo/rom√°ntico/especial/aniversario\" Y \"privado\" est√° disponible ‚Üí Ofrecer privado\r\n\r\n**Respuestas del cliente:**\r\n- Si especifica zona ‚Üí Usar esa zona (SOLO si est√° en available_zones)\r\n- Si dice \"me da igual\" / \"la que sea\" ‚Üí Usar `preferred_zone: \"any\"`\r\n\r\n**NO sigas al Paso 5 sin confirmar la zona o \"any\"**\r\n\r\n---\r\n\r\n**Paso 5 ‚Üí VERIFICAR DISPONIBILIDAD**\r\nCuando tengas fecha + hora + personas + zona:\r\n\r\n‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è **OBLIGATORIO ABSOLUTO - SIN EXCEPCIONES:**\r\n\r\n**ANTES de responder CUALQUIER COSA sobre la hora, DEBES:**\r\n1. Decir al cliente: \"Dame un segundo que lo compruebo...\"\r\n2. Llamar a `check_availability` (fecha YYYY-MM-DD, hora HH:MM:00, party_size n√∫mero, preferred_zone)\r\n3. ESPERAR la respuesta de la herramienta\r\n4. SOLO DESPU√âS responder al cliente seg√∫n el resultado\r\n\r\n**üö® PROHIBIDO ABSOLUTAMENTE:**\r\n‚ùå Confirmar horarios sin llamar primero a `check_availability`\r\n‚ùå Decir \"perfecto\", \"s√≠ tenemos\", \"est√° disponible\" sin verificar\r\n‚ùå Asumir que una hora est√° disponible\r\n‚ùå Saltarte este paso por cualquier motivo\r\n\r\n**La herramienta `check_availability` validar√° autom√°ticamente:**\r\n- Si el d√≠a est√° abierto\r\n- Si la hora est√° dentro del horario del restaurante\r\n- Si hay disponibilidad de mesas\r\n- Si cumple el tiempo m√≠nimo de antelaci√≥n\r\n\r\n**Paso 6 ‚Üí INFORMAR DISPONIBILIDAD**\r\n\r\n**Si `check_availability` devuelve error con mensaje \"tiempo m√≠nimo\" o \"anticipaci√≥n\":**\r\nResponde EXACTAMENTE lo que te dice el error. Ejemplo:\r\n\"Lo siento, necesitamos un m√≠nimo de 2 horas de antelaci√≥n para las reservas. ¬øTe ir√≠a bien a las [hora+1h] o [hora+2h]?\"\r\n‚Üí **NO crees la reserva, ofrece alternativas**\r\n\r\n**Si HAY disponibilidad (success: true):** \r\n\"¬°Perfecto! S√≠ tenemos disponibilidad [en zona] para [X] personas el [d√≠a] a las [hora].\"\r\n\r\n**Si NO HAY disponibilidad (available: false):** \r\n\"Esa hora est√° completa [en zona]. ¬øTe ir√≠a bien [alternativa del resultado]?\"\r\n\r\n**Paso 7 ‚Üí NOTAS ESPECIALES**\r\n\"¬øHay algo que necesites anotar? (Alergias, intolerancias, cumplea√±os, etc.)\"\r\n\r\n**REGLAS PARA NOTAS:**\r\n‚úÖ SOLO anotar, NUNCA ofrecer soluciones\r\n‚úÖ Si pide algo especial: \"Perfecto, lo anoto. Se lo pasaremos al encargado.\"\r\n‚ùå NO ofrezcas: decoraci√≥n, men√∫ especial, adaptaciones, mesas espec√≠ficas\r\n‚ùå NO prometas: \"tenemos sin gluten\", \"te traemos decoraci√≥n\"\r\n\r\nEjemplos:\r\n‚Ä¢ \"Es mi cumplea√±os\" ‚Üí \"¬°Perfecto! Lo anoto. ¬°Espero que lo pases genial!\"\r\n‚Ä¢ \"Soy cel√≠aco\" ‚Üí \"Anotado, se lo pasaremos al equipo.\"\r\n‚Ä¢ \"¬øPodemos tener decoraci√≥n?\" ‚Üí \"Lo anoto, el encargado lo revisar√° y te contactar√° si es posible.\"\r\n\r\n**Paso 8 ‚Üí CONFIRMAR Y CREAR**\r\n**OBLIGATORIO:** Pregunta expl√≠citamente (EN EL IDIOMA QUE EL CLIENTE TE EST√Å HABLANDO):\r\n\"Perfecto, {{ $json.customer_name }}. ¬øConfirmo tu reserva para [X] personas el [d√≠a] a las [hora] [en zona]?\"\r\n\r\n‚ö†Ô∏è **RECORDATORIO:** Si el cliente te habla en catal√°n, pregunta en catal√°n. Si te habla en ingl√©s, pregunta en ingl√©s. NUNCA en espa√±ol si el cliente no habla espa√±ol.\r\n\r\n‚ö†Ô∏è **ESPERA** respuesta afirmativa (\"S√≠\", \"Claro\", \"Vale\", \"Perfecto\", \"Adelante\", \"Ok\")\r\n\r\n**SOLO si confirma:**\r\n‚Üí Llama a `create_reservation` (silenciosamente)\r\n‚Üí Responde (EN EL IDIOMA DEL CLIENTE):\r\n\r\n\"¬°Listo, {{ $json.customer_name }}! Tu reserva est√° confirmada para el [d√≠a] a las [hora] para [X] personas [en zona].\r\n\r\n‚ö†Ô∏è Recibir√°s un WhatsApp de confirmaci√≥n antes de tu reserva. Por favor, resp√≥ndenos para mantenerla activa.\r\n\r\n[Si mencion√≥ celebraci√≥n:] ¬°Espero que pas√©is un [cumplea√±os/aniversario] maravilloso!\r\n\r\nSi necesitas algo m√°s, aqu√≠ estoy.\"\r\n\r\n‚ö†Ô∏è **RECORDATORIO FINAL:** Este mensaje DEBE estar en el idioma del cliente (catal√°n, ingl√©s, franc√©s, etc.), NO en espa√±ol si el cliente no habla espa√±ol.\r\n\r\n**Si NO confirma o duda:** NO crees reserva, escucha al cliente.\r\n\r\n**FIN** ‚Üí NO preguntes \"¬øalgo m√°s?\". PARA aqu√≠.\r\n\r\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\r\nüîÑ FLUJO DE MODIFICACI√ìN DE RESERVA\r\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\r\n\r\n**Para MODIFICAR una reserva = CREAR nueva + CANCELAR antigua**\r\n\r\n**PASO 1 ‚Üí Identificar qu√© quiere cambiar**\r\nCliente dice: \"Quiero cambiar mi reserva\" / \"En vez del mi√©rcoles, el jueves\"\r\nT√∫: Identifica qu√© datos cambian (fecha/hora/personas/zona)\r\n\r\n**PASO 2 ‚Üí Usar datos de la reserva existente**\r\n‚ö†Ô∏è **CR√çTICO:** Si el cliente dice \"todo igual\" o \"solo cambio X\":\r\n- Usa los datos de `active_reservations[0]` para lo que NO cambia\r\n- Ejemplo: Si solo cambia fecha, mant√©n hora, personas y zona originales\r\n\r\n**PASO 3 ‚Üí VERIFICAR DISPONIBILIDAD**\r\n‚ö†Ô∏è **OBLIGATORIO antes de modificar**\r\n\r\nT√∫: \"D√©jame un momento para verificar la disponibilidad para [nueva fecha/hora]...\"\r\n‚Üí Llama a `check_availability` con:\r\n  - Nueva fecha (si cambia) o fecha original\r\n  - Nueva hora (si cambia) o hora original\r\n  - Nuevo n√∫mero de personas (si cambia) o n√∫mero original\r\n  - Nueva zona (si cambia) o zona original\r\n\r\n**PASO 4 ‚Üí INFORMAR DISPONIBILIDAD**\r\nSi HAY: \"¬°Perfecto! S√≠ tenemos disponibilidad para [nueva fecha/hora] con [personas] personas [en zona].\"\r\nSi NO HAY: \"Esa [fecha/hora] est√° completa. ¬øTe ir√≠a bien [alternativa]?\"\r\n\r\n**PASO 5 ‚Üí CONFIRMAR CAMBIO**\r\n‚ö†Ô∏è **OBLIGATORIO:** Pregunta expl√≠citamente:\r\n\"¬øConfirmo el cambio entonces? Pasar√≠amos tu reserva del [fecha original] a las [hora original] al [fecha nueva] a las [hora nueva].\"\r\n\r\n**PASO 6 ‚Üí CREAR NUEVA RESERVA**\r\n**SOLO si el cliente confirma:**\r\n‚Üí Llama a `create_reservation` con los nuevos datos\r\n\r\n**PASO 7 ‚Üí CANCELAR RESERVA ANTIGUA**\r\n‚Üí Llama a `cancel_reservation` con el ID de la reserva original:\r\n```json\r\n{\r\n  \"reservation_id\": \"{{ $json.customer_context.active_reservations[0].reservation_id }}\",\r\n  \"cancellation_reason\": \"Reserva modificada por el cliente\",\r\n  \"restaurant_id\": \"{{ $json.restaurant_id }}\"\r\n}\r\n```\r\n\r\n**PASO 8 ‚Üí CONFIRMAR AL CLIENTE**\r\n‚Üí Responde (EN EL IDIOMA DEL CLIENTE):\r\n\"¬°Listo, {{ $json.customer_name }}! Tu reserva ha sido modificada. Ahora es para el [d√≠a nuevo] a las [hora nueva] para [X] personas [en zona].\r\n\r\n‚ö†Ô∏è Recibir√°s un WhatsApp de confirmaci√≥n antes de tu reserva. Por favor, resp√≥ndenos para mantenerla activa.\r\n\r\nSi necesitas algo m√°s, aqu√≠ estoy.\"\r\n\r\n‚ö†Ô∏è **RECORDATORIO:** Este mensaje DEBE estar en el idioma del cliente (catal√°n, ingl√©s, franc√©s, etc.), NO en espa√±ol si el cliente no habla espa√±ol.\r\n\r\n**EJEMPLO COMPLETO:**\r\n\r\nCliente: \"Quiero cambiar mi reserva del mi√©rcoles al jueves\"\r\nT√∫: \"¬°No te preocupes! D√©jame verificar la disponibilidad para el jueves a las 21:00 para 4 personas en el interior...\"\r\n‚Üí Llamas a `check_availability` (jueves, 21:00, 4 personas, interior)\r\nT√∫: \"¬°Perfecto! S√≠ tenemos disponibilidad para el jueves, 23 de octubre a las 21:00 para 4 personas en el interior. ¬øConfirmo el cambio?\"\r\nCliente: \"S√≠\"\r\n‚Üí Llamas a `create_reservation` (nueva reserva)\r\n‚Üí Llamas a `cancel_reservation` (antigua reserva)\r\nT√∫: \"¬°Listo, Gustau! Tu reserva ha sido modificada. Ahora es para el jueves, 23 de octubre a las 21:00 para 4 personas en el interior. Si necesitas algo m√°s, aqu√≠ estoy.\"\r\n\r\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\r\nüõ†Ô∏è HERRAMIENTAS\r\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\r\n\r\n‚ö†Ô∏è **CR√çTICO - IDIOMA Y HERRAMIENTAS:**\r\n\r\nCuando uses cualquier herramienta (tool), tu respuesta DESPU√âS de usarla DEBE seguir en el MISMO idioma que el cliente te est√° escribiendo.\r\n\r\n‚ùå **NO cambies de idioma despu√©s de llamar a una herramienta**\r\n‚úÖ **Mant√©n el idioma del cliente SIEMPRE**\r\n\r\nEjemplo:\r\n- Cliente escribe en catal√°n ‚Üí Usas `check_availability` ‚Üí Respondes en catal√°n\r\n- Cliente escribe en ingl√©s ‚Üí Usas `create_reservation` ‚Üí Respondes en ingl√©s\r\n\r\n---\r\n\r\n**1. check_availability** ‚Äî Verifica disponibilidad\r\n‚ö†Ô∏è **√öSALA SIEMPRE:**\r\n- Antes de crear una reserva nueva\r\n- Antes de modificar una reserva\r\n\r\n```json\r\n{\r\n  \"date\": \"2025-10-19\",\r\n  \"time\": \"20:00\",\r\n  \"party_size\": 4,\r\n  \"preferred_zone\": \"terraza\",\r\n  \"restaurant_id\": \"{{ $json.restaurant_id }}\"\r\n}\r\n```\r\nNota: `preferred_zone` usa SOLO las zonas disponibles del restaurante o \"any\"\r\n\r\n**2. create_reservation** ‚Äî Crea reserva\r\n‚ö†Ô∏è SOLO despu√©s de:\r\n1. Verificar disponibilidad con `check_availability`\r\n2. Confirmaci√≥n expl√≠cita del cliente\r\n\r\n```json\r\n{\r\n  \"reservation_date\": \"2025-10-19\",\r\n  \"reservation_time\": \"20:00\",\r\n  \"party_size\": 4,\r\n  \"preferred_zone\": \"terraza\",\r\n  \"special_requests\": \"\",\r\n  \"restaurant_id\": \"{{ $json.restaurant_id }}\",\r\n  \"customer_id\": \"{{ $json.customer_id }}\",\r\n  \"customer_phone\": \"{{ $json.customer_phone }}\",\r\n  \"customer_name\": \"{{ $json.customer_name }}\",\r\n  \"source\": \"agent_{{ $json.channel }}\"\r\n}\r\n```\r\n\r\n**3. cancel_reservation** ‚Äî Cancela reserva y libera slots\r\n```json\r\n{\r\n  \"reservation_id\": \"{{ $json.customer_context.active_reservations[0].reservation_id }}\",\r\n  \"cancellation_reason\": \"Cliente solicit√≥ cancelaci√≥n\",\r\n  \"restaurant_id\": \"{{ $json.restaurant_id }}\"\r\n}\r\n```\r\n\r\n**4. consultar_informacion_restaurante** ‚Äî INFO DEL RESTAURANTE\r\n\r\n‚ö†Ô∏è **USA ESTA HERRAMIENTA cuando el cliente pregunte sobre:**\r\n- Men√∫ (platos, bebidas, precios)\r\n- Servicios (parking, wifi, terraza, accesibilidad)\r\n- Pol√≠ticas (cancelaci√≥n, dep√≥sito, reservas)\r\n- Horarios, ubicaci√≥n o informaci√≥n general\r\n\r\n**OBLIGATORIO:**\r\n‚úÖ SIEMPRE usa esta herramienta ANTES de responder sobre men√∫/servicios\r\n‚ùå NUNCA inventes informaci√≥n sobre platos, precios o servicios\r\n\r\n**C√ìMO USARLA:**\r\nLa herramienta se llama autom√°ticamente. Solo formula tu pregunta en lenguaje natural seg√∫n el idioma del cliente.\r\n\r\nEjemplos:\r\n- Cliente: \"qu√® teniu de primers?\" ‚Üí Usas herramienta con: \"Quins primers plats hi ha al men√∫?\"\r\n- Cliente: \"¬øQu√© vinos ten√©is?\" ‚Üí Usas herramienta con: \"¬øQu√© vinos hay en la carta?\"\r\n- Cliente: \"Do you have parking?\" ‚Üí Usas herramienta con: \"Is there parking available?\"\r\n\r\n**IMPORTANTE:** La herramienta buscar√° en TODA la informaci√≥n del restaurante autom√°ticamente.\r\n\r\n**5. escalate_to_human** ‚Äî Escalar a humano\r\n√ösala si: cliente pide hablar con alguien, queja grave, situaci√≥n compleja.\r\n```json\r\n{\r\n  \"reason\": \"cliente_solicita\",\r\n  \"urgency\": \"high\",\r\n  \"customer_message\": \"{{ $json.user_message }}\",\r\n  \"conversation_id\": \"{{ $json.conversation_id }}\",\r\n  \"customer_phone\": \"{{ $json.customer_phone }}\",\r\n  \"restaurant_id\": \"{{ $json.restaurant_id }}\"\r\n}\r\n```\r\n\r\n**REGLAS PARA TODAS LAS HERRAMIENTAS:**\r\n- Fechas: SIEMPRE YYYY-MM-DD\r\n- Horas: SIEMPRE HH:MM (24h)\r\n- restaurant_id: SIEMPRE {{ $json.restaurant_id }}\r\n\r\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\r\nüéØ COMPORTAMIENTO\r\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\r\n\r\n**TU TRABAJO:**\r\n‚úì Gestionar reservas (fecha, hora, personas, zona)\r\n‚úì Validar d√≠a y horario ANTES de consultar disponibilidad\r\n‚úì Preguntar SIEMPRE por la zona\r\n‚úì Verificar disponibilidad SIEMPRE (crear Y modificar)\r\n‚úì Modificar = crear nueva + cancelar antigua\r\n‚úì Anotar peticiones especiales (NO resolverlas)\r\n‚úì Ser simp√°tica y cercana\r\n‚úì Recordar TODO lo que el cliente dice\r\n‚úì NUNCA crear/modificar sin confirmaci√≥n expl√≠cita\r\n‚úì Responder SIEMPRE en el idioma del cliente\r\n\r\n**PROHIBICIONES ABSOLUTAS:**\r\n‚ùå Repetir preguntas sobre datos ya proporcionados\r\n‚ùå Consultar disponibilidad si el d√≠a est√° cerrado o fuera de horario\r\n‚ùå Saltarte la pregunta de zona\r\n‚ùå Modificar sin verificar disponibilidad primero\r\n‚ùå Sonar como bot o formulario\r\n‚ùå Ofrecer servicios (decoraci√≥n, men√∫, adaptaciones)\r\n‚ùå Prometer: \"tenemos X\", \"te traemos Y\"\r\n‚ùå Crear/modificar sin confirmaci√≥n expl√≠cita\r\n‚ùå Cambiar de idioma durante la conversaci√≥n\r\n\r\n**TU PERSONALIDAD:**\r\n‚Ä¢ Profesional pero cercana (no fr√≠a, no rob√≥tica)\r\n‚Ä¢ Simp√°tica (celebra cumplea√±os, aniversarios)\r\n‚Ä¢ Paciente y clara\r\n‚Ä¢ Humilde (reconoces l√≠mites: \"Se lo pasaremos al encargado\")\r\n‚Ä¢ Humana (frases naturales)\r\n‚Ä¢ Pol√≠glota (hablas el idioma del cliente perfectamente)\r\n\r\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\r\nüîç CHECKLIST MENTAL ANTES DE RESPONDER\r\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\r\n\r\n‚òê ¬øEn qu√© idioma me est√° escribiendo el cliente? ‚Üí Responder en ESE idioma\r\n‚òê ¬øEl cliente YA me dio fecha/hora/personas? ‚Üí NO volver a preguntar\r\n‚òê ¬øEl d√≠a est√° cerrado o fuera de horario? ‚Üí NO consultar disponibilidad, avisar al cliente\r\n‚òê ¬øYa pregunt√© por la zona? ‚Üí Obligatorio antes de verificar disponibilidad\r\n‚òê ¬øEs una modificaci√≥n? ‚Üí Verificar disponibilidad, crear nueva, cancelar antigua\r\n‚òê ¬øYa verifiqu√© disponibilidad? ‚Üí Informar y confirmar con cliente\r\n‚òê ¬øCliente confirm√≥ expl√≠citamente? ‚Üí Solo entonces crear/cancelar\r\n‚òê ¬øInclu√≠ recordatorio 24h en mensaje final? ‚Üí Obligatorio\r\n‚òê ¬øVoy a llamar a una herramienta? ‚Üí Despu√©s, mantener el mismo idioma\r\n\r\n**Tu respuesta debe demostrar que ESCUCHASTE y RECORDASTE.**\r\n**Tu respuesta debe estar en el MISMO idioma que el cliente.**\r\n\r\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\r\n\r\nMENSAJE DEL CLIENTE:\r\n{{ $json.user_message }}\r\n\r\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -352,
        128
      ],
      "id": "043177ad-074f-4366-8599-7b1de0cc3eed",
      "name": "ü§ñ Super Agent (GPT-4o)"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('L√≥gica Hibrida').item.json.conversation_id }}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -624,
        560
      ],
      "id": "40612ea5-0adf-4b47-b7c0-a08c8924540b",
      "name": "üí≠ Memory (por conversaci√≥n)"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o"
        },
        "options": {
          "maxTokens": 500,
          "temperature": 0.7
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -880,
        544
      ],
      "id": "b5066ff9-b316-4744-8953-fdca9111bd23",
      "name": "OpenAI GPT-4o",
      "credentials": {
        "openAiApi": {
          "id": "zwtmjTlXACMvkqZx",
          "name": "OpenAi La-IA"
        }
      }
    },
    {
      "parameters": {
        "name": "get_restaurant_info",
        "description": "Obtiene informaci√≥n del restaurante: horarios, men√∫, servicios, ubicaci√≥n, pol√≠ticas, etc. √ösala cuando el cliente pregunte informaci√≥n general.",
        "workflowId": {
          "__rl": true,
          "value": "TOOL_GET_INFO_ID",
          "mode": "id"
        },
        "fields": {
          "values": [
            {
              "name": "info_type"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        -16,
        608
      ],
      "id": "61d97003-8c77-496e-9886-53e82688298f",
      "name": "üîß Tool: Info Restaurante"
    },
    {
      "parameters": {
        "jsCode": "// =====================================\n// NODO: üìù Formatear Historial\n// WORKFLOW: 3 - Super Agent H√≠brido (FINAL)\n// CORRECCI√ìN: Incluir respuestas del agente + OUTPUT ACTUAL\n// =====================================\n\nconst historyMessages = $input.all();\nconst contextData = $('üîó Fusionar Contexto Enriquecido').first().json;\n\nconsole.log('üìú Mensajes encontrados:', historyMessages.length);\n\n// Si no hay historial, devolver contexto sin historial\nif (historyMessages.length === 0) {\n  console.log('‚ÑπÔ∏è No hay historial previo (nueva conversaci√≥n)');\n  return [{\n    json: {\n      ...contextData,\n      conversation_history: ''\n    }\n  }];\n}\n\n// Verificar si la conversaci√≥n est√° activa (√∫ltimo mensaje < 15 minutos)\nconst now = Date.now();\nconst CONVERSATION_TIMEOUT = 15 * 60 * 1000; // 15 minutos\n\nconst lastMessage = historyMessages[historyMessages.length - 1].json;\nconst lastMessageTime = new Date(lastMessage.timestamp).getTime();\nconst timeSinceLastMessage = now - lastMessageTime;\n\nif (timeSinceLastMessage > CONVERSATION_TIMEOUT) {\n  console.log('‚è∞ Conversaci√≥n cerrada (>15 min). Iniciando nueva conversaci√≥n.');\n  return [{\n    json: {\n      ...contextData,\n      conversation_history: ''\n    }\n  }];\n}\n\n// Formatear historial para el prompt (INCLUYE RESPUESTAS DEL AGENTE)\nconst formattedHistory = historyMessages\n  .map(msg => {\n    const data = msg.json;\n    const sender = data.sender === 'customer' ? 'Cliente' : 'Agente';\n    return `${sender}: ${data.message_text}`;\n  })\n  .join('\\n');\n\nconsole.log('‚úÖ Historial formateado:', formattedHistory.substring(0, 200) + '...');\n\n// ‚úÖ‚úÖ‚úÖ A√ëADIR: Output actual del agente (si existe)\nconst agentOutput = $('ü§ñ Super Agent (GPT-4o)').first()?.json?.output || null;\n\nreturn [{\n  json: {\n    ...contextData,\n    conversation_history: formattedHistory,\n    current_agent_output: agentOutput  // ‚úÖ A√ëADIDO\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -32,
        128
      ],
      "id": "9256016b-d116-440a-960a-95f47ca3b83e",
      "name": "üì§ Procesar Respuesta"
    },
    {
      "parameters": {
        "tableId": "agent_messages",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "conversation_id",
              "fieldValue": "={{ $json.conversation_id }}"
            },
            {
              "fieldId": "restaurant_id",
              "fieldValue": "={{ $json.restaurant_id }}"
            },
            {
              "fieldId": "customer_phone",
              "fieldValue": "={{ $json.customer_phone }}"
            },
            {
              "fieldId": "direction",
              "fieldValue": "outbound"
            },
            {
              "fieldId": "sender",
              "fieldValue": "agent"
            },
            {
              "fieldId": "message_text",
              "fieldValue": "={{ $json.current_agent_output }}"
            },
            {
              "fieldId": "timestamp",
              "fieldValue": "={{ $json.timestamp }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        240,
        -32
      ],
      "id": "c9dcf411-b8ae-4f9c-aca3-d332c0d5092c",
      "name": "üíæ Guardar Respuesta en BD",
      "credentials": {
        "supabaseApi": {
          "id": "9pdl4V7ImejCLZWo",
          "name": "Supabase La-IA"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "agent_conversations",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $json.conversation_id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "interaction_type",
              "fieldValue": "={{ $json.interaction_type }}"
            },
            {
              "fieldId": "status",
              "fieldValue": "active"
            },
            {
              "fieldId": "metadata",
              "fieldValue": "={{ $json.metadata_json }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        432,
        176
      ],
      "id": "b6f6bebd-f1e1-43d9-8fa8-4bfd355e9882",
      "name": "üîÑ Actualizar Conversaci√≥n",
      "credentials": {
        "supabaseApi": {
          "id": "9pdl4V7ImejCLZWo",
          "name": "Supabase La-IA"
        }
      }
    },
    {
      "parameters": {
        "from": "={{ $('üì§ Procesar Respuesta').item.json.restaurant_context.channels.whatsapp.phone_number }}",
        "to": "={{ $('üì§ Procesar Respuesta').item.json.customer_phone }}",
        "toWhatsapp": true,
        "message": "={{ $json.message_text }}",
        "options": {}
      },
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [
        464,
        -32
      ],
      "id": "33dd81d2-7e20-4b27-ac32-f16145267f1f",
      "name": "üì± Enviar WhatsApp",
      "credentials": {
        "twilioApi": {
          "id": "KZF7OfG2zH2XYZAQ",
          "name": "Twilio account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.user_message }}",
        "messages": {
          "messageValues": [
            {
              "type": "HumanMessagePromptTemplate",
              "message": "=Eres un clasificador r√°pido de intenciones para un sistema de reservas de restaurante.\n\nTu √∫nica tarea es analizar el mensaje del cliente y devolver un JSON simple con:\n1. **intent**: La intenci√≥n principal\n2. **sentiment**: El tono emocional\n3. **confidence**: Tu nivel de confianza (0.0 a 1.0)\n\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\nüìã INTENCIONES DISPONIBLES\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\n**reservation** - Quiere hacer una nueva reserva\n- \"quiero reservar\", \"una mesa para\", \"quisiera ir\", \"para cenar\"\n\n**modification** - Quiere cambiar una reserva existente\n- \"cambiar\", \"modificar\", \"mover la reserva\", \"en vez del\", \"pasar al\"\n\n**cancellation** - Quiere cancelar su reserva\n- \"cancelar\", \"anular\", \"no puedo ir\", \"tengo que cancelar\"\n\n**inquiry** - Preguntas sobre el restaurante\n- \"¬ød√≥nde est√°?\", \"horario\", \"men√∫\", \"hay mesas\", \"disponibilidad\"\n\n**complaint** - Quejas o problemas\n- \"problema\", \"queja\", \"mal servicio\", \"insatisfecho\", \"decepcionado\"\n\n**thanks** - Agradecimientos o despedidas\n- \"gracias\", \"perfecto\", \"vale\", \"ok\", \"adi√≥s\", \"hasta luego\"\n\n**other** - No encaja en ninguna categor√≠a anterior\n\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\nüòä SENTIMENT\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\n**positive** - Tono alegre, agradecido, satisfecho\n- \"genial\", \"perfecto\", \"excelente\", \"encantado\", \"me encanta\"\n\n**neutral** - Sin emoci√≥n clara, solo informaci√≥n\n- \"quiero reservar para 4\", \"¬øa qu√© hora abren?\"\n\n**negative** - Molesto, decepcionado, frustrado\n- \"malo\", \"decepcionado\", \"problema\", \"tard√≥ mucho\", \"mal\"\n\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\nüéØ FORMATO DE RESPUESTA\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\nResponde SIEMPRE en formato JSON v√°lido (sin markdown, sin ```json):\n\n{\n  \"intent\": \"reservation\",\n  \"sentiment\": \"neutral\",\n  \"confidence\": 0.95\n}\n\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\nüìå EJEMPLOS\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\nMensaje: \"Hola, quiero reservar para 4 personas ma√±ana\"\n{\n  \"intent\": \"reservation\",\n  \"sentiment\": \"neutral\",\n  \"confidence\": 0.98\n}\n\nMensaje: \"Necesito cambiar mi reserva del viernes al s√°bado\"\n{\n  \"intent\": \"modification\",\n  \"sentiment\": \"neutral\",\n  \"confidence\": 0.95\n}\n\nMensaje: \"Tengo que cancelar mi reserva\"\n{\n  \"intent\": \"cancellation\",\n  \"sentiment\": \"neutral\",\n  \"confidence\": 0.96\n}\n\nMensaje: \"¬øTen√©is mesa libre para 6 personas el s√°bado?\"\n{\n  \"intent\": \"inquiry\",\n  \"sentiment\": \"neutral\",\n  \"confidence\": 0.92\n}\n\nMensaje: \"Muchas gracias, perfecto!\"\n{\n  \"intent\": \"thanks\",\n  \"sentiment\": \"positive\",\n  \"confidence\": 0.97\n}\n\nMensaje: \"El servicio fue p√©simo\"\n{\n  \"intent\": \"complaint\",\n  \"sentiment\": \"negative\",\n  \"confidence\": 0.98\n}\n\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\nüìù MENSAJE A CLASIFICAR\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\nCliente: {{ $json.customer_name }}\nTel√©fono: {{ $json.customer_phone }}\n\nMensaje:\n{{ $json.user_message }}\n\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\nAnaliza el mensaje y devuelve SOLO el JSON (sin markdown, sin explicaciones).\n\n\n\n"
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        -2624,
        224
      ],
      "id": "2264503b-9f0e-4b00-8d60-71c62dea7cbf",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "jsCode": "// =====================================\n// NODO: üîÄ Preparar Actualizaci√≥n\n// TIPO: Code\n// POSICI√ìN: ANTES de \"üîÑ Actualizar Conversaci√≥n\"\n// =====================================\n\nconst data = $input.first().json;\n\n// Mapeo profesional de intents espa√±ol ‚Üí ingl√©s (valores v√°lidos en BD)\nconst intentMap = {\n  'reservar': 'reservation',\n  'modificar': 'modification',\n  'modificaci√≥n': 'modification',\n  'cancelar': 'cancellation',\n  'cancelaci√≥n': 'cancellation',\n  'consultar': 'inquiry',\n  'consulta': 'inquiry',\n  'queja': 'complaint',\n  'quejas': 'complaint',\n  'feedback': 'feedback',         // ‚ú® NUEVO\n  'opini√≥n': 'feedback',          // ‚ú® NUEVO\n  'valoraci√≥n': 'feedback',       // ‚ú® NUEVO\n  'satisfacci√≥n': 'feedback',     // ‚ú® NUEVO\n  'informaci√≥n': 'inquiry',\n  'info': 'inquiry',\n  'otro': 'other'\n};\n\n// Obtener el intent de la clasificaci√≥n\nconst intent = data.classification?.intent || 'consultar';\nconst interactionType = intentMap[intent.toLowerCase()] || 'inquiry';\n\n// Preparar metadata completa y estructurada\nconst metadata = {\n  classification: {\n    intent: data.classification.intent,\n    entities: data.classification.entities || {},\n    sentiment: data.classification.sentiment || 'neutral',\n    confidence: data.classification.confidence || 0,\n    reasoning: data.classification.reasoning || ''\n  },\n  last_response_at: new Date().toISOString(),\n  agent_response: data.agent_response,\n  response_timestamp: data.timestamp,\n  // Si es feedback solicitado, incluir contexto\n  is_solicited_feedback: data.is_solicited_feedback || false,\n  campaign_id: data.campaign_id || null\n};\n\n// Logs para debugging (producci√≥n)\nconsole.log('üîÄ Preparando actualizaci√≥n conversaci√≥n:');\nconsole.log(`   Intent original: ${intent}`);\nconsole.log(`   Interaction type mapeado: ${interactionType}`);\nconsole.log(`   Sentiment: ${metadata.classification.sentiment}`);\nconsole.log(`   Conversation ID: ${data.conversation_id}`);\n\nreturn {\n  conversation_id: data.conversation_id,\n  interaction_type: interactionType,\n  status: 'active',\n  metadata: metadata  // ‚úÖ Ya es objeto, NO hacer JSON.stringify aqu√≠\n};\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        240,
        176
      ],
      "id": "973c9655-b81c-44c4-9dff-82198dbe2201",
      "name": "üîÄ Preparar Actualizaci√≥n"
    },
    {
      "parameters": {
        "jsCode": "// =============================================\n// L√ìGICA H√çBRIDA INTELIGENTE\n// Detecta si estamos EN MEDIO de una conversaci√≥n\n// =============================================\n\nconst context = $input.first().json;\nconst intent = context.classification?.intent || 'otro';\nconst sentiment = context.classification?.sentiment || 'neutral';\nconst userMessage = context.user_message || '';\nconst customerName = context.customer_name || '';\nconst restaurantName = context.restaurant_context?.name || 'nuestro restaurante';\n\n// ‚úÖ NUEVO: Detectar si hay conversaci√≥n activa\nconst conversationHistory = context.conversation_history || '';\nconst pastConversations = context.past_conversations_summary || '';\n\nconsole.log('üîÄ Evaluando l√≥gica h√≠brida:', { \n  intent, \n  sentiment,\n  hasHistory: conversationHistory.length > 0\n});\n\n// =============================================\n// REGLA #1: SI HAY HISTORIAL ‚Üí SIEMPRE AL LLM\n// (Estamos en medio de una conversaci√≥n)\n// =============================================\n\nif (conversationHistory && conversationHistory.length > 0) {\n  console.log('üí¨ HAY HISTORIAL DE CONVERSACI√ìN ‚Üí TODO AL LLM');\n  console.log('üìú Historial:', conversationHistory.substring(0, 100) + '...');\n  \n  return {\n    ...context,\n    use_fixed_response: false,\n    use_llm: true,\n    should_escalate: false\n  };\n}\n\n// =============================================\n// REGLA #2: PRIMER MENSAJE - EVALUAR CASOS ESPECIALES\n// =============================================\n\nconsole.log('üÜï Primer mensaje de la conversaci√≥n ‚Üí Evaluar casos especiales');\n\n// 1. FEEDBACK MUY POSITIVO ‚Üí Respuesta fija + cerrar\nif (intent === 'feedback' && sentiment === 'positive') {\n  console.log('‚úÖ Feedback positivo (primer mensaje) ‚Üí Respuesta fija + cerrar');\n  return {\n    ...context,\n    use_fixed_response: true,\n    use_llm: false,\n    fixed_message: `¬°Muchas gracias por tu opini√≥n, ${customerName}! Nos alegra much√≠simo que hayas disfrutado tu visita en ${restaurantName} üòä`,\n    action: \"close\",\n    should_escalate: false\n  };\n}\n\n// 2. CLIENTE PIDE HUMANO EXPL√çCITAMENTE ‚Üí Respuesta fija + escalar\nconst msgLower = userMessage.toLowerCase().trim();\nconst humanKeywords = [\n  'hablar con el encargado',\n  'hablar con el gerente',\n  'hablar con una persona',\n  'persona real',\n  'pasar con el encargado',\n  'quiero hablar con'\n];\n\nif (humanKeywords.some(keyword => msgLower.includes(keyword))) {\n  console.log('‚úÖ Cliente pide humano (primer mensaje) ‚Üí Respuesta fija + escalar');\n  return {\n    ...context,\n    use_fixed_response: true,\n    use_llm: false,\n    fixed_message: \"Por supuesto, te paso con el encargado. Un momento, por favor.\",\n    action: \"escalate\",\n    should_escalate: true,\n    escalate_reason: \"cliente_solicita\",\n    escalate_urgency: \"medium\"\n  };\n}\n\n// 3. QUEJA GRAVE ‚Üí Respuesta fija + escalar urgente\nif (intent === 'complaint' && sentiment === 'negative') {\n  console.log('‚úÖ Queja grave (primer mensaje) ‚Üí Respuesta fija + escalar urgente');\n  return {\n    ...context,\n    use_fixed_response: true,\n    use_llm: false,\n    fixed_message: `Lamentamos much√≠simo las molestias, ${customerName}. El encargado de ${restaurantName} ha sido notificado y te contactar√° en breve para resolver esta situaci√≥n.`,\n    action: \"escalate\",\n    should_escalate: true,\n    escalate_reason: \"queja_grave\",\n    escalate_urgency: \"high\",\n    log_negative_feedback: true\n  };\n}\n\n// =============================================\n// REGLA #3: TODOS LOS DEM√ÅS CASOS ‚Üí LLM\n// =============================================\n\nconsole.log('ü§ñ Caso est√°ndar (primer mensaje) ‚Üí LLM');\n\nreturn {\n  ...context,\n  use_fixed_response: false,\n  use_llm: true,\n  should_escalate: false\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -816,
        112
      ],
      "id": "6332d9e8-6036-4d1d-95fe-5255a6cdde20",
      "name": "L√≥gica Hibrida"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "08b22e33-ae4a-41d8-bfb5-3bc31019f9d2",
              "leftValue": "={{ $json.use_fixed_response }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -640,
        112
      ],
      "id": "ae5f401c-2de0-466b-9ffe-eed223c19554",
      "name": "If ‚ùì ¬øUsar Respuesta Fija?"
    },
    {
      "parameters": {
        "jsCode": "const data = $input.first().json;\n\nreturn {\n  conversation_id: data.conversation_id,\n  customer_id: data.customer_id,\n  customer_phone: data.customer_phone,\n  customer_name: data.customer_name,\n  restaurant_id: data.restaurant_id,\n  channel: data.channel,\n  user_message: data.user_message,  // ‚úÖ A√ëADIDO: Mensaje original del cliente\n  agent_response: data.fixed_message,\n  classification: data.classification,\n  timestamp: new Date().toISOString(),\n  should_escalate: data.should_escalate,\n  escalate_reason: data.escalate_reason,\n  escalate_urgency: data.escalate_urgency,\n  whatsapp_from: data.restaurant_context?.phone || '',\n  whatsapp_to: data.customer_phone\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -384,
        -48
      ],
      "id": "543105e5-6f40-4215-99d6-7761b9a8f483",
      "name": "üìù Preparar Respuesta Fija"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "496b72f8-fbc3-43cb-8ef1-22e8800a2b8c",
              "leftValue": "={{ $json.should_escalate }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -208,
        -48
      ],
      "id": "089a4c50-5fb4-4b3d-932d-d0028b7563ab",
      "name": "If ‚ùì ¬øNecesita Escalado?"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.3,
      "position": [
        464,
        608
      ],
      "id": "348d19de-0a2c-4c5b-b2c3-fb785cb20829",
      "name": "Tool  - üÜò Escalar a Humano"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "jckhPYnzXjqqF0Vv",
          "mode": "list",
          "cachedResultUrl": "/workflow/jckhPYnzXjqqF0Vv",
          "cachedResultName": " Agent IA ‚Äî TOOL 6 - Escalate to Human"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "conversation_id": "={{ $json.conversation_id }}",
            "customer_id": "={{ $json.customer_id }}",
            "customer_phone": "={{ $json.customer_phone }}",
            "customer_name": "={{ $json.customer_name }}",
            "restaurant_id": "={{ $json.restaurant_id }}",
            "channel": "={{ $json.channel }}",
            "user_message": "={{ $json.user_message }}",
            "timestamp": "={{ $json.timestamp }}",
            "reason": "={{ $json.escalate_reason || 'cliente_solicita' }}",
            "urgency": "={{ $json.escalate_urgency || 'high' }}"
          }
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.3,
      "position": [
        32,
        -192
      ],
      "id": "c6fc34dd-61aa-4c85-91f5-ed5fa4e4d5d1",
      "name": "Call 'TOOL 6 - Escalate to Human'"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "agent_messages",
        "limit": 10,
        "filters": {
          "conditions": [
            {
              "keyName": "conversation_id",
              "condition": "eq",
              "keyValue": "={{ $('üîó Fusionar Contexto Enriquecido').item.json.conversation_id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1504,
        128
      ],
      "id": "956eca80-8f8d-414c-b6a9-c7bb3255562b",
      "name": "üìú Cargar Historial Conversaci√≥n",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "9pdl4V7ImejCLZWo",
          "name": "Supabase La-IA"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "jsCode": "const historyMessages = $input.all();\nconst contextData = $('üîó Fusionar Contexto Enriquecido').item.json;\n\nconsole.log('üìú Mensajes encontrados:', historyMessages.length);\n\n// Si no hay historial, devolver contexto sin historial\nif (historyMessages.length === 0) {\n  console.log('‚ÑπÔ∏è No hay historial previo (nueva conversaci√≥n)');\n  return {\n    ...contextData,\n    conversation_history: ''\n  };\n}\n\n// Verificar si la conversaci√≥n est√° activa (√∫ltimo mensaje < 15 minutos)\nconst now = Date.now();\nconst CONVERSATION_TIMEOUT = 15 * 60 * 1000; // 15 minutos\n\nconst lastMessage = historyMessages[historyMessages.length - 1].json;\nconst lastMessageTime = new Date(lastMessage.timestamp).getTime();\nconst timeSinceLastMessage = now - lastMessageTime;\n\nif (timeSinceLastMessage > CONVERSATION_TIMEOUT) {\n  console.log('‚è∞ Conversaci√≥n cerrada (>15 min). Iniciando nueva conversaci√≥n.');\n  return {\n    ...contextData,\n    conversation_history: ''\n  };\n}\n\n// Formatear historial para el prompt\nconst formattedHistory = historyMessages\n  .map(msg => {\n    const data = msg.json;\n    const sender = data.sender === 'customer' ? 'Cliente' : 'Agente';\n    return `${sender}: ${data.message_text}`;\n  })\n  .join('\\n');\n\nconsole.log('‚úÖ Historial formateado:', formattedHistory.substring(0, 200) + '...');\n\nreturn {\n  ...contextData,\n  conversation_history: formattedHistory\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1328,
        128
      ],
      "id": "9fe53fee-659e-460e-8362-592f6681dbfd",
      "name": "üìù Formatear Historial"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "agent_conversations",
        "limit": 3,
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "customer_phone",
              "condition": "eq",
              "keyValue": "={{ $('üìù Formatear Historial').item.json.customer_phone }}"
            },
            {
              "keyName": "restaurant_id",
              "condition": "eq",
              "keyValue": "={{ $('üìù Formatear Historial').item.json.restaurant_id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1152,
        112
      ],
      "id": "735e6c36-784b-4c9f-8213-bdea66aa328e",
      "name": "üìö Cargar 3 Conversaciones Pasadas",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "9pdl4V7ImejCLZWo",
          "name": "Supabase La-IA"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "jsCode": "const pastConversations = $input.all();\nconst currentContext = $('üìù Formatear Historial').item.json;\nconst currentConvId = currentContext.conversation_id;\n\nconsole.log('üìö Conversaciones cargadas:', pastConversations.length);\n\n// Filtrar para excluir la conversaci√≥n actual\nconst filteredPast = pastConversations.filter(conv => {\n  return conv.json.id !== currentConvId;\n});\n\nconsole.log('üìö Conversaciones pasadas (excluyendo actual):', filteredPast.length);\n\nif (filteredPast.length === 0) {\n  console.log('‚ÑπÔ∏è No hay historial de conversaciones pasadas');\n  return {\n    ...currentContext,\n    past_conversations_summary: ''\n  };\n}\n\n// Formatear historial de conversaciones pasadas\nconst formattedPast = filteredPast\n  .slice(0, 3)  // Solo las 3 m√°s recientes\n  .map(conv => {\n    const data = conv.json;\n    const date = new Date(data.created_at);\n    const now = new Date();\n    \n    // Calcular hace cu√°nto tiempo\n    const diffMs = now - date;\n    const diffHours = Math.floor(diffMs / 1000 / 60 / 60);\n    const diffDays = Math.floor(diffHours / 24);\n    \n    let timeAgo;\n    if (diffHours < 24) {\n      timeAgo = `hace ${diffHours} horas`;\n    } else if (diffDays < 7) {\n      timeAgo = `hace ${diffDays} d√≠as`;\n    } else {\n      timeAgo = date.toLocaleDateString('es-ES');\n    }\n    \n    // Extraer resumen\n    const outcome = data.outcome || 'sin resultado';\n    const interactionType = data.interaction_type || 'consulta';\n    \n    return `‚Ä¢ ${timeAgo}: ${interactionType} (${outcome})`;\n  })\n  .join('\\n');\n\nconsole.log('‚úÖ Historial pasado formateado:', formattedPast);\n\nreturn {\n  ...currentContext,\n  past_conversations_summary: formattedPast\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -976,
        112
      ],
      "id": "a8a639b3-6755-4452-8bd1-a6804b21d405",
      "name": "üìù Formatear Historial Pasado"
    },
    {
      "parameters": {
        "jsCode": "// Parsear clasificaci√≥n del LLM\nconst inputData = $('üìã Preparar Input').item.json;\n\n// ‚úÖ‚úÖ‚úÖ NUEVO: Si viene directo del If (conversaci√≥n activa)\nconst vieneDelIf = $('If').item?.json !== undefined;\n\nif (vieneDelIf) {\n  console.log('‚úÖ CONVERSACI√ìN ACTIVA - Clasificaci√≥n ficticia');\n  return {\n    ...inputData,\n    classification: {\n      intent: 'conversation_active',\n      entities: {},\n      sentiment: 'neutral',\n      confidence: 1.0,\n      reasoning: 'Conversaci√≥n activa, salt√≥ clasificador'\n    },\n    intent: 'conversation_active',\n    entities: {},\n    sentiment: 'neutral',\n    confidence: 1.0\n  };\n}\n\n// ‚úÖ Si viene del clasificador, parsear normalmente\nconst llmResponse = $input.item.json.response || $input.item.json.text || '{}';\n\n// Limpiar markdown si lo hay\nlet cleanedResponse = llmResponse.replace(/```json\\n?/g, '').replace(/```\\n?/g, '').trim();\n\n// Parsear JSON\nlet classification;\ntry {\n  classification = JSON.parse(cleanedResponse);\n  console.log('‚úÖ Clasificaci√≥n exitosa:', classification);\n} catch (e) {\n  console.error('‚ùå Error parseando clasificaci√≥n:', e);\n  console.error('Respuesta recibida:', cleanedResponse);\n  classification = {\n    intent: 'consulta_general',\n    entities: {},\n    sentiment: 'neutral',\n    confidence: 0.5,\n    reasoning: 'Error en clasificaci√≥n, usando default'\n  };\n}\n\nreturn {\n  ...inputData,\n  classification: classification,\n  intent: classification.intent,\n  entities: classification.entities,\n  sentiment: classification.sentiment,\n  confidence: classification.confidence\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2336,
        96
      ],
      "id": "38c1e87f-af43-4486-b07d-2858598b6e35",
      "name": "üìä Parsear Clasificaci√≥n"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "reservations",
        "returnAll": true,
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "restaurant_id",
              "condition": "eq",
              "keyValue": "={{ $json.restaurant_id }}"
            },
            {
              "keyName": "customer_phone",
              "condition": "eq",
              "keyValue": "={{ $json.customer_phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -2144,
        -16
      ],
      "id": "b14e1254-3184-49a6-a184-970a37dbc043",
      "name": "üìÖ Obtener Reservas Cliente",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "9pdl4V7ImejCLZWo",
          "name": "Supabase La-IA"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "restaurants",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "keyValue": "={{ $('üìä Parsear Clasificaci√≥n').item.json.restaurant_id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -2144,
        176
      ],
      "id": "379845f0-37e3-4cdd-b0df-fd465f1e4126",
      "name": "üè™ Obtener Info Restaurante",
      "credentials": {
        "supabaseApi": {
          "id": "9pdl4V7ImejCLZWo",
          "name": "Supabase La-IA"
        }
      }
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        -1808,
        112
      ],
      "id": "a0e77354-dda6-42a2-926d-e8af7cdee2b0",
      "name": "Merge"
    },
    {
      "parameters": {
        "description": "Consulta la disponibilidad del restaurante para una fecha, hora y n√∫mero de personas espec√≠ficos. √ösala cuando el cliente pregunte si hay disponibilidad ANTES de crear la reserva.",
        "workflowId": {
          "__rl": true,
          "value": "FRQJg700oLTF7dcG",
          "mode": "list",
          "cachedResultUrl": "/workflow/FRQJg700oLTF7dcG",
          "cachedResultName": " Agent IA ‚Äî üîß TOOL - Check Availability"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "party_size": "={{ $fromAI('party_size', ``, 'number') }}",
            "date": "={{ $fromAI('date', ``, 'string') }}",
            "time": "={{ $fromAI('time', ``, 'string') }}",
            "restaurant_id": "={{ $json.restaurant_id }}",
            "preferred_zone": "={{ $fromAI('preferred_zone', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "time",
              "displayName": "time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "party_size",
              "displayName": "party_size",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number",
              "removed": false
            },
            {
              "id": "preferred_zone",
              "displayName": "preferred_zone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "restaurant_id",
              "displayName": "restaurant_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        144,
        608
      ],
      "id": "4898df03-412f-4e53-822f-f3dd6154a538",
      "name": "üîß Tool: Consultar Disponibilidad"
    },
    {
      "parameters": {
        "jsCode": "// =============================================\n// FILTRAR SOLO RESERVAS ACTIVAS\n// =============================================\n\nconst reservas = $input.all();\n\nconsole.log('üìä Total reservas recibidas:', reservas.length);\n\n// Estados activos permitidos\nconst estadosActivos = ['pending', 'confirmed', 'pending_approval', 'seated'];\n\n// Filtrar solo las activas\nconst reservasActivas = reservas.filter(item => {\n  const status = item.json.status;\n  const esActiva = estadosActivos.includes(status);\n  \n  if (!esActiva) {\n    console.log(`‚ùå Excluida: ${item.json.id} - status: ${status}`);\n  }\n  \n  return esActiva;\n});\n\nconsole.log('‚úÖ Reservas activas filtradas:', reservasActivas.length);\n\n// Si no hay reservas activas, devolver array vac√≠o\nif (reservasActivas.length === 0) {\n  console.log('‚ÑπÔ∏è No hay reservas activas para este cliente');\n  return [];\n}\n\nreturn reservasActivas;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1984,
        -16
      ],
      "id": "0ec1a837-d855-4770-94ac-070a4f90d98d",
      "name": "üîç Filtrar Reservas Activas"
    },
    {
      "parameters": {
        "description": "Crea una nueva reserva en el restaurante. Usa esta herramienta cuando el cliente quiera hacer una reserva y tengas fecha, hora y n√∫mero de personas.",
        "workflowId": {
          "__rl": true,
          "value": "5LobAwicedK8INQQ",
          "mode": "list",
          "cachedResultUrl": "/workflow/5LobAwicedK8INQQ",
          "cachedResultName": " Agent IA ‚Äî üîß TOOL: create_reservation"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "party_size": "={{ $fromAI('party_size', ``, 'number') }}",
            "restaurant_id": "={{ $json.restaurant_id }}",
            "customer_id": "={{ $json.customer_id }}",
            "customer_phone": "= {{ $json.customer_phone }}",
            "customer_name": "={{ $json.customer_name }}",
            "reservation_date": "={{ $fromAI('reservation_date', ``, 'string') }}",
            "reservation_time": "={{ $fromAI('reservation_time', ``, 'string') }}",
            "preferred_zone": "={{ $fromAI('preferred_zone', ``, 'string') }}",
            "special_requests": "={{ $fromAI('special_requests', ``, 'string') }}",
            "source": "={{ $json.source }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "restaurant_id",
              "displayName": "restaurant_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "customer_id",
              "displayName": "customer_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "customer_phone",
              "displayName": "customer_phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "customer_name",
              "displayName": "customer_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "reservation_date",
              "displayName": "reservation_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "reservation_time",
              "displayName": "reservation_time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "party_size",
              "displayName": "party_size",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number",
              "removed": false
            },
            {
              "id": "preferred_zone",
              "displayName": "preferred_zone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "special_requests",
              "displayName": "special_requests",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "source",
              "displayName": "source",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "channel",
              "displayName": "channel",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        304,
        608
      ],
      "id": "d240e109-a1cf-4159-b1eb-d6d1f7b3089d",
      "name": "üîß Tool: Crear Reserva"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c0016a61-0494-48d1-ab4c-0e4eb3d80fe2",
              "leftValue": "={{ $json.conversation_active}}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2800,
        112
      ],
      "id": "ea7b2af2-7e79-45fa-be28-91d94591a355",
      "name": "If"
    },
    {
      "parameters": {
        "description": "Cancela reserva y libera slots autom√°ticamente. Requiere reservation_id y restaurant_id.",
        "workflowId": {
          "__rl": true,
          "value": "DNWLHngb1pkeMddG",
          "mode": "list",
          "cachedResultUrl": "/workflow/DNWLHngb1pkeMddG",
          "cachedResultName": " Agent IA ‚Äî üîß TOOL ‚Äî cancel_reservation"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "reservation_id": "={{ $json.customer_context.active_reservations[0].reservation_id }}",
            "cancellation_reason": "={{ $fromAI('cancellation_reason', ``, 'string') }}",
            "restaurant_id": "={{ $json.restaurant_id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "reservation_id",
              "displayName": "reservation_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "restaurant_id",
              "displayName": "restaurant_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "cancellation_reason",
              "displayName": "cancellation_reason",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        -176,
        608
      ],
      "id": "d2baabde-3da0-4c70-8ba9-2f23dfdbb171",
      "name": "üîß Tool: Cancelar Reserva"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "sD6YMR51kFExy880",
          "mode": "list",
          "cachedResultUrl": "/workflow/sD6YMR51kFExy880",
          "cachedResultName": " Agent IA ‚Äî 04 - Post-Conversation Analyzer"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "aNumber": 0
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "aField",
              "displayName": "aField",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "aNumber",
              "displayName": "aNumber",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number",
              "removed": false
            },
            {
              "id": "thisFieldAcceptsAnyType",
              "displayName": "thisFieldAcceptsAnyType",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "anArray",
              "displayName": "anArray",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "array",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.3,
      "position": [
        688,
        -32
      ],
      "id": "95485037-f9a0-4c7c-8ddf-a60b43e250f2",
      "name": "Call '04 - Post-Conversation Analyzer'"
    }
  ],
  "connections": {
    "‚ñ∂Ô∏è Start (from Gateway)": {
      "main": [
        [
          {
            "node": "üìã Preparar Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìã Preparar Input": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üß† LLM Classifier (GPT-4o-mini)": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "üîó Fusionar Contexto Enriquecido": {
      "main": [
        [
          {
            "node": "üìú Cargar Historial Conversaci√≥n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ü§ñ Super Agent (GPT-4o)": {
      "main": [
        [
          {
            "node": "üì§ Procesar Respuesta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üí≠ Memory (por conversaci√≥n)": {
      "ai_memory": [
        [
          {
            "node": "ü§ñ Super Agent (GPT-4o)",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI GPT-4o": {
      "ai_languageModel": [
        [
          {
            "node": "ü§ñ Super Agent (GPT-4o)",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "üîß Tool: Info Restaurante": {
      "ai_tool": [
        [
          {
            "node": "ü§ñ Super Agent (GPT-4o)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "üì§ Procesar Respuesta": {
      "main": [
        [
          {
            "node": "üíæ Guardar Respuesta en BD",
            "type": "main",
            "index": 0
          },
          {
            "node": "üîÄ Preparar Actualizaci√≥n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üíæ Guardar Respuesta en BD": {
      "main": [
        [
          {
            "node": "üì± Enviar WhatsApp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üì± Enviar WhatsApp": {
      "main": [
        []
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "üìä Parsear Clasificaci√≥n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üîÄ Preparar Actualizaci√≥n": {
      "main": [
        [
          {
            "node": "üîÑ Actualizar Conversaci√≥n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "L√≥gica Hibrida": {
      "main": [
        [
          {
            "node": "If ‚ùì ¬øUsar Respuesta Fija?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If ‚ùì ¬øUsar Respuesta Fija?": {
      "main": [
        [
          {
            "node": "üìù Preparar Respuesta Fija",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ü§ñ Super Agent (GPT-4o)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìù Preparar Respuesta Fija": {
      "main": [
        [
          {
            "node": "If ‚ùì ¬øNecesita Escalado?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If ‚ùì ¬øNecesita Escalado?": {
      "main": [
        [
          {
            "node": "Call 'TOOL 6 - Escalate to Human'",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "üíæ Guardar Respuesta en BD",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tool  - üÜò Escalar a Humano": {
      "ai_tool": [
        [
          {
            "node": "ü§ñ Super Agent (GPT-4o)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "üìú Cargar Historial Conversaci√≥n": {
      "main": [
        [
          {
            "node": "üìù Formatear Historial",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìù Formatear Historial": {
      "main": [
        [
          {
            "node": "üìö Cargar 3 Conversaciones Pasadas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìö Cargar 3 Conversaciones Pasadas": {
      "main": [
        [
          {
            "node": "üìù Formatear Historial Pasado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìù Formatear Historial Pasado": {
      "main": [
        [
          {
            "node": "L√≥gica Hibrida",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìä Parsear Clasificaci√≥n": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          },
          {
            "node": "üè™ Obtener Info Restaurante",
            "type": "main",
            "index": 0
          },
          {
            "node": "üìÖ Obtener Reservas Cliente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìÖ Obtener Reservas Cliente": {
      "main": [
        [
          {
            "node": "üîç Filtrar Reservas Activas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üè™ Obtener Info Restaurante": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "üîó Fusionar Contexto Enriquecido",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üîß Tool: Consultar Disponibilidad": {
      "ai_tool": [
        [
          {
            "node": "ü§ñ Super Agent (GPT-4o)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "üîç Filtrar Reservas Activas": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "üîß Tool: Crear Reserva": {
      "ai_tool": [
        [
          {
            "node": "ü§ñ Super Agent (GPT-4o)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "üìä Parsear Clasificaci√≥n",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üîß Tool: Cancelar Reserva": {
      "ai_tool": [
        [
          {
            "node": "ü§ñ Super Agent (GPT-4o)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {
    "‚ñ∂Ô∏è Start (from Gateway)": [
      {
        "conversation_id": "35b4fce0-a529-499e-b6e2-a3fa39ad3138",
        "restaurant_id": "d6b63130-1ebf-4284-98fc-a3b31a85d9d1",
        "customer_id": "ff4bccb3-17e6-47c3-8c54-898bb1ebf8f0",
        "customer_name": "Gustau",
        "customer_phone": "+34671126148",
        "channel": "whatsapp",
        "user_message": "si gracias!",
        "timestamp": "2025-10-19T18:46:26.080Z",
        "conversation_active": true
      }
    ]
  },
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "968c65341fc947850f62b4a42d249947219a244717952c0dbaf2b62952e73bd9"
  }
}