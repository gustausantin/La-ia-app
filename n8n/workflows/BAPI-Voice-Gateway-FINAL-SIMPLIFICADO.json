{
  "name": "BAPI Voice Gateway - Simplificado SIP",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "twilio-voice-inbound",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [-1200, 60],
      "id": "5916c979-492f-427f-b97f-41fbbc7fd12e",
      "name": "üìû Webhook TWILIO",
      "webhookId": "twilio-voice-inbound-refactored"
    },
    {
      "parameters": {
        "jsCode": "// NODO: üìù Normalizar Input TWILIO\nconst body = $input.first().json.body;\n\n// Extraer el n√∫mero al que el cliente ha llamado (el de tu negocio)\nconst businessPhone = body.To;\n// Extraer el n√∫mero del cliente que llama\nconst customerPhone = body.From;\n\nif (!businessPhone) {\n  throw new Error('‚ùå No se pudo identificar el \"To\" (businessPhone) desde Twilio.');\n}\nif (!customerPhone) {\n  throw new Error('‚ùå No se pudo identificar el \"From\" (customerPhone) desde Twilio.');\n}\n\nreturn {\n  business_phone: businessPhone,\n  customer_phone: customerPhone\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [-1000, 60],
      "id": "451e532d-7646-4aec-a8ff-62c5ba02d012",
      "name": "üìù Normalizar Input TWILIO"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "restaurants",
        "filters": {
          "conditions": [
            {
              "keyName": "channels.voice.phone_number",
              "condition": "eq",
              "keyValue": "={{ $json.business_phone }}"
            },
            {
              "keyName": "active",
              "condition": "eq",
              "keyValue": "true"
            }
          ]
        },
        "options": {
          "limit": 1
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [-800, 60],
      "id": "c6b5b4b2-b8ec-452b-b74e-ba22b9aa7311",
      "name": "üîç Get Negocio (por Tel√©fono)",
      "credentials": {
        "supabaseApi": {
          "id": "9pdl4V7ImejCLZWo",
          "name": "Supabase La-IA"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "business-exists",
              "leftValue": "={{ $input.all().length }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "greater"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [-600, 60],
      "id": "f51a70ff-9428-4e55-8d5f-40c2656976ea",
      "name": "‚ùì Negocio Existe?"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "customers",
        "filters": {
          "conditions": [
            {
              "keyName": "restaurant_id",
              "condition": "eq",
              "keyValue": "={{ $node[\"üè™ Preparar Datos de Negocio\"].json.restaurant_id }}"
            },
            {
              "keyName": "phone",
              "condition": "eq",
              "keyValue": "={{ $node[\"üè™ Preparar Datos de Negocio\"].json.customer_phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [-200, 60],
      "id": "af23995a-6103-4e67-ba1b-5150cbefa1e9",
      "name": "üîç Buscar Cliente",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "9pdl4V7ImejCLZWo",
          "name": "Supabase La-IA"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "check-customer-exists",
              "leftValue": "={{ $input.all().length }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [0, 60],
      "id": "71cf6092-1282-4d21-81c4-50b4f2259e52",
      "name": "‚ùì ¬øCliente Existe?"
    },
    {
      "parameters": {
        "tableId": "customers",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "restaurant_id",
              "fieldValue": "={{ $node[\"üè™ Preparar Datos de Negocio\"].json.restaurant_id }}"
            },
            {
              "fieldId": "name",
              "fieldValue": "Cliente"
            },
            {
              "fieldId": "phone",
              "fieldValue": "={{ $node[\"üè™ Preparar Datos de Negocio\"].json.customer_phone }}"
            },
            {
              "fieldId": "segment_auto_v2",
              "fieldValue": "nuevo"
            },
            {
              "fieldId": "preferred_channel",
              "fieldValue": "voice"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [200, -40],
      "id": "57d57c3b-cd3b-42d0-80f1-488f7832bfc3",
      "name": "‚ûï Crear Cliente",
      "credentials": {
        "supabaseApi": {
          "id": "9pdl4V7ImejCLZWo",
          "name": "Supabase La-IA"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// NODO: üîó Fusionar Cliente\n// PROP√ìSITO: Unificar cliente existente o reci√©n creado\n\nconst businessData = $node[\"üè™ Preparar Datos de Negocio\"].json;\nconst customerData = $input.first().json;\n\nconsole.log('üîó Fusionando datos del cliente:', customerData.id);\n\nreturn {\n  ...businessData,\n  customer_id: customerData.id,\n  customer_name: customerData.name || 'Cliente',\n  customer_email: customerData.email || null\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [400, 60],
      "id": "a5f285f4-2814-4945-b957-d28e90dda28a",
      "name": "üîó Fusionar Cliente"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "reservations",
        "returnAll": true,
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "restaurant_id",
              "condition": "eq",
              "keyValue": "={{ $json.restaurant_id }}"
            },
            {
              "keyName": "customer_phone",
              "condition": "eq",
              "keyValue": "={{ $json.customer_phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [600, 60],
      "id": "dda94579-cf33-414c-94ec-dbb2a2a5ff71",
      "name": "üìÖ Get Reservas Activas",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "9pdl4V7ImejCLZWo",
          "name": "Supabase La-IA"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "jsCode": "// NODO: üõ†Ô∏è Construir Prompt Din√°mico\nconst fusion = $('üîó Fusionar Cliente').first().json;\nconst restaurant = fusion.restaurant_data;\nconst customerHistory = $('üìÖ Get Reservas Activas').all().json;\n\nconst settings = restaurant.settings || {};\nconst agentConfig = settings.agent || {};\nconst voiceConfig = (restaurant.channels || {}).voice || {};\n\nconst business_type = restaurant.business_type || 'negocio';\nconst services_json = restaurant.services_json || '[]';\nconst schedule = restaurant.schedule_text || 'Lunes a Viernes de 9 a 18h';\nconst transfer_phone = voiceConfig.transfer_phone || 'tel√©fono no disponible';\n\nlet basePrompt = agentConfig.system_prompt_base || \"Eres un asistente IA para [NOMBRE]. Tu objetivo es agendar citas. Tu horario es [HORARIO]. Los servicios son [SERVICIOS]. Si piden otra cosa, transfiere a [TELEFONO].\";\n\nbasePrompt = basePrompt\n  .replace(\"[NOMBRE]\", restaurant.name || 'el negocio')\n  .replace(\"[SERVICIOS]\", JSON.stringify(JSON.parse(services_json)))\n  .replace(\"[HORARIO]\", schedule)\n  .replace(\"[TELEFONO]\", transfer_phone);\n\nconst customerName = fusion.customer_name || 'cliente';\nconst historyCount = customerHistory.length || 0;\nconst customerContext = `\\n\\n--- Info del Cliente ---\\nEl cliente se llama ${customerName}.\\nSu ID es ${fusion.customer_id}.\\nTiene ${historyCount} reservas previas.`;\n\nconst fullPrompt = basePrompt + customerContext;\n\nconsole.log(\"PROMPT GENERADO: \", fullPrompt);\n\nreturn {\n  system_prompt: fullPrompt,\n  bapi_agent_id: agentConfig.bapi_agent_id || \"[ID_DE_TU_AGENTE_MAESTRO_BAPI]\"\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [800, 60],
      "id": "9d3fdd25-df8b-4181-8909-a89a3207b66f",
      "name": "üõ†Ô∏è Construir Prompt Din√°mico"
    },
    {
      "parameters": {
        "respondWith": "xml",
        "responseBody": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Response>\n    <Say voice=\"es-ES-Standard-A\">Lo sentimos, el n√∫mero al que ha llamado no est√° configurado en nuestro sistema. Adi√≥s.</Say>\n    <Hangup/>\n</Response>",
        "options": {
          "responseCode": 200,
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "application/xml"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [-400, 180],
      "id": "313ab1e5-8f47-49f2-8c2e-4b4130089e51",
      "name": "‚ùå Error: Negocio no encontrado"
    },
    {
      "parameters": {
        "jsCode": "// NODO: üè™ Preparar Datos de Negocio\n// PROP√ìSITO: Fusionar el input de Twilio con los datos del negocio\n\nconst normalized = $('üìù Normalizar Input TWILIO').first().json;\nconst business = $('üîç Get Negocio (por Tel√©fono)').first().json;\n\nif (!business) {\n  throw new Error(\"Error cr√≠tico: El nodo 'Get Negocio' no devolvi√≥ datos.\");\n}\n\nreturn {\n  ...normalized,\n  restaurant_id: business.id,\n  restaurant_name: business.name,\n  restaurant_data: business\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [-400, 60],
      "id": "658ca01c-8fd6-4793-969e-59777744419e",
      "name": "üè™ Preparar Datos de Negocio"
    },
    {
      "parameters": {
        "respondWith": "xml",
        "responseBody": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Response>\n    <Dial>\n        <Sip>\n            <Uri>sip:[TU_URL_SIP_DE_BAPI_AQUI]</Uri>\n            <Header name=\"X-Vapi-Assistant-Id\" value=\"{{ $node[\"üõ†Ô∏è Construir Prompt Din√°mico\"].json.bapi_agent_id }}\"/>\n            <Header name=\"X-Vapi-System-Prompt\" value=\"{{ $node[\"üõ†Ô∏è Construir Prompt Din√°mico\"].json.system_prompt }}\"/>\n        </Sip>\n    </Dial>\n</Response>",
        "options": {
          "responseCode": 200,
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "application/xml"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1000, 60],
      "id": "ebb1da0a-4459-4bda-9041-58fe0298e666",
      "name": "‚úÖ Responder a TWILIO (TwiML)",
      "notes": "‚ö†Ô∏è ACCI√ìN REQUERIDA:\nReemplaza [TU_URL_SIP_DE_BAPI_AQUI] con la URL SIP que obtuviste de BAPI.\nEjemplo: agente123@sip.vapi.ai"
    }
  ],
  "connections": {
    "üìû Webhook TWILIO": {
      "main": [
        [
          {
            "node": "üìù Normalizar Input TWILIO",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìù Normalizar Input TWILIO": {
      "main": [
        [
          {
            "node": "üîç Get Negocio (por Tel√©fono)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üîç Get Negocio (por Tel√©fono)": {
      "main": [
        [
          {
            "node": "‚ùì Negocio Existe?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚ùì Negocio Existe?": {
      "main": [
        [
          {
            "node": "üè™ Preparar Datos de Negocio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "‚ùå Error: Negocio no encontrado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üîç Buscar Cliente": {
      "main": [
        [
          {
            "node": "‚ùì ¬øCliente Existe?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚ùì ¬øCliente Existe?": {
      "main": [
        [
          {
            "node": "‚ûï Crear Cliente",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "üîó Fusionar Cliente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚ûï Crear Cliente": {
      "main": [
        [
          {
            "node": "üîó Fusionar Cliente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üîó Fusionar Cliente": {
      "main": [
        [
          {
            "node": "üìÖ Get Reservas Activas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìÖ Get Reservas Activas": {
      "main": [
        [
          {
            "node": "üõ†Ô∏è Construir Prompt Din√°mico",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üõ†Ô∏è Construir Prompt Din√°mico": {
      "main": [
        [
          {
            "node": "‚úÖ Responder a TWILIO (TwiML)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üè™ Preparar Datos de Negocio": {
      "main": [
        [
          {
            "node": "üîç Buscar Cliente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {}
}


