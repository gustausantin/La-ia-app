{
  "name": "3 -  Super Agent Híbrido (FINAL)",
  "nodes": [
    {
      "parameters": {},
      "id": "921a8009-4ad9-467f-ae40-31187e4f726b",
      "name": "▶️ Start (from Gateway)",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -2736,
        -192
      ]
    },
    {
      "parameters": {
        "jsCode": "// Preparar datos para el clasificador\nconst data = $input.item.json;\n\nconsole.log('📥 Datos recibidos del Gateway:', {\n  customer: data.customer_name,\n  phone: data.customer_phone,\n  message: data.user_message?.substring(0, 100)\n});\n\nreturn {\n  conversation_id: data.conversation_id,\n  customer_id: data.customer_id,\n  customer_name: data.customer_name,\n  customer_phone: data.customer_phone,\n  restaurant_id: data.restaurant_id,\n  channel: data.channel,\n  user_message: data.user_message,\n  timestamp: data.timestamp\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2544,
        -192
      ],
      "id": "f7d72267-2390-4eca-9366-828701014f25",
      "name": "📋 Preparar Input"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {
          "maxTokens": 200,
          "temperature": 0.1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -2336,
        48
      ],
      "id": "07ab77f3-cf7f-4f0f-8c8c-8577fa5d5994",
      "name": "🧠 LLM Classifier (GPT-4o-mini)",
      "credentials": {
        "openAiApi": {
          "id": "zwtmjTlXACMvkqZx",
          "name": "OpenAi La-IA"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// ✅ CÓDIGO OPTIMIZADO - SOLO DATOS NECESARIOS PARA EL AGENTE\n// Reduce de ~2,500 tokens a ~400 tokens (84% menos)\n\nconst allData = $input.all();\n\nconsole.log('📦 Datos recibidos del Merge:', allData.length, 'items');\n\n// Inicializar variables\nlet classifiedData, restaurant, reservations = [], operatingHours = [];\n\n// Recorrer todos los items del Merge\nfor (let i = 0; i < allData.length; i++) {\n  const item = allData[i];\n  const data = item.json;\n  \n  // Saltar si está vacío o es null\n  if (!data || Object.keys(data).length === 0) {\n    console.log(`⚠️ Item ${i} está vacío, saltando...`);\n    continue;\n  }\n  \n  // ✅ 1. CLASIFICACIÓN (puede venir en español o inglés)\n  if (data.classification || data.intent || data.intencion) {\n    classifiedData = data;\n    \n    // Normalizar a inglés si viene en español\n    if (data.classification && data.classification.intencion) {\n      classifiedData.intent = data.classification.intencion;\n      classifiedData.entities = data.classification.entidades || {};\n      classifiedData.confidence = data.classification.confianza || 0.5;\n      classifiedData.sentiment = data.classification.sentimiento || 'neutral';\n    } else if (data.intencion) {\n      classifiedData.intent = data.intencion;\n      classifiedData.entities = data.entidades || {};\n      classifiedData.confidence = data.confianza || 0.5;\n      classifiedData.sentiment = data.sentimiento || 'neutral';\n    }\n    \n    console.log('✅ Clasificación encontrada:', classifiedData.intent);\n  }\n  // ✅ 2. RESTAURANTE\n  else if (data.name && data.email && data.address) {\n    restaurant = data;\n    console.log('✅ Restaurante encontrado:', data.name);\n  }\n  // ✅ 3. RESERVA\n  else if (data.reservation_date) {\n    reservations.push(data);\n    console.log('✅ Reserva encontrada');\n  }\n  // ✅ 4. HORARIOS\n  else if (data.day_of_week && data.open_time) {\n    operatingHours.push(data);\n    console.log('✅ Horario encontrado:', data.day_of_week);\n  }\n}\n\n// ✅ VALIDACIONES\nif (!classifiedData) {\n  throw new Error('❌ No se encontró clasificación. Revisa que \"📊 Parsear Clasificación\" esté ejecutándose correctamente.');\n}\n\nif (!restaurant) {\n  throw new Error('❌ No se encontró info del restaurante. Revisa que \"🏪 Obtener Info Restaurante\" esté ejecutándose correctamente.');\n}\n\nconst settings = restaurant.settings || {};\nconst bookingSettings = settings.booking_settings || {};\n\n// Preparar resumen de reservas activas (compacto)\nconst reservationsSummary = reservations.length > 0 \n  ? reservations.map(r => `${r.reservation_date} ${r.reservation_time} (${r.party_size}p)`).join(', ')\n  : 'No tiene reservas activas';\n\n// Preparar horarios (compacto)\nlet hoursSummary = 'No disponible';\nif (operatingHours.length > 0) {\n  hoursSummary = operatingHours\n    .map(h => `${h.day_of_week.substring(0, 3)}: ${h.open_time}-${h.close_time}`)\n    .join(', ');\n} else if (settings.calendar_schedule && settings.calendar_schedule.length > 0) {\n  hoursSummary = settings.calendar_schedule\n    .filter(day => day.is_open)\n    .map(day => `${day.day_name}: ${day.open_time}-${day.close_time}`)\n    .join(', ');\n}\n\n// ✅ CONTEXTO OPTIMIZADO - SOLO LO ESENCIAL\nconst enrichedContext = {\n  // Identificadores\n  conversation_id: classifiedData.conversation_id,\n  customer_id: classifiedData.customer_id,\n  customer_name: classifiedData.customer_name,\n  customer_phone: classifiedData.customer_phone,\n  restaurant_id: classifiedData.restaurant_id,\n  channel: classifiedData.channel,\n  user_message: classifiedData.user_message,\n  timestamp: classifiedData.timestamp,\n  \n  // Clasificación (normalizada)\n  classification: {\n    intent: classifiedData.intent,\n    entities: classifiedData.entities || {},\n    sentiment: classifiedData.sentiment || 'neutral',\n    confidence: classifiedData.confidence || 0.5,\n    reasoning: classifiedData.reasoning || 'Clasificación automática'\n  },\n  \n  // Cliente (compacto)\n  customer_context: {\n    has_active_reservations: reservations.length > 0,\n    reservations_count: reservations.length,\n    reservations_summary: reservationsSummary\n  },\n  \n  // Restaurante (SOLO lo esencial)\n  restaurant_context: {\n    name: restaurant.name,\n    address: restaurant.address,\n    phone: restaurant.phone,\n    email: restaurant.email,\n    hours_summary: hoursSummary,\n    \n    // Settings esenciales (sin basura)\n    settings: {\n      reservation_duration: settings.reservation_duration || 90,\n      max_party_size: bookingSettings.max_party_size || 8,\n      min_booking_hours: bookingSettings.min_booking_hours || 2,\n      advance_booking_days: bookingSettings.advance_booking_days || 30,\n      cancellation_policy: bookingSettings.cancellation_policy || '24h'\n    },\n    \n    agent_name: settings.agent?.name || 'el asistente virtual'\n  }\n};\n\nconsole.log('✅ Contexto optimizado:', {\n  intent: enrichedContext.classification.intent,\n  confidence: enrichedContext.classification.confidence,\n  active_reservations: enrichedContext.customer_context.reservations_count,\n  tokens_estimados: JSON.stringify(enrichedContext).length / 4  // Estimación\n});\n\nreturn enrichedContext;\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1264,
        -176
      ],
      "id": "e01261c7-09a9-4336-b47f-da8539f0fab8",
      "name": "🔗 Fusionar Contexto Enriquecido"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.user_message }}",
        "options": {
          "systemMessage": "=Eres {{ $json.restaurant_context.agent_name }}, la asistente virtual de IA del restaurante {{ $json.restaurant_context.name }}. Tu misión es ser la mejor recepcionista posible: amable, eficiente, precisa y profesional. Gestionas reservas y consultas por WhatsApp con excelencia absoluta, pero siempre como una persona, nunca como un bot ni un formulario.\n\n═══════════════════════════════════════════════════════════════════\n📜 DIRECTIVA CENTRAL: LA CHECKLIST DE RESERVA\n═══════════════════════════════════════════════════════════════════\n\nTu objetivo principal es completar esta \"Checklist de Reserva\" paso a paso. NO puedes considerar tu trabajo terminado hasta que todos los puntos estén marcados:\n\n**CHECKLIST OBLIGATORIA:**\n☐ 1. FECHA obtenida y confirmada\n☐ 2. HORA obtenida y confirmada  \n☐ 3. NÚMERO DE PERSONAS obtenido y confirmado\n☐ 4. DISPONIBILIDAD verificada con herramienta \"Consultar disponibilidad\"\n☐ 5. NOMBRE del cliente confirmado (ya lo tienes: {{ $json.customer_name }})\n☐ 6. NOTAS ESPECIALES preguntadas (puede ser \"ninguna\")\n☐ 7. RESERVA CREADA con herramienta \"Crear reserva\"\n\n**REGLA DE ORO:** Avanza en orden. No saltes pasos. Una pregunta a la vez.\n\n═══════════════════════════════════════════════════════════════════\n🎭 PERSONALIDAD Y TONO\n═══════════════════════════════════════════════════════════════════\n\n**Eres así:**\n• Profesional pero cercana (equilibrio perfecto entre formalidad y calidez)\n• Paciente y clara (nunca te apresuras, explicas bien)\n• Resolutiva y positiva (encuentras soluciones, no problemas)\n• Confiable y tranquilizadora (transmites seguridad)\n\n**Tu estilo de comunicación:**\n• Frases concisas, naturales y directas\n• UNA pregunta a la vez (NUNCA agobies al cliente)\n• Lenguaje natural (evita jerga técnica, no suenes a formulario)\n• Actitud proactiva pero respetuosa (te anticipas, pero no interrumpes)\n• Si el cliente pide algo imposible (día cerrado, demasiadas personas), lo corriges con amabilidad y ofreces alternativas\n\n═══════════════════════════════════════════════════════════════════\n🧠 PRINCIPIOS FUNDAMENTALES\n═══════════════════════════════════════════════════════════════════\n\n**MEMORIA DE ELEFANTE:**\n• Nunca olvidas información ya proporcionada\n• Nunca repites preguntas sobre datos ya obtenidos\n• Mantienes el contexto durante toda la conversación\n\n**CLARIDAD ABSOLUTA:**\n• Una pregunta por turno → espera respuesta → siguiente pregunta\n• Confirmaciones claras: resume antes de proceder con acciones importantes\n• Comunicación directa, sin ambigüedades\n\n**PRECISIÓN TOTAL:**\n• PROHIBIDO inventar información que no tengas\n• Solo das datos verificados del contexto o herramientas\n• Si no sabes algo: \"Lo siento, no dispongo de esa información específica. Mi especialidad es gestionar reservas. ¿Puedo ayudarte con algo más?\"\n\n═══════════════════════════════════════════════════════════════════\n📚 INFORMACIÓN DEL RESTAURANTE (YA DISPONIBLE)\n═══════════════════════════════════════════════════════════════════\n\n**Datos básicos:**\n• Nombre: {{ $json.restaurant_context.name }}\n• Dirección: {{ $json.restaurant_context.address }}\n• Teléfono: {{ $json.restaurant_context.phone }}\n• Email: {{ $json.restaurant_context.email }}\n\n**Horarios de operación:**\n{{ $json.restaurant_context.hours_summary }}\n\n**Configuración de reservas:**\n• Duración estándar de reserva: {{ $json.restaurant_context.settings.reservation_duration }} minutos\n• Capacidad máxima por reserva: {{ $json.restaurant_context.settings.max_party_size }} personas\n• Horas mínimas de antelación: {{ $json.restaurant_context.settings.min_booking_hours }} horas\n• Días de anticipación máxima: {{ $json.restaurant_context.settings.advance_booking_days }} días\n• Política de cancelación: {{ $json.restaurant_context.settings.cancellation_policy }}\n\n═══════════════════════════════════════════════════════════════════\n👤 CONTEXTO DEL CLIENTE (YA DISPONIBLE)\n═══════════════════════════════════════════════════════════════════\n\n**Información del cliente:**\n• Nombre: {{ $json.customer_name }}\n• Teléfono: {{ $json.customer_phone }}\n\n**Reservas activas:**\n{{ $json.customer_context.reservations_summary }}\n\n**Nota importante:** Si el cliente tiene reservas activas y menciona \"mi reserva\" sin especificar, se refiere a alguna de las listadas arriba. Si NO tiene reservas activas, el campo dirá \"No tiene reservas activas\".\n\n═══════════════════════════════════════════════════════════════════\n🧠 ANÁLISIS PRE-PROCESADO (del sistema)\n═══════════════════════════════════════════════════════════════════\n\nYa se ha analizado el mensaje del cliente automáticamente:\n\n**Intención detectada:** {{ $json.classification.intent }}\n**Confianza:** {{ $json.classification.confidence }}\n**Sentimiento:** {{ $json.classification.sentiment }}\n\n**Entidades extraídas automáticamente:**\n{{ $json.classification.entities }}\n\n**IMPORTANTE:** Esta es información PRE-PROCESADA para ayudarte a ser más eficiente, pero SIEMPRE debes confirmar verbalmente con el cliente antes de actuar. No asumas nada sin confirmar.\n\n═══════════════════════════════════════════════════════════════════\n🛠️ HERRAMIENTAS DISPONIBLES (5 herramientas)\n═══════════════════════════════════════════════════════════════════\n\nTienes acceso a estas 5 herramientas especializadas. Úsalas en el momento correcto:\n\n───────────────────────────────────────────────────────────────────\n**1. Info del restaurante**\n───────────────────────────────────────────────────────────────────\n**¿Cuándo usarla?** Cuando el cliente pregunte sobre menú, ubicación, parking, servicios, horarios especiales, etc.\n\n**Parámetros:**\n• info_type: \"menu\" | \"servicios\" | \"ubicacion\" | \"horarios\" | \"parking\" | \"contacto\"\n\n**Ejemplo de uso:**\nCliente: \"¿Tenéis menú del día?\"\n→ Llama a herramienta: { \"info_type\": \"menu\" }\n→ Responde con la info recibida de forma natural\n\n───────────────────────────────────────────────────────────────────\n**2. Consultar disponibilidad**\n───────────────────────────────────────────────────────────────────\n**¿Cuándo usarla?** SOLO después de tener los 3 datos esenciales confirmados:\n• Fecha (YYYY-MM-DD)\n• Hora (HH:MM en formato 24h)\n• Número de personas (número entero)\n\n**Parámetros:**\n• date: \"YYYY-MM-DD\" (ejemplo: \"2025-10-20\")\n• time: \"HH:MM\" (ejemplo: \"20:00\")\n• party_size: número (ejemplo: 4)\n\n**Ejemplo de uso:**\nCliente confirma: \"Sí, para 4 personas el sábado 20 a las 8 de la tarde\"\n→ Llama a herramienta: { \"date\": \"2025-10-20\", \"time\": \"20:00\", \"party_size\": 4 }\n→ Espera respuesta del sistema\n→ Si hay disponibilidad: \"¡Perfecto! Sí tenemos mesa disponible.\"\n→ Si NO hay disponibilidad: \"Veo que esa hora está completa. ¿Te iría bien a las [hora_alternativa], o prefieres otro día?\"\n\n───────────────────────────────────────────────────────────────────\n**3. Crear reserva**\n───────────────────────────────────────────────────────────────────\n**¿Cuándo usarla?** SOLO cuando:\n✓ Disponibilidad confirmada (herramienta 2 ejecutada con éxito)\n✓ Nombre del cliente confirmado\n✓ Notas especiales preguntadas (puede ser vacío \"\")\n✓ Cliente ha confirmado que todo está correcto\n\n**Parámetros:**\n• reservation_date: \"YYYY-MM-DD\"\n• reservation_time: \"HH:MM\"\n• party_size: número\n• special_requests: \"texto libre o vacío\"\n\n**Ejemplo de uso:**\nDespués de confirmar disponibilidad y preguntar \"¿Alguna petición especial?\"\nCliente: \"No, todo bien\"\n→ Llama a herramienta: { \"reservation_date\": \"2025-10-20\", \"reservation_time\": \"20:00\", \"party_size\": 4, \"special_requests\": \"\" }\n→ NO avises al cliente que estás usando la herramienta (es silencioso)\n→ Después de ejecutarla: \"¡Listo, {{ $json.customer_name }}! Tu reserva está confirmada para el 20 de octubre a las 20:00 para 4 personas. Recibirás un WhatsApp de confirmación en breve.\"\n\n───────────────────────────────────────────────────────────────────\n**4. Modificar reserva**\n───────────────────────────────────────────────────────────────────\n**¿Cuándo usarla?** Cuando un cliente con reserva activa quiera cambiar fecha, hora o número de personas.\n\n**Parámetros:**\n• reservation_id: \"UUID de la reserva\" (búscalo en customer_context.reservations)\n• new_date: \"YYYY-MM-DD\" (opcional, solo si cambia)\n• new_time: \"HH:MM\" (opcional, solo si cambia)\n• new_party_size: número (opcional, solo si cambia)\n\n**Ejemplo de uso:**\nCliente: \"Quiero cambiar mi reserva a las 9 en vez de las 8\"\n→ Identifica la reserva actual del cliente\n→ Llama a herramienta: { \"reservation_id\": \"[UUID]\", \"new_time\": \"21:00\" }\n→ Confirma: \"Perfecto, he cambiado tu reserva a las 21:00.\"\n\n───────────────────────────────────────────────────────────────────\n**5. Cancelar reserva**\n───────────────────────────────────────────────────────────────────\n**¿Cuándo usarla?** Cuando un cliente quiera cancelar su reserva.\n\n**Parámetros:**\n• reservation_id: \"UUID de la reserva\"\n• cancellation_reason: \"texto libre\" (opcional)\n\n**Ejemplo de uso:**\nCliente: \"Necesito cancelar mi reserva\"\n→ Confirma: \"Claro, ¿es la reserva del [fecha] a las [hora]?\"\nCliente: \"Sí\"\n→ Llama a herramienta: { \"reservation_id\": \"[UUID]\", \"cancellation_reason\": \"Cliente solicitó cancelación\" }\n→ Confirma: \"Listo, tu reserva ha sido cancelada. Recibirás una confirmación por WhatsApp.\"\n\n═══════════════════════════════════════════════════════════════════\n🗣️ FLUJO DE CONVERSACIÓN PROFESIONAL (PASO A PASO)\n═══════════════════════════════════════════════════════════════════\n\n───────────────────────────────────────────────────────────────────\n**PASO 1: Saludo y detección de intención**\n───────────────────────────────────────────────────────────────────\n\n**Saludo de apertura:**\n\"¡Hola {{ $json.customer_name }}! Soy {{ $json.restaurant_context.agent_name }} de {{ $json.restaurant_context.name }}. ¿En qué puedo ayudarte?\"\n\n**Si ya detectaste la intención (gracias al análisis automático), sé más directa:**\n\n• **Intención: nueva_reserva o reserva**\n  → \"Perfecto, te ayudo encantada con tu reserva. ¿Qué día te gustaría venir?\"\n\n• **Intención: modificar_reserva o cambiar_reserva**\n  → \"Claro, te ayudo a modificar tu reserva. ¿Qué te gustaría cambiar?\"\n\n• **Intención: cancelar_reserva**\n  → \"Entendido, voy a ayudarte con la cancelación. [Si tiene reserva activa] ¿Es sobre tu reserva del [fecha]?\"\n\n• **Intención: consulta_menu o información**\n  → \"Por supuesto, te ayudo con eso. ¿Qué te gustaría saber?\"\n\n• **Intención: saludo**\n  → \"¡Hola! ¿En qué puedo ayudarte hoy?\"\n\n───────────────────────────────────────────────────────────────────\n**PASO 2: Proceso de reserva conversacional (uno a uno)**\n───────────────────────────────────────────────────────────────────\n\nRecoge los 3 datos esenciales **UNO A UNO**, con preguntas naturales:\n\n**2.1 → FECHA**\n\nPregunta natural:\n\"¿Qué día te gustaría venir?\"\n\n**Si el análisis automático ya extrajo una fecha:**\n\"¿Quieres venir el [fecha_extraída], correcto?\"\n\n**Si el cliente elige un día cerrado o inválido:**\n\"Lo siento, ese día no aceptamos reservas. Estamos abiertos: {{ $json.restaurant_context.hours_summary }}. ¿Te iría bien alguno de esos días?\"\n\n**IMPORTANTE:** Espera la respuesta del cliente antes de continuar.\n\n---\n\n**2.2 → HORA**\n\nPregunta natural:\n\"¿A qué hora prefieres?\"\n\n**Si ya tienes la hora del análisis automático:**\n\"¿A las [hora_extraída], verdad?\"\n\n**Si el cliente elige una hora fuera del horario:**\n\"Nuestro horario de reservas es [horario]. ¿Qué hora te iría mejor dentro de ese horario?\"\n\n**IMPORTANTE:** Espera la respuesta del cliente antes de continuar.\n\n---\n\n**2.3 → NÚMERO DE PERSONAS**\n\nPregunta natural:\n\"¿Cuántos seréis?\"\n\n**Si ya tienes el número del análisis automático:**\n\"¿Para [número] personas?\"\n\n**Si el número supera la capacidad máxima:**\n\"Solo aceptamos reservas de hasta {{ $json.restaurant_context.settings.max_party_size }} personas por mesa. Para grupos más grandes, puedo pasarte con el encargado para ver opciones. ¿Te parece?\"\n\n**IMPORTANTE:** Espera la respuesta del cliente antes de continuar.\n\n---\n\n**2.4 → RESUMEN Y CONFIRMACIÓN**\n\n**Si el cliente te dio varios datos a la vez, resume y confirma:**\n\"Perfecto, entonces para [X] personas el [día] a las [hora], ¿correcto?\"\n\n**Espera confirmación explícita** (\"Sí\", \"Correcto\", \"Exacto\") antes de continuar.\n\n───────────────────────────────────────────────────────────────────\n**PASO 3: Verificación de disponibilidad**\n───────────────────────────────────────────────────────────────────\n\nUna vez confirmados los 3 datos (fecha, hora, personas):\n\n\"Genial, dame un segundo que lo compruebo en el sistema...\"\n\n**→ USA LA HERRAMIENTA \"Consultar disponibilidad\"**\n\n**Después de recibir la respuesta:**\n\n• **Si HAY disponibilidad:**\n  \"¡Estupendo! Sí tenemos mesa disponible para esa fecha y hora.\"\n  → Pasa al PASO 4\n\n• **Si NO HAY disponibilidad:**\n  \"Veo que esa hora ya está completa. [Si el sistema da alternativas, menciónalas]. ¿Te iría bien [hora_alternativa], o prefieres que mire otro día?\"\n  → Espera respuesta y repite consulta si es necesario\n\n───────────────────────────────────────────────────────────────────\n**PASO 4: Cierre de la reserva**\n───────────────────────────────────────────────────────────────────\n\nUna vez confirmada la disponibilidad:\n\n**4.1 → Confirmar nombre** (ya lo tienes en el contexto)\n\"Perfecto, {{ $json.customer_name }}. ¿Alguna petición especial o nota que quieras añadir a la reserva?\"\n\n**Espera respuesta del cliente** (puede decir \"No\" o \"Ninguna\" o dar detalles).\n\n---\n\n**4.2 → Crear la reserva**\n\nCuando tengas todo (fecha, hora, personas, notas):\n\n**→ USA LA HERRAMIENTA \"Crear reserva\" (silenciosamente, NO avises al cliente)**\n\n---\n\n**4.3 → Confirmación final**\n\nDespués de ejecutar la herramienta exitosamente:\n\n\"¡Listo, {{ $json.customer_name }}! Tu reserva está confirmada para el [día] a las [hora] para [X] personas. Recibirás un WhatsApp de confirmación en breve. ¿Puedo ayudarte en algo más?\"\n\n───────────────────────────────────────────────────────────────────\n**PASO 5: Gestión de consultas en cualquier momento**\n───────────────────────────────────────────────────────────────────\n\nSi el cliente hace una pregunta sobre menú, servicios, parking, etc. **en cualquier momento del proceso**:\n\n1. **→ USA LA HERRAMIENTA \"Info del restaurante\"** con el tipo correcto\n2. Responde de forma natural con la información recibida\n3. **Retoma la reserva exactamente donde la dejaste**\n\n**Ejemplo:**\nCliente: \"¿Tenéis parking?\"\nTú: [Usas herramienta con info_type=\"parking\"]\nTú: \"Sí, tenemos parking disponible en [detalles]. Volviendo a tu reserva, me decías que para [X] personas, ¿verdad?\"\n\n───────────────────────────────────────────────────────────────────\n**PASO 6: Despedida profesional**\n───────────────────────────────────────────────────────────────────\n\nCuando todo esté resuelto y el cliente no necesite nada más:\n\n\"Ha sido un placer ayudarte, {{ $json.customer_name }}. ¡Que tengas un excelente día y nos vemos pronto en {{ $json.restaurant_context.name }}!\"\n\n═══════════════════════════════════════════════════════════════════\n🔄 ESCALADO A HUMANO\n═══════════════════════════════════════════════════════════════════\n\n**Cuándo escalar:**\n• Cliente solicita explícitamente hablar con una persona\n• Cliente muestra gran insatisfacción o enfado\n• Situación compleja fuera de tu alcance (grupos muy grandes, eventos especiales, etc.)\n\n**Respuesta de escalado:**\n\"Por supuesto, te paso con el encargado. Un momento, por favor.\"\n\n(En producción, esto transferiría la conversación a un humano del equipo)\n\n═══════════════════════════════════════════════════════════════════\n❌ PROHIBICIONES ESTRICTAS\n═══════════════════════════════════════════════════════════════════\n\n**NUNCA hagas:**\n❌ Usar jerga técnica (\"función\", \"parámetro\", \"sistema\", \"herramienta\", \"base de datos\")\n❌ Decir frases robotizadas tipo \"Dime día, hora y personas\" en una sola pregunta\n❌ Pedir datos que ya te han dado (tienes memoria de elefante)\n❌ Repetir preguntas sobre información ya obtenida\n❌ Inventar información que no tengas en el contexto o herramientas\n❌ Bombardear con múltiples preguntas a la vez\n❌ Sonar como un bot, formulario o máquina de preguntas\n❌ Usar la herramienta \"Crear reserva\" sin confirmar disponibilidad primero\n❌ Saltar pasos de la checklist\n\n**SIEMPRE haz:**\n✓ Escuchar primero, hablar después\n✓ Una pregunta a la vez, espera respuesta, siguiente pregunta\n✓ Corregir con amabilidad cuando algo no sea posible\n✓ Mantener conversación fluida, humana y profesional\n✓ Ofrecer alternativas cuando algo no esté disponible\n✓ Usar las herramientas de forma transparente (el cliente no debe saber que existen)\n✓ Confirmar SIEMPRE antes de ejecutar acciones irreversibles\n✓ Seguir la checklist en orden\n\n═══════════════════════════════════════════════════════════════════\n🎯 OBJETIVOS DE ÉXITO\n═══════════════════════════════════════════════════════════════════\n\n**Tu misión se considera exitosa cuando:**\n✓ Conversación natural y fluida (sin fricciones)\n✓ Datos precisos y verificados (nada inventado)\n✓ Cliente satisfecho (necesidad resuelta)\n✓ Reserva completada de principio a fin\n✓ Checklist completa con todos los puntos marcados\n✓ Cliente se despide contento\n\n═══════════════════════════════════════════════════════════════════\n\n**RECUERDA:** Eres la recepcionista ideal de {{ $json.restaurant_context.name }}: profesional, simpática, natural y resolutiva. No eres un robot, ni un formulario, ni una máquina de preguntas. Tu trabajo es que cada cliente se sienta escuchado, bien atendido y con ganas de volver.\n\n**MENSAJE DEL CLIENTE A RESPONDER:**\n{{ $json.user_message }}\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -1040,
        -176
      ],
      "id": "89f3f32c-af41-44da-b152-655dd2992e31",
      "name": "🤖 Super Agent (GPT-4o)"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('🔗 Fusionar Contexto Enriquecido').item.json.conversation_id }}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -992,
        80
      ],
      "id": "bfef5b2c-59f2-47e9-89a5-eb23b24c7487",
      "name": "💭 Memory (por conversación)"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o"
        },
        "options": {
          "maxTokens": 500,
          "temperature": 0.7
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1152,
        80
      ],
      "id": "51f40427-4026-4783-a9c2-4304aa637a1f",
      "name": "OpenAI GPT-4o",
      "credentials": {
        "openAiApi": {
          "id": "zwtmjTlXACMvkqZx",
          "name": "OpenAi La-IA"
        }
      }
    },
    {
      "parameters": {
        "name": "create_reservation",
        "description": "Crea una nueva reserva en el restaurante. Usa esta herramienta cuando el cliente quiera hacer una reserva y tengas fecha, hora y número de personas.",
        "workflowId": {
          "__rl": true,
          "value": "TOOL_CREATE_RESERVATION_ID",
          "mode": "id"
        },
        "fields": {
          "values": [
            {
              "name": "reservation_date"
            },
            {
              "name": "reservation_time"
            },
            {
              "name": "party_size"
            },
            {
              "name": "special_requests"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        -112,
        464
      ],
      "id": "5a012505-9813-4013-aab3-daa843243279",
      "name": "🔧 Tool: Crear Reserva"
    },
    {
      "parameters": {
        "name": "modify_reservation",
        "description": "Modifica una reserva existente. Usa esta herramienta cuando el cliente quiera cambiar fecha, hora o número de personas de su reserva.",
        "workflowId": {
          "__rl": true,
          "value": "TOOL_MODIFY_RESERVATION_ID",
          "mode": "id"
        },
        "fields": {
          "values": [
            {
              "name": "reservation_id"
            },
            {
              "name": "new_date"
            },
            {
              "name": "new_time"
            },
            {
              "name": "new_party_size"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        -288,
        464
      ],
      "id": "d8ecc213-ac39-44fc-967d-a15bccb476a4",
      "name": "🔧 Tool: Modificar Reserva"
    },
    {
      "parameters": {
        "name": "cancel_reservation",
        "description": "Cancela una reserva existente. Usa esta herramienta cuando el cliente quiera cancelar su reserva.",
        "workflowId": {
          "__rl": true,
          "value": "TOOL_CANCEL_RESERVATION_ID",
          "mode": "id"
        },
        "fields": {
          "values": [
            {
              "name": "reservation_id"
            },
            {
              "name": "cancellation_reason"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        -464,
        464
      ],
      "id": "04449d8e-221e-49ac-a08a-a3d789cedd3c",
      "name": "🔧 Tool: Cancelar Reserva"
    },
    {
      "parameters": {
        "name": "check_availability",
        "description": "Consulta la disponibilidad del restaurante para una fecha, hora y número de personas específicos. Úsala cuando el cliente pregunte si hay disponibilidad ANTES de crear la reserva.",
        "workflowId": {
          "__rl": true,
          "value": "TOOL_CHECK_AVAILABILITY_ID",
          "mode": "id"
        },
        "fields": {
          "values": [
            {
              "name": "date"
            },
            {
              "name": "time"
            },
            {
              "name": "party_size"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        -656,
        448
      ],
      "id": "5c2a48b5-712a-4ede-a490-e0dc5397cef8",
      "name": "🔧 Tool: Consultar Disponibilidad"
    },
    {
      "parameters": {
        "name": "get_restaurant_info",
        "description": "Obtiene información del restaurante: horarios, menú, servicios, ubicación, políticas, etc. Úsala cuando el cliente pregunte información general.",
        "workflowId": {
          "__rl": true,
          "value": "TOOL_GET_INFO_ID",
          "mode": "id"
        },
        "fields": {
          "values": [
            {
              "name": "info_type"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        -864,
        448
      ],
      "id": "c048a9b3-b25c-4d18-9b4d-f5f56037ef71",
      "name": "🔧 Tool: Info Restaurante"
    },
    {
      "parameters": {
        "jsCode": "// ✅ CÓDIGO CORREGIDO PARA \"📤 Procesar Respuesta\"\n// Copia este código en el nodo \"📤 Procesar Respuesta\"\n\nconst agentResponse = $input.item.json;\nconst contextData = $('🔗 Fusionar Contexto Enriquecido').item.json;\n\n// Extraer respuesta del agente\nconst finalMessage = agentResponse.output || agentResponse.text || 'Lo siento, no pude procesar tu solicitud. ¿Podrías reformular tu mensaje?';\n\nconsole.log('📤 Respuesta del Super Agent:', finalMessage.substring(0, 150));\n\n// ✅ OBTENER NÚMEROS DE TELÉFONO CORRECTAMENTE\n// Desde el contexto optimizado\nconst restaurantPhone = contextData.restaurant_context?.phone || '';\nconst customerPhone = contextData.customer_phone || '';\n\nconsole.log('📞 Teléfonos detectados:', {\n  from: restaurantPhone,\n  to: customerPhone\n});\n\n// Validar que los teléfonos existan\nif (!restaurantPhone || !customerPhone) {\n  throw new Error(`❌ Faltan números de teléfono. From: ${restaurantPhone}, To: ${customerPhone}`);\n}\n\nreturn {\n  conversation_id: contextData.conversation_id,\n  customer_id: contextData.customer_id,\n  customer_phone: customerPhone,\n  customer_name: contextData.customer_name,\n  restaurant_id: contextData.restaurant_id,\n  channel: contextData.channel,\n  agent_response: finalMessage,\n  classification: contextData.classification,\n  timestamp: new Date().toISOString(),\n  \n  // ✅ Para envío de WhatsApp (campos corregidos)\n  whatsapp_from: restaurantPhone,\n  whatsapp_to: customerPhone\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -624,
        -176
      ],
      "id": "240c14fa-f96a-49f4-b916-b1650c9a9dbb",
      "name": "📤 Procesar Respuesta"
    },
    {
      "parameters": {
        "tableId": "agent_messages",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "conversation_id",
              "fieldValue": "={{ $json.conversation_id }}"
            },
            {
              "fieldId": "restaurant_id",
              "fieldValue": "={{ $json.restaurant_id }}"
            },
            {
              "fieldId": "direction",
              "fieldValue": "outbound"
            },
            {
              "fieldId": "sender",
              "fieldValue": "agent"
            },
            {
              "fieldId": "message_text",
              "fieldValue": "={{ $json.agent_response }}"
            },
            {
              "fieldId": "timestamp",
              "fieldValue": "={{ $json.timestamp }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -256,
        -240
      ],
      "id": "94754491-85a4-42c5-ac39-3cce26159625",
      "name": "💾 Guardar Respuesta en BD",
      "credentials": {
        "supabaseApi": {
          "id": "9pdl4V7ImejCLZWo",
          "name": "Supabase La-IA"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "agent_conversations",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $json.conversation_id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "interaction_type",
              "fieldValue": "={{ $json.interaction_type }}"
            },
            {
              "fieldId": "status",
              "fieldValue": "active"
            },
            {
              "fieldId": "metadata",
              "fieldValue": "={{ $json.metadata_json }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -48,
        48
      ],
      "id": "b9bf78c1-1d6c-4fae-9983-098cad25dc54",
      "name": "🔄 Actualizar Conversación",
      "credentials": {
        "supabaseApi": {
          "id": "9pdl4V7ImejCLZWo",
          "name": "Supabase La-IA"
        }
      }
    },
    {
      "parameters": {
        "from": "={{ $('📤 Procesar Respuesta').item.json.whatsapp_from }}",
        "to": "={{ $('📤 Procesar Respuesta').item.json.whatsapp_to }}",
        "toWhatsapp": true,
        "message": "={{ $('📤 Procesar Respuesta').item.json.agent_response }}",
        "options": {}
      },
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [
        16,
        -240
      ],
      "id": "14330948-a576-4343-a86b-33a8f8eeb5f3",
      "name": "📱 Enviar WhatsApp",
      "credentials": {
        "twilioApi": {
          "id": "KZF7OfG2zH2XYZAQ",
          "name": "Twilio account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.user_message }}",
        "messages": {
          "messageValues": [
            {
              "type": "HumanMessagePromptTemplate",
              "message": "=Eres un clasificador experto de intenciones para un sistema de gestión de restaurantes. Tu única tarea es analizar el mensaje del cliente y devolver un JSON estructurado con la intención, entidades extraídas, sentiment y nivel de confianza.\n\n---\n\n## 📋 CONTEXTO DISPONIBLE\n\n**Cliente:**\n- Nombre: {{ $json.customer_name }}\n- Teléfono: {{ $json.customer_phone }}\n\n**Fecha y hora actual:**\n- Fecha: {{ $now.format('yyyy-MM-dd') }} ({{ $now.format('EEEE') }})\n- Hora: {{ $now.format('HH:mm') }}\n\n**Mensaje del cliente:**\n\"{{ $json.user_message }}\"\n\n---\n\n## 🎯 TU TAREA:\n\nDevuelve un JSON con esta estructura EXACTA:\n\n```json\n{\n  \"intent\": \"reservar|modificar|cancelar|consultar|queja|feedback|otro\",\n  \"entities\": {},\n  \"sentiment\": \"positive|neutral|negative\",\n  \"confidence\": 0.95,\n  \"reasoning\": \"Breve explicación\"\n}\n```\n\n---\n\n## 📖 REGLAS DE CLASIFICACIÓN:\n\n### INTENT:\n- **reservar**: Quiere hacer una nueva reserva\n- **modificar**: Quiere cambiar una reserva existente (fecha, hora, personas)\n- **cancelar**: Quiere anular una reserva\n- **consultar**: Pregunta información (horarios, menú, ubicación, disponibilidad)\n- **queja**: Expresa insatisfacción, problema o reclamo\n- **feedback**: Comparte opinión/experiencia (positiva o negativa) DESPUÉS de haber visitado el restaurante\n- **otro**: No encaja en ninguna categoría anterior\n\n### SENTIMENT (MUY IMPORTANTE):\n\n**positive** → Mensaje con tono:\n- Alegre, agradecido, satisfecho, elogios\n- Palabras clave: \"excelente\", \"increíble\", \"genial\", \"perfecto\", \"encantado\", \"maravilloso\", \"espectacular\", \"volveremos\", \"nos encantó\", \"recomendamos\"\n\n**neutral** → Mensaje informativo:\n- Sin emoción clara, transaccional, solo datos\n- Ejemplos: \"Quiero reservar para 4\", \"¿A qué hora abren?\", \"Necesito cambiar la reserva\"\n\n**negative** → Mensaje con tono:\n- Molesto, decepcionado, frustrado, queja\n- Palabras clave: \"malo\", \"decepcionado\", \"problema\", \"error\", \"tardó mucho\", \"frío\", \"sucio\", \"mala atención\", \"nunca más\"\n\n### CONFIDENCE:\n- **0.9-1.0**: Muy claro, sin ambigüedad\n- **0.7-0.89**: Bastante claro, probable\n- **0.5-0.69**: Dudoso, podría ser otra cosa\n- **<0.5**: Muy ambiguo o mensaje confuso\n\n### ENTITIES:\n\nExtrae información relevante según el intent:\n\n**Para reservas/modificaciones:**\n- `fecha` (formato texto: \"mañana\", \"sábado\", \"15 de octubre\")\n- `hora` (formato: \"20:00\", \"8 de la noche\")\n- `numero_personas` (número entero)\n\n**Para cancelaciones/modificaciones:**\n- `nombre_reserva` (nombre bajo el que está la reserva)\n- `motivo` (razón del cambio/cancelación)\n\n**Para consultas:**\n- `tema_consulta` (ej: \"horarios\", \"menú\", \"ubicación\")\n\n**Para quejas:**\n- `tipo_problema` (ej: \"reserva perdida\", \"mala atención\", \"comida fría\")\n- `aspecto_negativo` (qué salió mal)\n\n**Para feedback:**\n- `valoracion` (ej: \"excelente\", \"buena\", \"mala\")\n- `aspectos_positivos` (si los menciona)\n- `aspectos_negativos` (si los menciona)\n- `intencion_futura` (ej: \"volver\", \"recomendar\", \"nunca más\")\n\n---\n\n## 📚 EJEMPLOS:\n\n**Ejemplo 1: Reserva simple**\n```\nMensaje: \"Hola, quiero reservar para 4 personas mañana a las 20:00\"\n\nOutput:\n{\n  \"intent\": \"reservar\",\n  \"entities\": {\n    \"fecha\": \"mañana\",\n    \"hora\": \"20:00\",\n    \"numero_personas\": 4\n  },\n  \"sentiment\": \"neutral\",\n  \"confidence\": 0.95,\n  \"reasoning\": \"Solicitud clara de reserva con todos los detalles necesarios\"\n}\n```\n\n**Ejemplo 2: Feedback muy positivo**\n```\nMensaje: \"Todo estuvo excelente, la comida increíble y el servicio de 10. Volveremos seguro!\"\n\nOutput:\n{\n  \"intent\": \"feedback\",\n  \"entities\": {\n    \"valoracion\": \"excelente\",\n    \"aspectos_positivos\": [\"comida increíble\", \"servicio de 10\"],\n    \"intencion_futura\": \"volver\"\n  },\n  \"sentiment\": \"positive\",\n  \"confidence\": 0.98,\n  \"reasoning\": \"Feedback muy positivo tras visita, múltiples elogios y deseo de volver\"\n}\n```\n\n**Ejemplo 3: Queja clara**\n```\nMensaje: \"Muy decepcionado, la reserva se perdió y nadie nos atendió bien\"\n\nOutput:\n{\n  \"intent\": \"queja\",\n  \"entities\": {\n    \"tipo_problema\": \"reserva perdida\",\n    \"aspecto_negativo\": \"mala atención\"\n  },\n  \"sentiment\": \"negative\",\n  \"confidence\": 0.92,\n  \"reasoning\": \"Expresión clara de insatisfacción con el servicio recibido\"\n}\n```\n\n**Ejemplo 4: Consulta neutra**\n```\nMensaje: \"Hola, ¿a qué hora abren el sábado?\"\n\nOutput:\n{\n  \"intent\": \"consultar\",\n  \"entities\": {\n    \"tema_consulta\": \"horarios\",\n    \"dia\": \"sábado\"\n  },\n  \"sentiment\": \"neutral\",\n  \"confidence\": 0.90,\n  \"reasoning\": \"Consulta simple sobre información del restaurante\"\n}\n```\n\n**Ejemplo 5: Modificación**\n```\nMensaje: \"Necesito cambiar mi reserva del viernes de 4 a 6 personas\"\n\nOutput:\n{\n  \"intent\": \"modificar\",\n  \"entities\": {\n    \"dia\": \"viernes\",\n    \"numero_personas_nuevo\": 6,\n    \"cambio\": \"cantidad de personas\"\n  },\n  \"sentiment\": \"neutral\",\n  \"confidence\": 0.88,\n  \"reasoning\": \"Solicitud de modificación clara en cantidad de comensales\"\n}\n```\n\n---\n\n## ⚠️ IMPORTANTE:\n\n1. **Devuelve ÚNICAMENTE el JSON**, sin texto adicional, sin markdown (```json), sin explicaciones\n2. **Asegúrate de que el sentiment sea correcto**: si hay elogios → positive, si hay quejas → negative\n3. **Confidence alto (>0.9)** solo si estás muy seguro\n4. **Entities vacío `{}`** si no hay información relevante que extraer\n\n---\n\nAnaliza el mensaje del cliente y devuelve SOLO el JSON de clasificación.\n\n\n\n"
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        -2336,
        -192
      ],
      "id": "d2a63d57-4602-4822-a151-914949c04840",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "jsCode": "// Parsear clasificación del LLM\nconst inputData = $('📋 Preparar Input').item.json;\nconst llmResponse = $input.item.json.response || $input.item.json.text || '{}';\n\n// Limpiar markdown si lo hay\nlet cleanedResponse = llmResponse.replace(/```json\\n?/g, '').replace(/```\\n?/g, '').trim();\n\n// Parsear JSON\nlet classification;\ntry {\n  classification = JSON.parse(cleanedResponse);\n  console.log('✅ Clasificación exitosa:', classification);\n} catch (e) {\n  console.error('❌ Error parseando clasificación:', e);\n  console.error('Respuesta recibida:', cleanedResponse);\n  classification = {\n    intent: 'consulta_general',\n    entities: {},\n    sentiment: 'neutral',\n    confidence: 0.5,\n    reasoning: 'Error en clasificación, usando default'\n  };\n}\n\nreturn {\n  ...inputData,\n  classification: classification,\n  intent: classification.intent,\n  entities: classification.entities,\n  sentiment: classification.sentiment,\n  confidence: classification.confidence\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2032,
        -192
      ],
      "id": "8a6bee64-9d42-4111-ab44-545b5f400428",
      "name": "📊 Parsear Clasificación1"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "reservations",
        "returnAll": true,
        "filterType": "string",
        "filterString": "=customer_phone=eq.{{ $json.customer_phone }}&restaurant_id=eq.{{ $json.restaurant_id }}&status=in.(pending,confirmed,pending_approval)"
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1776,
        -352
      ],
      "id": "731ea876-e86d-4bfe-a033-013a11254693",
      "name": "📅 Obtener Reservas Cliente1",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "9pdl4V7ImejCLZWo",
          "name": "Supabase La-IA"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "restaurants",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "keyValue": "={{ $('📊 Parsear Clasificación1').item.json.restaurant_id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1776,
        -192
      ],
      "id": "873a3efe-5ee6-4cce-9706-9d21d6212aff",
      "name": "🏪 Obtener Info Restaurante1",
      "credentials": {
        "supabaseApi": {
          "id": "9pdl4V7ImejCLZWo",
          "name": "Supabase La-IA"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "restaurant_operating_hours",
        "returnAll": true,
        "filters": {
          "conditions": [
            {
              "keyName": "restaurant_id",
              "condition": "eq",
              "keyValue": "={{ $('📊 Parsear Clasificación1').item.json.restaurant_id }}"
            },
            {
              "keyName": "is_open",
              "condition": "eq",
              "keyValue": "true"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1776,
        16
      ],
      "id": "c5965f7d-3fce-4d52-9a5c-5913b2072ca0",
      "name": "🕐 Obtener Horarios1",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "9pdl4V7ImejCLZWo",
          "name": "Supabase La-IA"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "numberInputs": 4
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        -1520,
        -208
      ],
      "id": "79a7d728-fe66-42e7-949c-6aaf743ed8e8",
      "name": "Merge1"
    },
    {
      "parameters": {
        "jsCode": "// =====================================\n// NODO: 🔀 Preparar Actualización\n// TIPO: Code\n// POSICIÓN: ANTES de \"🔄 Actualizar Conversación\"\n// =====================================\n\nconst data = $input.first().json;\n\n// Mapeo profesional de intents español → inglés (valores válidos en BD)\nconst intentMap = {\n  'reservar': 'reservation',\n  'modificar': 'modification',\n  'modificación': 'modification',\n  'cancelar': 'cancellation',\n  'cancelación': 'cancellation',\n  'consultar': 'inquiry',\n  'consulta': 'inquiry',\n  'queja': 'complaint',\n  'quejas': 'complaint',\n  'feedback': 'feedback',         // ✨ NUEVO\n  'opinión': 'feedback',          // ✨ NUEVO\n  'valoración': 'feedback',       // ✨ NUEVO\n  'satisfacción': 'feedback',     // ✨ NUEVO\n  'información': 'inquiry',\n  'info': 'inquiry',\n  'otro': 'other'\n};\n\n// Obtener el intent de la clasificación\nconst intent = data.classification?.intent || 'consultar';\nconst interactionType = intentMap[intent.toLowerCase()] || 'inquiry';\n\n// Preparar metadata completa y estructurada\nconst metadata = {\n  classification: {\n    intent: data.classification.intent,\n    entities: data.classification.entities || {},\n    sentiment: data.classification.sentiment || 'neutral',\n    confidence: data.classification.confidence || 0,\n    reasoning: data.classification.reasoning || ''\n  },\n  last_response_at: new Date().toISOString(),\n  agent_response: data.agent_response,\n  response_timestamp: data.timestamp,\n  // Si es feedback solicitado, incluir contexto\n  is_solicited_feedback: data.is_solicited_feedback || false,\n  campaign_id: data.campaign_id || null\n};\n\n// Logs para debugging (producción)\nconsole.log('🔀 Preparando actualización conversación:');\nconsole.log(`   Intent original: ${intent}`);\nconsole.log(`   Interaction type mapeado: ${interactionType}`);\nconsole.log(`   Sentiment: ${metadata.classification.sentiment}`);\nconsole.log(`   Conversation ID: ${data.conversation_id}`);\n\nreturn {\n  conversation_id: data.conversation_id,\n  interaction_type: interactionType,\n  status: 'active',\n  metadata: metadata  // ✅ Ya es objeto, NO hacer JSON.stringify aquí\n};\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -240,
        48
      ],
      "id": "0e0d5d2e-086c-447c-8785-d711176480f4",
      "name": "🔀 Preparar Actualización"
    }
  ],
  "pinData": {
    "▶️ Start (from Gateway)": [
      {
        "json": {
          "conversation_id": "efe5be31-d6d6-421c-bed7-ab4aaa80e29c",
          "restaurant_id": "d6b63130-1ebf-4284-98fc-a3b31a85d9d1",
          "customer_id": "962e3287-d26c-4a37-93d5-2cf29f63efac",
          "customer_name": "Gustau",
          "customer_phone": "+34671126148",
          "channel": "whatsapp",
          "user_message": "Eii! hola!\nme gustaria reservar para mañana a las 20\nseriamos 4 va bien?",
          "timestamp": "2025-10-14T11:00:20.311Z"
        }
      }
    ]
  },
  "connections": {
    "▶️ Start (from Gateway)": {
      "main": [
        [
          {
            "node": "📋 Preparar Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "📋 Preparar Input": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🧠 LLM Classifier (GPT-4o-mini)": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "🔗 Fusionar Contexto Enriquecido": {
      "main": [
        [
          {
            "node": "🤖 Super Agent (GPT-4o)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🤖 Super Agent (GPT-4o)": {
      "main": [
        [
          {
            "node": "📤 Procesar Respuesta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "💭 Memory (por conversación)": {
      "ai_memory": [
        [
          {
            "node": "🤖 Super Agent (GPT-4o)",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI GPT-4o": {
      "ai_languageModel": [
        [
          {
            "node": "🤖 Super Agent (GPT-4o)",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "🔧 Tool: Crear Reserva": {
      "ai_tool": [
        [
          {
            "node": "🤖 Super Agent (GPT-4o)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "🔧 Tool: Modificar Reserva": {
      "ai_tool": [
        [
          {
            "node": "🤖 Super Agent (GPT-4o)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "🔧 Tool: Cancelar Reserva": {
      "ai_tool": [
        [
          {
            "node": "🤖 Super Agent (GPT-4o)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "🔧 Tool: Consultar Disponibilidad": {
      "ai_tool": [
        [
          {
            "node": "🤖 Super Agent (GPT-4o)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "🔧 Tool: Info Restaurante": {
      "ai_tool": [
        [
          {
            "node": "🤖 Super Agent (GPT-4o)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "📤 Procesar Respuesta": {
      "main": [
        [
          {
            "node": "💾 Guardar Respuesta en BD",
            "type": "main",
            "index": 0
          },
          {
            "node": "🔀 Preparar Actualización",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "💾 Guardar Respuesta en BD": {
      "main": [
        [
          {
            "node": "📱 Enviar WhatsApp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "📊 Parsear Clasificación1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "📊 Parsear Clasificación1": {
      "main": [
        [
          {
            "node": "📅 Obtener Reservas Cliente1",
            "type": "main",
            "index": 0
          },
          {
            "node": "🏪 Obtener Info Restaurante1",
            "type": "main",
            "index": 0
          },
          {
            "node": "🕐 Obtener Horarios1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "📅 Obtener Reservas Cliente1": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "🏪 Obtener Info Restaurante1": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "🕐 Obtener Horarios1": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "🔗 Fusionar Contexto Enriquecido",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🔀 Preparar Actualización": {
      "main": [
        [
          {
            "node": "🔄 Actualizar Conversación",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "458910aa-d377-4463-9ed1-76c167de2794",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "968c65341fc947850f62b4a42d249947219a244717952c0dbaf2b62952e73bd9"
  },
  "id": "Dctj1QcfrlJPbVGC",
  "tags": []
}